---
- "\"": [T: tanda kutif] # 0x22
- "#": [T: tagar] # 0x23
- "$": [T: dolar] # 0x24
- "%": [T: persen] # 0x25
- "&": [T: tanda dan] # 0x26
- "'": [T: apostrof] # 0x27
- "(": # 0x28
    - test:
        if: $SpeechStyle = 'ClearSpeak' or $SpeechStyle = 'SimpleSpeak'
        then:
          [
            test:
              {
                if: "$Verbosity='Terse'",
                then: { T: buka },
                else: { T: buka kurung },
              },
          ]
        else: [T: buka kurung]
- ")": # 0x29
    - test:
        if: $SpeechStyle = 'ClearSpeak' or $SpeechStyle = 'SimpleSpeak'
        then:
          [
            test:
              {
                if: "$Verbosity='Terse'",
                then: { T: tutup },
                else: { T: tutup kurung },
              },
          ]
        else: [T: tutup kurung]

- "*": [T: kali] # 0x2a
- "+": [T: tambah] # 0x2b
- ",": # 0x2c
    # the following deals with the interaction of "," with "…" which sometimes wants the ',' to be silent
    # that this test is here and not with "…" is not ideal, but seems simplest
    test:
      if:
        - "$SpeechStyle != 'ClearSpeak' or $ClearSpeak_Ellipses = 'Auto' or "
          # must be ClearSpeak and $ClearSpeak_Ellipses = 'AndSoOn'
          # speak "comma" when not adjacent to '…'
        - "( following-sibling::*[1][text()!= '…'] and preceding-sibling::*[1][text()!='…']  ) or "
          # except if expression starts with '…'
        - " ../*[1][text()='…'] "
      then: [T: '']
      # else silent

- "-": [T: kurang] # 0x2d
- ".": [T: titik] # 0x2e
- "/": [T: per] # 0x2f
- ":": [T: bagi] # 0x3a
- ";": [T: titik koma] # 0x3b
- "<": # 0x3c
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: '' }
    - T: kurang dari
- "=": [T: sama dengan] # 0x3d
- ">": # 0x3e
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: '' }
    - T: lebih besar dari
- "?": [T: tanda tanya] # 0x3f
- "@": [T: tanda at] # 0x40
- "[": # 0x5b
    - test:
        if: $SpeechStyle = 'ClearSpeak' or $SpeechStyle = 'SimpleSpeak'
        then: [T: buka kurung siku]
        else: [T: buka kurung siku]
- "\\": [T: back slash] # 0x5c
- "]": # 0x5d
    - test:
        if: $SpeechStyle = 'ClearSpeak' or $SpeechStyle = 'SimpleSpeak'
        then: [T: tutup kurung siku]
        else: [T: tutup kurung siku]
- "^": [T: hat] # 0x5e
- "_": [T: garis bawah] # 0x5f
- "`": [T: grave accent] # 0x60
- "{": # 0x7b
    - test:
        if: $SpeechStyle = 'ClearSpeak' or $SpeechStyle = 'SimpleSpeak'
        then: [T: buka kurung kurawal]
        else: [T: buka kurung kurawal]
- "|": # 0x7c
    # note: for ClearSpeak and SimpleSpeak, "|" in side of sets is handled at the mrow level, same for 'sets'
    - test:
        - if: $SpeechStyle != 'ClearSpeak'
          then: [T: garis vertikal]
        - else_if: "$ClearSpeak_VerticalLine = 'SuchThat'"
          then: [T: sedemikian sehingga]
        - else_if: "$ClearSpeak_VerticalLine = 'Given'"
          then: [T: diberikan]
        - else: [T: membagi]

- "}": # 0x7d
    - test:
        if: $SpeechStyle = 'ClearSpeak' or $SpeechStyle = 'SimpleSpeak'
        then: [T: tutup kurung kurawal]
        else: [T: tutup kurung kurawal]

- "~": [T: tilda] # 0x7e
- " ": [T: ''] # 0xa0
- "¢": [T: cent] # 0xa2
- "£": [T: pound] # 0xa3
- "¤": [T: tanda mata uang] # 0xa4
- "¥": [T: yen] # 0xa5
- "¦": [T: garis putus] # 0xa6
- "§": [T: bagian] # 0xa7
- "¨": [T: titik ganda] # 0xa8
- "©": [T: hak cipta] # 0xa9
- "ª": [T: indikator ordinal feminin] # 0xaa
- "¬": [T: bukan] # 0xac
- "«": [T: tanda kutip sudut ganda menunjuk ke kiri] # 0xab
- "°": [T: 'derajat'] # 0xb0
- "±": [T: tambah kurang] # 0xb1
- "²": [T: 'dua'] # 0xb2
- "³": [T: 'tiga'] # 0xb3
- "´": [T: 'akut'] # 0xb4
- "µ": [T: mikro] # 0xb5
- "¹": [T: satu] # 0xb9
- "º": [T: indikator ordinal maskulin] # 0xb9
- "·":
    - test:
        if: "$SpeechStyle != 'ClearSpeak' or $ClearSpeak_MultSymbolDot = 'Auto'"
        then: [T: kali]
        else: [T: titik]
- "×": # 0xd7
    - test:
        if: "$SpeechStyle != 'ClearSpeak' or $ClearSpeak_MultSymbolX = 'Auto'"
        then: [T: kali]
        else_test:
          if: $ClearSpeak_MultSymbolX = 'By'
          then: [T: dari]
          else: [T: silang]
- "÷": [T: dibagi] # 0xf7
- "ʰ": [T: pengubah h kecil] # 0x2b0
- "ʱ": [T: pengubah h kecil dengan kail] # 0x2b1
- "ʲ": [T: pengubah j kecil] # 0x2b2
- "ʳ": [T: pengubah r kecil] # 0x2b3
- "ʴ": [T: pengubah r kecil terbalik] # 0x2b4
- "ʵ": [T: pengubah r kecil terbalik dengan kail] # 0x2b5
- "ʶ": # 0x2b6
    - T: pengubah small
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: r terbalik
- "ʷ": [T: pengubah w kecil] # 0x2b7
- "ʸ": [T: pengubah y kecil] # 0x2b8
- "ʹ": [T: pengubah aksen] # 0x2b9
- "ʺ": [T: pengubah aksen ganda] # 0x2ba
- "ʻ": [T: pengubah koma terbalik] # 0x2bb
- "ʼ": [T: pengubah apostrof] # 0x2bc
- "ʽ": [T: pengubah koma terbalik] # 0x2bd
- "ʾ": [T: pengubah setengah cincin kanan] # 0x2be
- "ʿ": [T: pengubah setengah cincin kiri] # 0x2bf
- "ˀ": [T: pengubah glottal stop] # 0x2c0
- "ˁ": [T: pengubah glottal stop terbalik] # 0x2c1
- "˂": [T: pengubah kepala panah kiri] # 0x2c2
- "˃": [T: pengubah kepala panah kanan] # 0x2c3
- "˄": [T: pengubah kepala panah atas] # 0x2c4
- "˅": [T: pengubah kepala panah bawah] # 0x2c5
- "ˆ": [T: pengubah aksen sirkumfleksa] # 0x2c6
- "ˇ": [T: caron] # 0x2c7
- "ˈ": [T: pengubah garis vertikal] # 0x2c8
- "ˉ": [T: pengubah macron] # 0x2c9
- "ˊ": [T: pengubah akut accent] # 0x2ca
- "ˋ": [T: pengubah grave accent] # 0x2cb
- "ˌ": [T: pengubah garis vertikal rendah] # 0x2cc
- "ˍ": [T: pengubah macron rendah] # 0x2cd
- "ˎ": [T: pengubah aksen grave rendah] # 0x2ce
- "ˏ": [T: pengubah aksen akut rendah] # 0x2cf
- "ː": [T: pengubah titikdua segitiga] # 0x2d0
- "ˑ": [T: pengubah setengah titikdua segitiga] # 0x2d1
- "˒": [T: pengubah setengah cincin kanan tengah] # 0x2d2
- "˓": [T: pengubah setengah cincin kiri tengah] # 0x2d3
- "˔": [T: pengubah tack atas] # 0x2d4
- "˕": [T: pengubah tack bawah] # 0x2d5
- "˖": [T: pengubah tanda tambah] # 0x2d6
- "˗": [T: pengubah tanda kurang] # 0x2d7
- "˘": [T: breve] # 0x2d8
- "˙": [T: titik di atas] # 0x2d9
- "˚": [T: cincin di atas] # 0x2da
- "˛": [T: ogonek] # 0x2db
- "˜": [T: tilda kecil] # 0x2dc
- "˝": [T: aksen akut ganda] # 0x2dd
- "˞": [T: pengubah kait rhotic] # 0x2de
- "˟": [T: pengubah aksen silang] # 0x2df
- "ˠ": [T: pengubah gamma kecil] # 0x2e0
- "ˡ": [T: pengubah l kecil] # 0x2e1
- "ˢ": [T: pengubah s kecil] # 0x2e2
- "ˣ": [T: pengubah x kecil] # 0x2e3
- "ˤ": [T: pengubah glottal stop kecil terbalik] # 0x2e4
- "˥": [T: pengubah bilah nada ekstra tinggi] # 0x2e5
- "˦": [T: pengubah bilah nada tinggi] # 0x2e6
- "˧": [T: pengubah bilah nada tengah] # 0x2e7
- "˨": [T: pengubah bilah nada rendah] # 0x2e8
- "˩": [T: pengubah bilah nada exstra rendah] # 0x2e9
- "˪": [T: pengubah yin departing tone mark] # 0x2ea
- "˫": [T: pengubah yang departing tone mark] # 0x2eb
- "ˬ": [T: pengubah voicing] # 0x2ec
- "˭": [T: pengubah tidak beraspirasi] # 0x2ed
- "ˮ": [T: pengubah kutip ganda] # 0x2ee
- "˯": [T: pengubah kepala panah bawah rendah] # 0x2ef
- "˰": [T: pengubah kepala panah atas rendah] # 0x2f0
- "˱": [T: pengubah kepala panah kiri rendah] # 0x2f1
- "˲": [T: pengubah kepala panah kanan rendah] # 0x2f2
- "˳": [T: pengubah cincin] # 0x2f3
- "˴": [T: pengubah aksen grave tengah] # 0x2f4
- "˵": [T: pengubah aksen grave ganda tengah] # 0x2f5
- "˶": [T: pengubah aksen akut ganda tengah] # 0x2f6
- "˷": [T: pengubah tilda rendah] # 0x2f7
- "˸": [T: pengubah titik dua terangkat] # 0x2f8
- "˹": [T: pengubah mulai nada tinggi] # 0x2f9
- "˺": [T: pengubah akhir nada tinggi] # 0x2fa
- "˻": [T: pengubah mulai nada rendah] # 0x2fb
- "˼": [T: pengubah akhir nada rendah] # 0x2fc
- "˽": [T: pengubah rak] # 0x2fd
- "˾": [T: pengubah rak terbuka] # 0x2fe
- "˿": [T: pengubah panah kiri bawah] # 0x2ff
- "̀": [T: hiasan aksen grave] # 0x300
- "́": [T: hiasan aksen akut] # 0x301
- "̂": [T: hiasan aksen sirkumfleksa] # 0x302
- "̃": [T: hiasan tilda] # 0x303
- "̄": [T: hiasan macron] # 0x304
- "̅": [T: hiasan overbar] # 0x305
- "̆": [T: hiasan breve] # 0x306
- "̇": [T: hiasan titik di atas] # 0x307
- "̈": [T: hiasan diaeresis] # 0x308
- "̉": [T: hiasan kait di atas] # 0x309
- "̊": [T: hiasan cincin di atas] # 0x30a
- "̋": [T: hiasan aksen akut ganda] # 0x30b
- "̌": [T: memeriksa] # 0x30c
- "̍": [T: hiasan garis vertikal di atas] # 0x30d
- "̎": [T: hiasan garis vertikal ganda di atas] # 0x30e
- "̏": [T: hiasan aksen grave ganda] # 0x30f
- "̐": [T: hiasan candrabindu] # 0x310
- "̑": [T: hiasan breve terbalik] # 0x311
- "̒": [T: hiasan koma di atas terbalik] # 0x312
- "̓": [T: hiasan koma di atas] # 0x313
- "̔": [T: hiasan koma di atas terbalik] # 0x314
- "̕": [T: hiasan koma di kanan terbalik] # 0x315
- "̖": [T: hiasan aksen grave di bawah] # 0x316
- "̗": [T: hiasan aksen akut di bawah] # 0x317
- "̘": [T: hiasan paku kiri di bawah] # 0x318
- "̙": [T: hiasan paku kiri di kanan] # 0x319
- "̚": [T: hiasan sudut kiri di atas] # 0x31a
- "̛": [T: hiasan tanduk] # 0x31b
- "̜": [T: hiasan cincin kiri setengah di bawah] # 0x31c
- "̝": [T: hiasan di bawah paku atas] # 0x31d
- "̞": [T: hiasan di bawah paku bawah] # 0x31e
- "̟": [T: hiasan tanda tambah di bawah] # 0x31f
- "̠": [T: hiasan tanda kurang di bawah] # 0x320
- "̡": [T: hiasan kait palatalisasi di bawah] # 0x321
- "̢": [T: hiasan kait retroflex di bawah] # 0x322
- "̣": [T: hiasan titik di bawah] # 0x323
- "̤": [T: hiasan diaeresis di bawah] # 0x324
- "̥": [T: hiasan cincin di bawah] # 0x325
- "̦": [T: hiasan koma di bawah] # 0x326
- "̧": [T: hiasan cedilla] # 0x327
- "̨": [T: hiasan ogonek] # 0x328
- "̩": [T: hiasan garis vertikal di bawah] # 0x329
- "̪": [T: hiasan jembatan di bawah] # 0x32a
- "̫": [T: hiasan lengkungan ganda terbalik di bawah] # 0x32b
- "̬": [T: hiasan caron di bawah] # 0x32c
- "̭": [T: hiasan aksen sirkumfleksa di bawah] # 0x32d
- "̮": [T: hiasan breve di bawah] # 0x32e
- "̯": [T: hiasan breve terbalik di bawah] # 0x32f
- "̰": [T: hiasan tilda di bawah] # 0x330
- "̱": [T: hiasan macron di bawah] # 0x331
- "̲": [T: hiasan garis rendah] # 0x332
- "̳": [T: hiasan garis rendah ganda] # 0x333
- "̴": [T: hiasan lapisan tilda] # 0x334
- "̵": [T: hiasan lapisan pantulan pendek] # 0x335
- "̶": [T: hiasan lapisan pantulan panjang] # 0x336
- "̷": [T: hiasan lapisan solidus pendek] # 0x337
- "̸": [T: hiasan lapisan solidus panjang] # 0x338
- "̹": [T: hiasan setengah cincin kanan di bawah] # 0x339
- "̺": [T: hiasan jembatan terbalik di bawah] # 0x33a
- "̻": [T: hiasan persegi di bawah] # 0x33b
- "̼": [T: hiasan burung camar di bawah] # 0x33c
- "̽": [T: hiasan x di atas] # 0x33d
- "̾": [T: hiasan tilda vertikal] # 0x33e
- "̿": [T: hiasan garis ganda] # 0x33f
- "̀": [T: hiasan tanda nada grave] # 0x340
- "́": [T: hiasan tanda nada akut] # 0x341
- "Α": # 0x391
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: alpha
- "Β": # 0x392
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: beta
- "Γ": # 0x393
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: gamma

    # Note: ClearSpeak has pref TriangleSymbol for this character, but that is wrong
- "Δ": # 0x394
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: delta
- "Ε": # 0x395
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: epsilon
- "Ζ": # 0x396
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: zeta
- "Η": # 0x397
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: eta
- "Θ": # 0x398
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: theta
- "Ι": # 0x399
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: iota
- "Κ": # 0x39a
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: kappa
- "Λ": # 0x39b
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: lamda
- "Μ": # 0x39c
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: mu
- "Ν": # 0x39d
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: nu
- "Ξ": # 0x39e
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: zai
- "Ο": # 0x39f
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: omicron
- "Π": # 0x3a0
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: pi
- "Ρ": # 0x3a1
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: rho
- "Σ": # 0x3a3
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: sigma
- "Τ": # 0x3a4
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: tau
- "Υ": # 0x3a5
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: upsilon
- "Φ": # 0x3a6
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: phi
- "Χ": # 0x3a7
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: chi
- "Ψ": # 0x3a8
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: psi
- "Ω": # 0x3a9
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: omega
- "Ϊ": # 0x3aa
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: iota dengan dialitik
- "Ϋ": # 0x3ab
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: upsilon dengan dialitik
- "α": [T: alpha] # 0x3b1
- "β": [T: beta] # 0x3b2
- "γ": [T: gamma] # 0x3b3
- "δ": [T: delta] # 0x3b4
- "ε": [T: epsilon] # 0x3b5
- "ζ": [T: zeta] # 0x3b6
- "η": [T: eta] # 0x3b7
- "θ": [T: theta] # 0x3b8
- "ι": [T: iota] # 0x3b9
- "κ": [T: kappa] # 0x3ba
- "λ": [T: lamda] # 0x3bb
- "μ": [T: mu] # 0x3bc
- "ν": [T: nu] # 0x3bd
- "ξ": [T: zai] # 0x3be
- "ο": [T: omicron] # 0x3bf
- "π": [T: pi] # 0x3c0
- "ρ": [T: rho] # 0x3c1
- "ς": [T: final sigma] # 0x3c2
- "σ": [T: sigma] # 0x3c3
- "τ": [T: tau] # 0x3c4
- "υ": [T: upsilon] # 0x3c5
- "φ": [T: phi] # 0x3c6
- "χ": [T: chi] # 0x3c7
- "ψ": [T: psi] # 0x3c8
- "ω": [T: omega] # 0x3c9
- "ϊ": [T: iota dengan dialitik] # 0x3ca
- "ϋ": [T: upsilon dengan dialitik] # 0x3cb
- "ό": [T: omicron dengan tonos] # 0x3cc
- "ύ": [T: upsilon dengan tonos] # 0x3cd
- "ώ": [T: omega dengan tonos] # 0x3ce
- "Ϗ": # 0x3cf
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: kai
- "ϐ": [T: beta] # 0x3d0
- "ϑ": [T: theta] # 0x3d1
- "ϒ": [T: upsilon dengan kail] # 0x3d2
- "ϓ": [T: upsilon dengan akut dan kait] # 0x3d3
- "ϔ": [T: upsilon dengan diaeresis dan kait] # 0x3d4
- "ϕ": [T: phi] # 0x3d5
- "ϖ": [T: pi] # 0x3d6
- "ϗ": [T: kai] # 0x3d7
- "ϵ": [T: epsilon] # 0x3f5
- "϶": [T: epsilon terbalik] # 0x3f6
- "А": # 0x410
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: a
- "Б": # 0x411
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: be
- "В": # 0x412
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: ve
- "Г": # 0x413
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: ghe
- "Д": # 0x414
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: de
- "Е": # 0x415
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: ie
- "Ж": # 0x416
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: zhe
- "З": # 0x417
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: ze
- "И": # 0x418
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: i
- "Й": # 0x419
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: short i
- "К": # 0x41a
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: ka
- "Л": # 0x41b
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: el
- "М": # 0x41c
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: em
- "Н": # 0x41d
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: en
- "О": # 0x41e
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: o
- "П": # 0x41f
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: pe
- "Р": # 0x420
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: er
- "С": # 0x421
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: es
- "Т": # 0x422
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: te
- "У": # 0x423
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: u
- "Ф": # 0x424
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: ef
- "Х": # 0x425
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: ha
- "Ц": # 0x426
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: tse
- "Ч": # 0x427
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: che
- "Ш": # 0x428
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: sha
- "Щ": # 0x429
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: shcha
- "Ъ": # 0x42a
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: hard sign
- "Ы": # 0x42b
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: yeru
- "Ь": # 0x42c
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: soft sign
- "Э": # 0x42d
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: e
- "Ю": # 0x42e
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: yu
- "Я": # 0x42f
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: ya
- "а": [T: a] # 0x430
- "б": [T: be] # 0x431
- "в": [T: ve] # 0x432
- "г": [T: ghe] # 0x433
- "д": [T: de] # 0x434
- "е": [T: ie] # 0x435
- "ж": [T: zhe] # 0x436
- "з": [T: ze] # 0x437
- "и": [T: i] # 0x438
- "й": [T: short i] # 0x439
- "к": [T: ka] # 0x43a
- "л": [T: el] # 0x43b
- "м": [T: em] # 0x43c
- "н": [T: en] # 0x43d
- "о": [T: o] # 0x43e
- "п": [T: pe] # 0x43f
- "р": [T: er] # 0x440
- "с": [T: es] # 0x441
- "т": [T: te] # 0x442
- "у": [T: u] # 0x443
- "ф": [T: ef] # 0x444
- "х": [T: ha] # 0x445
- "ц": [T: tse] # 0x446
- "ч": [T: che] # 0x447
- "ш": [T: sha] # 0x448
- "щ": [T: shcha] # 0x449
- "ъ": [T: tanda hard] # 0x44a
- "ы": [T: yeru] # 0x44b
- "ь": [T: soft sign] # 0x44c
- "э": [T: e] # 0x44d
- "ю": [T: yu] # 0x44e
- "я": [T: ya] # 0x44f
- "‐": [T: tanda hubung] # 0x2010
- "‑": [T: tanda hubung] # 0x2011
- "‒": [T: tanda hubung figur] # 0x2012
- "–": [T: en dash] # 0x2013
- "—": [T: em dash] # 0x2014
- "―": [T: bilah horizontal] # 0x2015
- "‖": [T: garis vertikal ganda] # 0x2016
- "•": [T: bullet] # 0x2022
- "…": # 0x2026
    test:
      if:
        - "$SpeechStyle != 'ClearSpeak' or $ClearSpeak_Ellipses = 'Auto' or"
          # must be ClearSpeak and $ClearSpeak_Ellipses = 'AndSoOn'
          # speak '…' as 'and so on...' unless expr starts with '…'
        - "../*[1][text()='…']"
      then: [T: titik titik titik]
      else_test: # must have $ClearSpeak_Ellipses = 'AndSoOn'
        if: 'count(following-sibling::*) = 0'
        then: [T: dan seterusnyan]
        else: [T: dan seterusnya hingga]

- "‰": [T: per mil] # 0x2030
- "‱": [T: per sepuluh ribu] # 0x2031
- "′": [T: aksen] # 0x2032
- "″": [T: aksen ganda] # 0x2033
- "‴": [T: aksen rangkap tiga] # 0x2034
- "‵": [T: aksen terbalik] # 0x2035
- "‶": [T: aksen ganda terbalik] # 0x2036
- "‷": [T: aksen rangkap tiga terbalik] # 0x2037
- "‸": [T: ke] # 0x2038
- "‹": [T: tanda kutip sudut menunjuk kiri tunggal] # 0x2039
- "›": [T: tanda kutip sudut menunjuk kanan tunggal] # 0x203a
- "‼": [T: faktorial ganda] # 0x203c
- "⁄": [T: dibagi dengan] # 0x2044
- "⁅": [T: braket persegi kiri dengan pena bulu] # 0x2045
- "⁆": [T: braket persegi kanan dengan pena bulu] # 0x2046
- "⁗": [T: aksen rangkap empat] # 0x2057
- "⁠": [T: ''] # 0x2060
- "⁡": # 0x2061
    - test:
        if: $Verbosity!='Terse' and "not(preceding-sibling::*[1][IsInDefinition(., 'GeometryShapes')])"
        then: [T: 'dari']
- "⁢": [T: ''] # 0x2062
- "⁣": [T: ''] # 0x2063
- "⁤": [T: 'dan'] # 0x2064
- "⁰": [T: pangkat nol] # 0x2070
- "ⁱ": [T: pangkat i] # 0x2071
- "⁴": [T: pangkat empat] # 0x2074
- "⁵": [T: pangkat lima] # 0x2075
- "⁶": [T: pangkat enam] # 0x2076
- "⁷": [T: pangkat tujuh] # 0x2077
- "⁸": [T: pangkat delapan] # 0x2078
- "⁹": [T: pangkat sembilan] # 0x2079
- "⁺": [T: superskrip tambah] # 0x207a
- "⁻": [T: superskrip kurang] # 0x207b
- "⁼": [T: superskrip sama dengan] # 0x207c
- "⁽": [T: superskrip buka kurung] # 0x207d
- "⁾": [T: superskrip tutup kurung] # 0x207e
- "ⁿ": [T: pangkat n] # 0x207f
- "₀": [T: indeks nol] # 0x2080
- "₁": [T: indeks satu] # 0x2081
- "₂": [T: indeks dua] # 0x2082
- "₃": [T: indeks tiga] # 0x2083
- "₄": [T: indeks empat] # 0x2084
- "₅": [T: indeks lima] # 0x2085
- "₆": [T: indeks enam] # 0x2086
- "₇": [T: indeks tujuh] # 0x2087
- "₈": [T: indeks delapan] # 0x2088
- "₉": [T: indeks sembilan] # 0x2089
- "₊": [T: indeks tanda tambah] # 0x208a
- "₋": [T: indeks tanda kurang] # 0x208b
- "₌": [T: indeks tanda sama dengan] # 0x208c
- "₍": [T: indeks buka kurung] # 0x208d
- "₎": [T: indeks tutup kurung] # 0x208e
- "ₐ": [T: indeks A] # 0x2090
- "ₑ": [T: indeks E] # 0x2091
- "ₒ": [T: indeks O] # 0x2092
- "ₓ": [T: indeks X] # 0x2093
- "ₕ": [T: indeks H] # 0x2095
- "ₖ": [T: indeks K] # 0x2096
- "ₗ": [T: indeks L] # 0x2097
- "ₘ": [T: indeks M] # 0x2098
- "ₙ": [T: indeks N] # 0x2099
- "ₚ": [T: indeks P] # 0x209a
- "ₛ": [T: indeks S] # 0x209b
- "ₜ": [T: indeks T] # 0x209c
- "₠": [T: unit mata uang eropa] # 0x20a0
- "₡": [T: colons] # 0x20a1
- "₢": [T: cruzeiro] # 0x20a2
- "₣": [T: franc] # 0x20a3
- "₤": [T: lira] # 0x20a4
- "₥": [T: mills] # 0x20a5
- "₦": [T: naira] # 0x20a6
- "₧": [T: peseta] # 0x20a7
- "₨": [T: rupee] # 0x20a8
- "₩": [T: won] # 0x20a9
- "₪": [T: new sheqel] # 0x20aa
- "₫": [T: dong] # 0x20ab
- "€": [T: euro] # 0x20ac
- "₭": [T: kip] # 0x20ad
- "₮": [T: tugrik] # 0x20ae
- "₯": [T: drachma] # 0x20af
- "₰": [T: german pennie] # 0x20b0
- "₱": [T: peso] # 0x20b1
- "₲": [T: guarani] # 0x20b2
- "₳": [T: austral] # 0x20b3
- "₴": [T: hryvnia] # 0x20b4
- "₵": [T: cedi] # 0x20b5
- "₶": [T: livre tournoi] # 0x20b6
- "₷": [T: spesmilo] # 0x20b7
- "₸": [T: tenge] # 0x20b8
- "₹": [T: rupee india] # 0x20b9
- "₺": [T: lira turki] # 0x20ba
- "⃐": [T: hiasan harpoon kiri di atas] # 0x20d0
- "⃑": [T: hiasan harpoon kanan di atas] # 0x20d1
- "⃒": [T: hiasan lapisan vertikal garis panjang] # 0x20d2
- "⃓": [T: hiasan lapisan vertikal garis pendek] # 0x20d3
- "⃔": [T: hiasan panah berlawanan arah jarum jam di atas] # 0x20d4
- "⃕": [T: hiasan panah searah jarum jam di atas] # 0x20d5
- "⃖": [T: hiasan panah kiri di atas] # 0x20d6
- "⃗": [T: hiasan panah kanan di atas] # 0x20d7
- "⃘": [T: hiasan lapisan cincin] # 0x20d8
- "⃙": [T: hiasan lapisan cicin searah jarum jam] # 0x20d9
- "⃚": [T: hiasan lapisan cicin berlawanan arah jarum jam] # 0x20da
- "⃛": [T: titik rangkap tiga] # 0x20db
- "⃜": [T: titik rangkap empat] # 0x20dc
- "⃝": [T: hiasan penutup lingkaran] # 0x20dd
- "⃞": [T: hiasan penutup persegi] # 0x20de
- "⃟": [T: hiasan penutup berlian] # 0x20df
- "⃠": [T: hiasan lingkaran garis miring terbalik] # 0x20e0
- "⃡": [T: hiasan panah kanan di atas] # 0x20e1
- "⃢": [T: hiasan penutup layar] # 0x20e2
- "⃣": [T: hiasan penutup keycap] # 0x20e3
- "⃤": [T: hiasan penutup segitiga menunjuk ke atas] # 0x20e4
- "⃥": [T: hiasan lapisan solidius terbalik] # 0x20e5
- "⃦": [T: hiasan guratan vertikal ganda] # 0x20e6
- "⃧": [T: hiasan simbol anuitas] # 0x20e7
- "⃨": [T: tiga kali lipat di bawah titik] # 0x20e8
- "⃩": [T: hiasan jembatan lebar di atas] # 0x20e9
- "⃪": [T: hiasan lapisan panah kiri] # 0x20ea
- "⃫": [T: hiasan lapisan solidus ganda panjang] # 0x20eb
- "⃬": [T: hiasan tembok kanan dengan duri ke bawah] # 0x20ec
- "⃭": [T: hiasan tembok kanan dengan duri ke kiri] # 0x20ed
- "⃮": [T: hiasan panah kiri ke bawah] # 0x20ee
- "⃯": [T: hiasan panah kanan ke atas] # 0x20ef
- "⃰": [T: hiasan asterik ke atas] # 0x20f0
- "ℂ": # 0x2102
    - T: double-struck
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: C
- "℃": [T: derajat celsius] # 0x2103
- "℄": [T: simbol garis tengah] # 0x2104
- "℅": [T: care of] # 0x2105
- "℆": [T: cada una] # 0x2106
- "ℇ": [T: konstanta euler] # 0x2107
- "℈": [T: keberatan] # 0x2108
- "℉": [T: derajat fahrenheit] # 0x2109
- "ℊ": [T: skrip g] # 0x210a
- "ℋ": # 0x210b
    - T: skrip
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: h
- "ℌ": # 0x210c
    - T: fraktur
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: h
- "ℍ": # 0x210d
    - T: double-struck
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: h
- "ℎ": [T: konstanta planck] # 0x210e
- "ℏ": # 0x210f
    - test:
        if: "($Verbosity!='Terse')"
        then: { T: batang h }
    - test:
        if: "($Verbosity!='Terse')"
        then: { T: konstanta planck tereduksi }
- "ℐ": # 0x2110
    - T: skrip
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: i
- "ℑ": # 0x2111
    - T: fraktur
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: i
- "ℒ": # 0x2112
    - T: skrip
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: l
- "ℓ": [T: skrip l] # 0x2113
- "℔": [T: pound] # 0x2114
- "ℕ": # 0x2115
    - T: double-struck
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: n
- "№": [T: nomor] # 0x2116
- "℘": # 0x2118
    - T: skrip
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: p
- "ℙ": # 0x2119
    - T: double-struck
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: p
- "ℚ": # 0x211a
    - T: double-struck
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: q
- "ℛ": # 0x211b
    - T: skrip
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: r
- "ℜ": # 0x211c
    - T: fraktur
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: r
- "ℝ": # 0x211d
    - T: double-struck
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: r
- "ℤ": # 0x2124
    - T: double-struck
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: z
- "℥": [T: ons] # 0x2125
- "Ω": [T: ohm] # 0x2126
- "℧": [T: mhos] # 0x2127
- "ℨ": # 0x2128
    - T: fraktur
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: z
- "℩": [T: iota terbalik] # 0x2129
- "K": [T: kelvin] # 0x212a
- "Å": [T: angstrom] # 0x212b
- "ℬ": # 0x212c
    - T: skrip
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: b
- "ℭ": # 0x212d
    - T: fraktur
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: c
- "ℯ": [T: skrip e] # 0x212f
- "ℰ": # 0x2130
    - T: skrip
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: e
- "ℱ": # 0x2131
    - T: skrip
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: f
- "Ⅎ": # 0x2132
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: f
    - T: terbalik
- "ℳ": # 0x2133
    - T: skrip
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: m
- "ℴ": [T: skrip o] # 0x2134
- "ℵ": [T: kardinal transfinit pertama] # 0x2135
- "ℶ": [T: kardinal transfinit kedua] # 0x2136
- "ℷ": [T: kardinal transfinit ketiga] # 0x2137
- "ℸ": [T: kardinal transfinit keempat] # 0x2138
- "℺": # 0x213a
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: q
    - T: diputar
- "ℼ": [T: double struck pi] # 0x213c
- "ℽ": [T: double struck gamma] # 0x213d
- "ℾ": # 0x213e
    - T: double struck
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: gamma
- "ℿ": # 0x213f
    - T: double struck
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: pi
- "⅀": [T: double struck n-ary summation] # 0x2140
- "⅁": # 0x2141
    - T: sans-serif terbalik
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: G
- "⅂": # 0x2142
    - T: sans-serif terbalik
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: L
- "⅃": # 0x2143
    - T: sans-serif terbalik
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: L
- "⅄": # 0x2144
    - T: sans-serif terbalik
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: Y
- "ⅅ": # 0x2145
    - T: double-struck italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: D
- "ⅆ": [T: double-struck italic D] # 0x2146
- "ⅇ": [T: double-struck italic E] # 0x2147
- "ⅈ": [T: double-struck italic I] # 0x2148
- "ⅉ": [T: double-struck italic J] # 0x2149
- "⅋": [T: tanda dan terbalik] # 0x214b
- "⅌": [T: per] # 0x214c
- "ⅎ": [T: F terbalik] # 0x214e
- "⅐": [T: satu per tujuh] # 0x2150
- "⅑": [T: satu per sembilan] # 0x2151
- "⅒": [T: satu per sepuluh] # 0x2152
- "⅓": [T: satu per tiga] # 0x2153
- "⅔": [T: dua per tiga] # 0x2154
- "⅕": [T: satu per lima] # 0x2155
- "⅖": [T: dua per lima] # 0x2156
- "⅗": [T: tiga per lima] # 0x2157
- "⅘": [T: empat per lima] # 0x2158
- "⅙": [T: satu per enam] # 0x2159
- "⅚": [T: lima per enam] # 0x215a
- "⅛": [T: satu per delapan] # 0x215b
- "⅜": [T: tiga per delapan] # 0x215c
- "⅝": [T: lima per delapan] # 0x215d
- "⅞": [T: tujuh per delapan] # 0x215e
- "⅟": [T: satu per] # 0x215f
- "Ⅰ": [T: huruf besar I] # 0x2160
- "Ⅱ": [T: huruf besar I I] # 0x2161
- "Ⅲ": [T: huruf besar I I I] # 0x2162
- "Ⅳ": [T: huruf besar I V] # 0x2163
- "Ⅴ": [T: huruf besar V] # 0x2164
- "Ⅵ": [T: huruf besar V I] # 0x2165
- "Ⅶ": [T: huruf besar V I I] # 0x2166
- "Ⅷ": [T: huruf besar V I I I] # 0x2167
- "Ⅸ": [T: huruf besar I X] # 0x2168
- "Ⅹ": [T: huruf besar X] # 0x2169
- "Ⅺ": [T: huruf besar X I] # 0x216a
- "Ⅻ": [T: huruf besar X I I] # 0x216b
- "Ⅼ": [T: huruf besar L] # 0x216c
- "Ⅽ": [T: huruf besar C] # 0x216d
- "Ⅾ": [T: huruf besar D] # 0x216e
- "Ⅿ": [T: huruf besar M] # 0x216f
- "ⅰ": [T: I] # 0x2170
- "ⅱ": [T: I I] # 0x2171
- "ⅲ": [T: I I I] # 0x2172
- "ⅳ": [T: I V] # 0x2173
- "ⅴ": [T: V] # 0x2174
- "ⅵ": [T: V I] # 0x2175
- "ⅶ": [T: V I I] # 0x2176
- "ⅷ": [T: V I I I] # 0x2177
- "ⅸ": [T: I X] # 0x2178
- "ⅹ": [T: X] # 0x2179
- "ⅺ": [T: X I] # 0x217a
- "ⅻ": [T: X I I] # 0x217b
- "ⅼ": [T: L] # 0x217c
- "ⅽ": [T: C] # 0x217d
- "ⅾ": [T: D] # 0x217e
- "ⅿ": [T: M] # 0x217f
- "↉": [T: nol per tiga] # 0x2189
- "←": [T: panah kiri] # 0x2190
- "↑": [T: panah atas] # 0x2191
- "→": [T: panah kanan] # 0x2192
- "↓": [T: panah bawah] # 0x2193
- "↔": [T: panah kiri kanan] # 0x2194
- "↕": [T: panah atas bawah] # 0x2195
- "↖": [T: panah barat laut] # 0x2196
- "↗": # 0x2197
    - test:
        if: 'ancestor::*[2][self::m:limit]'
        then: [T: 'mendekati dari bawah']
        else: [T: 'panah timur laut']

- "↘": # 0x2198
    - test:
        if: 'ancestor::*[2][self::m:limit]'
        then: [T: 'mendekati dari atas']
        else: [T: 'panah tenggara']

- "↙": [T: panah barat daya] # 0x2199
- "↚": [T: panah kiri dengan pukulan] # 0x219a
- "↛": [T: panah kanan dengan pukulan] # 0x219b
- "↜": [T: panah kiri gelombang] # 0x219c
- "↝": [T: panah kanan gelombangw] # 0x219d
- "↞": [T: panah berkepala dua ke kiri] # 0x219e
- "↟": [T: panah berkepala dua ke atas] # 0x219f
- "↠": [T: panah berkepala dua ke kanan] # 0x21a0
- "↡": [T: panah berkepala dua ke bawah] # 0x21a1
- "↢": [T: panah kiri dengan ekor] # 0x21a2
- "↣": [T: panah kanan dengan ekor] # 0x21a3
- "↤": [T: panah kiri dari batang] # 0x21a4
- "↥": [T: panah atas dari batang] # 0x21a5
- "↦": [T: panah kanan dari batang] # 0x21a6
- "↧": [T: panah bawah dari batang] # 0x21a7
- "↨": [T: panah atas bawah dengan dasar] # 0x21a8
- "↩": [T: panah kiri dengan kail] # 0x21a9
- "↪": [T: panah kanan dengan kail] # 0x21aa
- "↫": [T: panah kiri dengan lingkaran] # 0x21ab
- "↬": [T: panah kanan dengan lingkaran] # 0x21ac
- "↭": [T: panah kiri kanan gelombang] # 0x21ad
- "↮": [T: panah kiri kanan dengan pantulan] # 0x21ae
- "↯": [T: panah zigzag ke bawah] # 0x21af
- "↰": [T: panah atas dengan ujung ke kiri] # 0x21b0
- "↱": [T: panah atas dengan ujung ke kanan] # 0x21b1
- "↲": [T: panah bawah dengan ujung ke kiri] # 0x21b2
- "↳": [T: panah bawah dengan ujung ke kanan] # 0x21b3
- "↴": [T: panah kanan dengan ujung ke bawah] # 0x21b4
- "↵": [T: panah bawah dengan ujung ke kiri] # 0x21b5
- "↶": [T: panah setengah lingkaran atas berlawanan arah jarum jam] # 0x21b6
- "↷": [T: panah setengah lingkaran atas searah jarum jam] # 0x21b7
- "↸": [T: panah barat laut ke batang panjang] # 0x21b8
- "↹": [T: panah kiri ke batang di atas panah kanan ke batang] # 0x21b9
- "↺": [T: panah lingkaran terbuka berlawanan arah jarum jam] # 0x21ba
- "↻": [T: panah lingkaran terbuka searah jarum jam] # 0x21bb
- "↼": [T: seruit kiri atas] # 0x21bc
- "↽": [T: seruit kiri bawah] # 0x21bd
- "↾": [T: seruit atas kanan] # 0x21be
- "↿": [T: seruit atas kiri] # 0x21bf
- "⇀": [T: seruit kanan atas] # 0x21c0
- "⇁": [T: seruit kanan bawah] # 0x21c1
- "⇂": [T: seruit kanan bawah] # 0x21c2
- "⇃": [T: seruit bawah kiri] # 0x21c3
- "⇄": [T: panah kanan di atas panah kiri] # 0x21c4
- "⇅": [T: panah atas kiri dan panah bawah kanan bersebelahan] # 0x21c5
- "⇆": [T: panah kiri di atas panah kanan] # 0x21c6
- "⇇": [T: panah berpasangan ke kiri] # 0x21c7
- "⇈": [T: panah berpasangan ke atas] # 0x21c8
- "⇉": [T: panah berpasangan ke kanan] # 0x21c9
- "⇊": [T: panah berpasangan ke bawah] # 0x21ca
- "⇋": [T: seruit kiri di atas seruit kanan] # 0x21cb
- "⇌": [T: seruit kanan di atas seruit kiri] # 0x21cc
- "⇍": [T: panah ganda ke kiri dengan goresan] # 0x21cd
- "⇎": [T: panah ganda kiri kanan dengan goresan] # 0x21ce
- "⇏": [T: panah ganda ke kanan dengan goresan] # 0x21cf
- "⇐": [T: panah kiri ganda] # 0x21d0
- "⇑": [T: panah atas ganda] # 0x21d1
- "⇒": [T: panah kanan ganda] # 0x21d2
- "⇓": [T: panah bawah ganda] # 0x21d3
- "⇔": [T: panah kiri kanan ganda] # 0x21d4
- "⇕": [T: anah atas bawah ganda] # 0x21d5
- "⇖": [T: panah barat laut ganda] # 0x21d6
- "⇗": [T: panah timur laut ganda] # 0x21d7
- "⇘": [T: panah tenggara ganda] # 0x21d8
- "⇙": [T: panah barat daya ganda] # 0x21d9
- "⇚": [T: panah kiri rangkap tiga] # 0x21da
- "⇛": [T: panah kanan rangkap tiga] # 0x21db
- "⇜": [T: panah coretan ke kiri] # 0x21dc
- "⇝": [T: panah coretan ke kanan] # 0x21dd
- "⇞": [T: panah ke atas dengan goresan ganda] # 0x21de
- "⇟": [T: panah ke bawah dengan goresan ganda] # 0x21df
- "⇠": [T: panah putus-putus ke kiri] # 0x21e0
- "⇡": [T: panah putus-putus ke atas] # 0x21e1
- "⇢": [T: panah putus-putus ke kanan] # 0x21e2
- "⇣": [T: panah putus-putus ke bawah] # 0x21e3
- "⇤": [T: panah kiri ke batang] # 0x21e4
- "⇥": [T: panah kanan ke batang] # 0x21e5
- "⇦": [T: panah putih ke kiri] # 0x21e6
- "⇧": [T: panah putih ke atas] # 0x21e7
- "⇨": [T: panah putih ke kanan] # 0x21e8
- "⇩": [T: panah putih ke bawah] # 0x21e9
- "⇪": [T: panah putih ke atas dari batang] # 0x21ea
- "⇫": [T: panah putih ke atas pada alas] # 0x21eb
- "⇬": [T: panah putih ke atas pada alas dengan bilah horizontal] # 0x21ec
- "⇭": [T: panah putih ke atas pada alas dengan bilah vertikal] # 0x21ed
- "⇮": [T: panah ganda putih ke atas] # 0x21ee
- "⇯": [T: panah ganda putih ke atas pada alas] # 0x21ef
- "⇰": [T: panah putih ke kanan dari dinding] # 0x21f0
- "⇱": [T: panah barat laut ke sudut] # 0x21f1
- "⇲": [T: panah tenggara ke sudut] # 0x21f2
- "⇳": [T: panah putih atas bawah] # 0x21f3
- "⇴": [T: panah kanan dengan lingkaran kecil] # 0x21f4
- "⇵": [T: panah bawah dan panah atas bersebelahan] # 0x21f5
- "⇶": [T: tiga panah kanan] # 0x21f6
- "⇷": [T: panah kiri dengan goresan vertikal] # 0x21f7
- "⇸": [T: panah kanan dengan goresan vertikal] # 0x21f8
- "⇹": [T: panah kiri kanan dengan goresan vertikal] # 0x21f9
- "⇺": [T: panah kiri dengan goresan vertikal ganda] # 0x21fa
- "⇻": [T: panah kanan dengan goresan vertikal ganda] # 0x21fb
- "⇼": [T: panah kiri kanan dengan goresan vertikal ganda] # 0x21fc
- "⇽": [T: panah kiri kepala terbuka] # 0x21fd
- "⇾": [T: panah kanan kepala terbuka] # 0x21fe
- "⇿": [T: panah kiri kanan kepala terbuka] # 0x21ff
- "∀": [T: untuk semua] # 0x2200
- "∁": # 0x2201
    - T: pelengkap dari
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: '' }
- "∂": # 0x2202
    - test:
        if: "$Verbosity='Terse'"
        then: { T: parsial }
        else: { T: turunan parsial }
- "∃": [T: ada] # 0x2203
- "∄": [T: tidak ada] # 0x2204
- "∅": [T: set kosong] # 0x2205
- "∆": # 0x2206
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: '' }
    - T: laplacian dari
- "∇": # 0x2207
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: '' }
    - T: gradien dari
- "∈": # 0x2208
    - test:
        if: "$SpeechStyle != 'ClearSpeak'"
        then: [T: sebuah elemen dari]
        # Several options for speaking elements in ClearSpeak -- they split between being inside a set or not and then the option
        else_test:
          if: '../../self::m:set or ../../../self::m:set' # inside a set
          then_test:
            - if: $ClearSpeak_SetMemberSymbol = 'Auto' or $ClearSpeak_SetMemberSymbol = 'In'
              then: [T: di]
            - else_if: $ClearSpeak_SetMemberSymbol = 'Member'
              then: [T: anggota dari]
            - else_if: $ClearSpeak_SetMemberSymbol = 'Element'
              then: [T: elemen dari]
            - else: [T: milik] # $ClearSpeak_SetMemberSymbol = 'Belongs'
          else_test:
            - if: $ClearSpeak_SetMemberSymbol = 'Auto' or $ClearSpeak_SetMemberSymbol = 'Member'
              then: [T: anggota dari]
            - else_if: $ClearSpeak_SetMemberSymbol = 'Element'
              then: [T: elemen dari]
            - else_if: $ClearSpeak_SetMemberSymbol = 'In'
              then: [T: ada di]
            - else: [T: milik] # $ClearSpeak_SetMemberSymbol = 'Belongs'
- "∉": # 0x2209
    # rule is identical to 0x2208
    - test:
        if: "$SpeechStyle != 'ClearSpeak'"
        then: [T: bukan elemen dari]
        # Several options for speaking elements in ClearSpeak -- they split between being inside a set or not and then the option
        else_test:
          if: '../../self::m:set or ../../../self::m:set' # inside a set
          then_test:
            - if: $ClearSpeak_SetMemberSymbol = 'Auto' or $ClearSpeak_SetMemberSymbol = 'In'
              then: [T: bukan di]
            - else_if: $ClearSpeak_SetMemberSymbol = 'Member'
              then: [T: bukan anggota dari]
            - else_if: $ClearSpeak_SetMemberSymbol = 'Element'
              then: [T: bukan elemen dari]
            - else: [T: bukan milik] # $ClearSpeak_SetMemberSymbol = 'Belongs'
          else_test:
            - if: $ClearSpeak_SetMemberSymbol = 'Auto' or $ClearSpeak_SetMemberSymbol = 'Member'
              then: [T: bukan anggota dari]
            - else_if: $ClearSpeak_SetMemberSymbol = 'Element'
              then: [T: bukan elemen dari]
            - else_if: $ClearSpeak_SetMemberSymbol = 'In'
              then: [T: bukan di]
            - else: [T: bukan milik] # $ClearSpeak_SetMemberSymbol = 'Belongs'
- "∊": # 0x220a
    - test:
        if: "$SpeechStyle != 'ClearSpeak'"
        then: [T: bukan elemen dari]
        # Several options for speaking elements in ClearSpeak -- they split between being inside a set or not and then the option
        else_test:
          if: '../../self::m:set or ../../../self::m:set' # inside a set
          then_test:
            - if: $ClearSpeak_SetMemberSymbol = 'Auto' or $ClearSpeak_SetMemberSymbol = 'In'
              then: [T: di]
            - else_if: $ClearSpeak_SetMemberSymbol = 'Member'
              then: [T: anggota dari]
            - else_if: $ClearSpeak_SetMemberSymbol = 'Element'
              then: [T: elemen dari]
            - else: [T: milik] # $ClearSpeak_SetMemberSymbol = 'Belongs'
          else_test:
            - if: $ClearSpeak_SetMemberSymbol = 'Auto' or $ClearSpeak_SetMemberSymbol = 'Member'
              then: [T: anggota dari]
            - else_if: $ClearSpeak_SetMemberSymbol = 'Element'
              then: [T: elemen dari]
            - else_if: $ClearSpeak_SetMemberSymbol = 'In'
              then: [T: ada di]
            - else: [T: milik] # $ClearSpeak_SetMemberSymbol = 'Belongs'
- "∋": [T: berisi anggota] # 0x220b
- "∌": [T: tidak mengandung anggota] # 0x220c
- "∍": [T: berisi anggota] # 0x220d
- "∎": [T: akhir pembuktian] # 0x220e
- "∏": [T: produk] # 0x220f
- "∐": [T: produk sampingan] # 0x2210
- "∑": [T: penjumlahan sigma] # 0x2211
- "−": [T: kurang] # 0x2212
- "∓": [T: kurang tambah] # 0x2213
- "∔": [T: titik tambah] # 0x2214
- "∕": [T: dibagi dengan] # 0x2215
- "∖": [T: set minus] # 0x2216
- "∗": [T: kali] # 0x2217
- "∘": [T: disusun dengan] # 0x2218
- "∙": [T: kali] # 0x2219
- "√": # 0x221a
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: '' }
    - T: akar kuadrat dari
- "∛": # 0x221b
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: '' }
    - T: akar pangkat tiga dari
- "∜": # 0x221c
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: '' }
    - T: akar pangkat empat dari
- "∝": # 0x221d
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: sebanding dengan }
- "∞": [T: 'tak hingga'] # 0x221e
- "∟": [T: sudut kanan] # 0x221f
- "∠": [T: sudut] # 0x2220
- "∡": [T: sudut terukur] # 0x2221
- "∢": [T: sudut bulat] # 0x2222
- "∣": [T: membagi] # 0x2223
- "∤": [T: tidak membagi] # 0x2224
- "∥": # 0x2225
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: '' }
    - T: sejajar dengan
- "∦": # 0x2226
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: '' }
    - T: tidak sejajar dengan
- "∧": [T: dan] # 0x2227
- "∨": [T: atau] # 0x2228
- "∩": [T: irisan himpunan] # 0x2229
- "∪": [T: gabungan himpunan] # 0x222a
- "∫": [T: integral] # 0x222b
- "∬": [T: integral ganda] # 0x222c
- "∭": [T: integral rangkap tiga] # 0x222d
- "∮": [T: integral kontur] # 0x222e
- "∯": [T: integral permukaan] # 0x222f
- "∰": [T: integral volume] # 0x2230
- "∱": [T: integral searah jarum jam] # 0x2231
- "∲": [T: integral kontur searah jarum jam] # 0x2232
- "∳": [T: integral kontur berlawanan arah jarum jam] # 0x2233
- "∴": [T: karena itu] # 0x2234
- "∵": [T: karena] # 0x2235
- "∶": # 0x2236
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: ke }
- "∷": [T: sebagai] # 0x2237
- "∸": [T: titik kurang] # 0x2238
- "∹": [T: memiliki kelebihan dibandingkan dengan] # 0x2239
- "∺": # 0x223a
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: secara geometris sebanding dengan }
- "∻": # 0x223b
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: homotetik dengan }
- "∼": [T: bervariasi dengan] # 0x223c
- "∽": [T: tilda terbalik] # 0x223d
- "∾": # 0x223e
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: paling positif }
- "∿": [T: gelombang sinus] # 0x223f
- "≀": [T: produk karangan bunga] # 0x2240
- "≁": [T: bukan tilda] # 0x2241
- "≂": [T: minus tilda] # 0x2242
- "≃": # 0x2243
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: asimtotik sama dengan }
- "≄": # 0x2244
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: '' }
    - T: tidak asimtotik sama dengan
- "≅": # 0x2245
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: kira-kira sama dengan }
- "≆": # 0x2246
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: '' }
    - T: kira-kira tetapi tidak benar-benar sama dengan
- "≇": # 0x2247
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: '' }
    - T: tidak kira-kira atau sebenarnya sama dengan
- "≈": # 0x2248
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: mendekati }
- "≉": # 0x2249
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: '' }
    - T: hampir tidak sama dengan
- "≊": # 0x224a
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: hampir sama atau sama dengan }
- "≋": [T: tilda rangkap tiga] # 0x224b
- "≌": [T: semuanya sama dengan] # 0x224c
- "≍": # 0x224d
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: setara dengan }
- "≎": # 0x224e
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: secara geometris setara dengan }
- "≏": # 0x224f
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: '' }
    - T: perbedaan antara
- "≐": [T: approaches the limit] # 0x2250
- "≑": # 0x2251
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: secara geometris sama dengan }
- "≒": # 0x2252
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: kira-kira sama dengan atau gambaran dari }
- "≓": # 0x2253
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: gambaran dari atau kira-kira sama dengan }
- "≔": [T: titik dua sama dengan] # 0x2254
- "≕": [T: sama dengan titik dua] # 0x2255
- "≖": [T: cincin sama dengan] # 0x2256
- "≗": # 0x2257
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: kira-kira sama dengan }
- "≘": [T: sesuai dengan] # 0x2258
- "≙": [T: perkiraan] # 0x2259
- "≚": # 0x225a
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: is equiangular to }
- "≛": [T: bintang sama dengan] # 0x225b
- "≜": [T: delta sama dengan] # 0x225c
- "≝": [T: didefinisikan sebagai] # 0x225d
- "≞": # 0x225e
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: diukur dengan }
- "≟": [T: memiliki hubungan yang tidak diketahui dengan] # 0x225f
- "≠": # 0x2260
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: '' }
    - T: tidak sama dengan
- "≡": # 0x2261
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: identik dengan }
- "≢": # 0x2262
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: '' }
    - T: tidak identik dengan
- "≣": # 0x2263
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: benar-benar setara dengan }
- "≤": # 0x2264
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: kurang dari atau sama dengan }
- "≥": # 0x2265
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: lebih besar dari atau sama dengan }
- "≦": [T: kurang dari lebih sama dengan] # 0x2266
- "≧": [T: lebih besar dari lebih sama dengan] # 0x2267
- "≨": # 0x2268
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: kurang dari tetapi tidak sama dengan }
- "≩": # 0x2269
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: lebih besar dari tetapi tidak sama dengan }
- "≪": # 0x226a
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: jauh lebih sedikit dari }
- "≫": # 0x226b
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: jauh lebih besar dari }
- "≬": # 0x226c
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: antara }
- "≭": # 0x226d
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: tidak setara dengan }
- "≮": # 0x226e
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: tidak kurang dari }
- "≯": # 0x226f
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: tidak lebih besar dari }
- "≰": # 0x2270
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: tidak kurang dari atau sama dengan }
- "≱": # 0x2271
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: tidak lebih besar dari atau sama dengan }
- "≲": # 0x2272
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: kurang dari atau setara dengan }
- "≳": # 0x2273
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: lebih besar dari atau setara dengan }
- "≴": # 0x2274
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: tidak kurang dari atau setara dengan }
- "≵": # 0x2275
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: tidak lebih besar dari atau setara dengan }
- "≶": # 0x2276
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: kurang dari atau lebih besar dari }
- "≷": # 0x2277
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: lebih besar atau lebih kecil dari }
- "≸": # 0x2278
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: tidak kurang dari atau lebih besar dari }
- "≹": # 0x2279
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: tidak lebih besar dan tidak kurang dari }
- "≺": [T: mendahului] # 0x227a
- "≻": [T: berhasil] # 0x227b
- "≼": [T: mendahului atau sama dengan] # 0x227c
- "≽": [T: berhasil atau sama dengan] # 0x227d
- "≾": [T: mendahului atau setara dengan] # 0x227e
- "≿": [T: berhasil atau setara dengan] # 0x227f
- "⊀": [T: tidak mendahului] # 0x2280
- "⊁": [T: tidak berhasil] # 0x2281
- "⊂": # 0x2282
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: himpunan bagian dari }
- "⊃": # 0x2283
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: superset dari }
- "⊄": # 0x2284
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: bukan bagian dari }
- "⊅": # 0x2285
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: bukan superset dari }
- "⊆": # 0x2286
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: himpunan bagian dari atau sama dengan }
- "⊇": # 0x2287
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: superset dari atau sama dengan }
- "⊈": # 0x2288
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: bukan himpunan bagian dari atau sama dengan }
- "⊉": # 0x2289
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: bukan superset atau sama dengan }
- "⊊": [T: himpunan bagian dari tidak sama dengan] # 0x228a
- "⊋": [T: superset dari dengan tidak sama dengan] # 0x228b
- "⊌": [T: multiset] # 0x228c
- "⊍": [T: perkalian multiset] # 0x228d
- "⊎": [T: himpunan multiset] # 0x228e
- "⊏": [T: gambar persegi] # 0x228f
- "⊐": [T: persegi asli dari] # 0x2290
- "⊑": [T: gambar persegi atau sama dengan] # 0x2291
- "⊒": [T: kuadrat asli dari atau sama dengan] # 0x2292
- "⊓": [T: topi persegi] # 0x2293
- "⊔": [T: cangkir persegi] # 0x2294
- "⊕": [T: tambah dilingkari] # 0x2295
- "⊖": [T: kurang dilingkari] # 0x2296
- "⊗": [T: kali dilingkari] # 0x2297
- "⊘": [T: garis miring dilingkari] # 0x2298
- "⊙": [T: operator titik dilingkari] # 0x2299
- "⊚": [T: cincin dilingkari] # 0x229a
- "⊛": [T: asterisk dilingkari] # 0x229b
- "⊜": [T: sama dengan dilingkari] # 0x229c
- "⊝": [T: tanda hubung dilingkari] # 0x229d
- "⊞": [T: tambah dalam persegi] # 0x229e
- "⊟": [T: kurang dalam persegi] # 0x229f
- "⊠": [T: kali dalam persegi] # 0x22a0
- "⊡": [T: operator titik dalam persegi] # 0x22a1
- "⊢": [T: membuktikan] # 0x22a2
- "⊣": [T: tidak menghasilkan] # 0x22a3
- "⊤": [T: atas] # 0x22a4
- "⊥": # 0x22a5
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: bawah }
- "⊦": [T: berkurang menjadi] # 0x22a6
- "⊧": [T: model] # 0x22a7
- "⊨": # 0x22a8
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: benar }
- "⊩": [T: kekuatan] # 0x22a9
- "⊪": [T: pintu putar batang kanan vertikal rangkat tiga] # 0x22aa
- "⊫": [T: batang vertikal ganda pintu putar kanan ganda] # 0x22ab
- "⊬": [T: tidak membuktikan] # 0x22ac
- "⊭": # 0x22ad
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: tidak benar }
- "⊮": [T: tidak memaksa] # 0x22ae
- "⊯": [T: meniadakan batang vertikal ganda pintu putar kanan ganda] # 0x22af
- "⊰": [T: mendahului di bawah relasi] # 0x22b0
- "⊱": [T: berhasil di bawah relasi] # 0x22b1
- "⊲": # 0x22b2
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: subgrup normal dari }
- "⊳": [T: contains as a normal subgroup] # 0x22b3
- "⊴": # 0x22b4
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: subgrup normal dari atau sama dengan }
- "⊵": [T: berisi sebagai subgrup normal atau sama dengan] # 0x22b5
- "⊶": # 0x22b6
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: asli dari }
- "⊷": # 0x22b7
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: sebuah gambar dari }
- "⊸": [T: multipeta] # 0x22b8
- "⊹": [T: matriks konjugat hermitian] # 0x22b9
- "⊺": [T: interkalasi] # 0x22ba
- "⊻": [T: xor] # 0x22bb
- "⊼": [T: nand] # 0x22bc
- "⊽": [T: nor] # 0x22bd
- "⊾": [T: sudut siku-siku dengan busur] # 0x22be
- "⊿": [T: segitiga siku-siku] # 0x22bf
- "⋀": [T: logis dan] # 0x22c0
- "⋁": [T: logis atau] # 0x22c1
- "⋂": [T: irisan himpunan] # 0x22c2
- "⋃": [T: gabungan himpunan] # 0x22c3
- "⋄": [T: operator berlian] # 0x22c4
- "⋅": [T: kali] # 0x22c5
- "⋆": [T: kali] # 0x22c6
- "⋇": [T: division times] # 0x22c7
- "⋈": [T: dasi kupu-kupu] # 0x22c8
- "⋉": # 0x22c9
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: produk setengah langsung faktor normal kiri dari }
- "⋊": # 0x22ca
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: produk setengah langsung faktor normal kanan dari }
- "⋋": # 0x22cb
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: "" }
    - T: produk setengah langsung kiri dari
- "⋌": # 0x22cc
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: "" }
    - T: produk setengah langsung kanan dari
- "⋍": [T: tilda sama dengan terbalik] # 0x22cd
- "⋎": [T: logika keriting atau] # 0x22ce
- "⋏": [T: logika keriting dan] # 0x22cf
- "⋐": # 0x22d0
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: "" }
    - T: subset ganda dari
- "⋑": # 0x22d1
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: "" }
    - T: superset ganda dari
- "⋒": # 0x22d2
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: "" }
    - T: persimpangan ganda
- "⋓": # 0x22d3
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: "" }
    - T: gabungan ganda dari
- "⋔": # 0x22d4
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: "" }
    - T: persimpangan yang tepat dari
- "⋕": # 0x22d5
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: "" }
    - T: sama dan sejajar dengan
- "⋖": [T: kurang dari dengan titik] # 0x22d6
- "⋗": [T: lebih besar dari dengan titik] # 0x22d7
- "⋘": # 0x22d8
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: "" }
    - T: sangat kurang dari
- "⋙": # 0x22d9
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: "" }
    - T: sangat jauh lebih besar dari
- "⋚": # 0x22da
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: "" }
    - T: kurang dari sama dengan atau lebih besar dari
- "⋛": # 0x22db
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: "" }
    - T: lebih besar dari sama dengan atau kurang dari
- "⋜": # 0x22dc
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: "" }
    - T: sama dengan atau kurang dari
- "⋝": # 0x22dd
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: "" }
    - T: sama dengan atau lebih besar dari
- "⋞": # 0x22de
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: "" }
    - T: sama dengan atau mendahului
- "⋟": # 0x22df
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: "" }
    - T: sama dengan atau berhasil
- "⋠": [T: tidak mendahului atau sama dengan] # 0x22e0
- "⋡": [T: tidak berhasil juga tidak sama dengan] # 0x22e1
- "⋢": [T: bukan gambar persegi atau sama dengan] # 0x22e2
- "⋣": [T: tidak persegi asli atau sama dengan] # 0x22e3
- "⋤": [T: gambar persegi atau tidak sama dengan] # 0x22e4
- "⋥": [T: kuadrat asli atau tidak sama dengan] # 0x22e5
- "⋦": # 0x22e6
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: "" }
    - T: kurang dari tetapi tidak setara dengan
- "⋧": # 0x22e7
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: "" }
    - T: lebih besar dari tetapi tidak setara dengan
- "⋨": [T: mendahului tetapi tidak setara dengan] # 0x22e8
- "⋩": [T: berhasil tetapi tidak setara dengan] # 0x22e9
- "⋪": # 0x22ea
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: "" }
    - T: bukan subgrup normal dari
- "⋫": [T: tidak mengandung sebagai subgrup normal] # 0x22eb
- "⋬": # 0x22ec
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: "" }
    - T: bukan subgrup normal dari juga tidak sama dengan
- "⋭": [T: tidak mengandung subgrup normal dan tidak sama dengan] # 0x22ed
- "⋮": [T: elipsis vertikal] # 0x22ee
- "⋯": [T: titik titik titik] # 0x22ef
- "⋰": [T: elipsis diagonal ke atas] # 0x22f0
- "⋱": [T: elipsis diagonal] # 0x22f1
- "⋲": [T: elemen dengan goresan horizontal panjang] # 0x22f2
- "⋳": [T: elemen dengan batang vertikal di ujung goresan horizontal] # 0x22f3
- "⋴": [T: elemen dengan batang vertikal di ujung goresan horizontal] # 0x22f4
- "⋵": [T: elemen dengan titik di atas] # 0x22f5
- "⋶": [T: elemen dengan batang di atas] # 0x22f6
- "⋷": [T: elemen dengan batang di atas] # 0x22f7
- "⋸": [T: elemen dengan batang di bawah] # 0x22f8
- "⋹": [T: elemen dengan dua goresan horizontal] # 0x22f9
- "⋺": [T: berisi dengan goresan horizontal panjang] # 0x22fa
- "⋻": [T: berisi dengan batang vertikal di ujung goresan horizontal] # 0x22fb
- "⋼": [T: berisi dengan batang vertikal di ujung goresan horizontal] # 0x22fc
- "⋽": [T: berisi dengan batang di atas] # 0x22fd
- "⋾": [T: berisi dengan batang di atas] # 0x22fe
- "⋿": [T: keanggotaan tas notasi z] # 0x22ff
- "⌀": [T: diameter] # 0x2300
- "⌁": [T: panah elektrik] # 0x2301
- "⌂": [T: rumah] # 0x2302
- "⌃": [T: kepala panah atas] # 0x2303
- "⌄": [T: kepala panah bawah] # 0x2304
- "⌅": [T: proyektif] # 0x2305
- "⌆": [T: perspektif] # 0x2306
- "⌇": [T: garis bergelombang] # 0x2307
- "⌈": [T: langit-langit kiri] # 0x2308
- "⌉": [T: langit-langit kanan] # 0x2309
- "⌊": [T: lantai kiri] # 0x230a
- "⌋": [T: lantai kanan] # 0x230b
- "⌌": [T: krop kanan bawah] # 0x230c
- "⌍": [T: krop kiri bawah] # 0x230d
- "⌎": [T: krop kanan atas] # 0x230e
- "⌏": [T: krop kiri atas] # 0x230f
- "⌐": [T: bukan tanda terbalik] # 0x2310
- "⌑": [T: lozenge persegi] # 0x2311
- "⌒": [T: busur] # 0x2312
- "⌓": [T: segmen] # 0x2313
- "⌔": [T: sektor] # 0x2314
- "⌕": [T: perekam telepon] # 0x2315
- "⌖": [T: garis bidik indikator posisi] # 0x2316
- "⌗": [T: tampilan data persegi] # 0x2317
- "⌘": [T: tanda tempat menarik] # 0x2318
- "⌙": [T: bukan tanda terbalik] # 0x2319
- "⌚": [T: jam] # 0x231a
- "⌛": [T: jam pasir] # 0x231b
- "⌜": [T: pojok kiri atas] # 0x231c
- "⌝": [T: pojok kanan atas] # 0x231d
- "⌞": [T: pojok kiri bawah] # 0x231e
- "⌟": [T: pojok kanan bawah] # 0x231f
- "⌠": [T: integral setengah atas] # 0x2320
- "⌡": [T: integral setengah bawah] # 0x2321
- "⌢": [T: cemberut] # 0x2322
- "⌣": [T: senyum] # 0x2323
- "⌤": [T: kepala panah atas antara dua batang horizontal] # 0x2324
- "⌥": [T: opsi kunci] # 0x2325
- "⌦": [T: hapus ke kanan] # 0x2326
- "⌧": [T: x dalam kotak persegi panjang] # 0x2327
- "⌨": [T: papan ketik] # 0x2328
- "〈": [T: kurung sudut penunjuk kiri] # 0x2329
- "〉": [T: kurung sudut penunjuk kanan] # 0x232a
- "⌫": [T: hapus ke kiri] # 0x232b
- "⌬": [T: cincin benzena] # 0x232c
- "⌭": [T: silinder] # 0x232d
- "⌮": [T: di sekitar profil] # 0x232e
- "⌯": [T: simetri] # 0x232f
- "⌰": [T: total keluar] # 0x2330
- "⌱": [T: dimensi asal] # 0x2331
- "⌲": [T: lancip berbentuk kerucut] # 0x2332
- "⌳": [T: melandai] # 0x2333
- "⌴": [T: counterbore] # 0x2334
- "⌵": [T: countersink] # 0x2335
- "⍰": [T: kotak tidak dikenal] # 0x2370
- "⎕": [T: kotak] # 0x2395
- "①": [T: satu dilingkari] # 0x2460
- "②": [T: dua dilingkari] # 0x2461
- "③": [T: tiga dilingkari] # 0x2462
- "④": [T: empat dilingkari] # 0x2463
- "⑤": [T: lima dilingkari] # 0x2464
- "⑥": [T: enam dilingkari] # 0x2465
- "⑦": [T: tujuh dilingkari] # 0x2466
- "⑧": [T: delapan dilingkari] # 0x2467
- "⑨": [T: sembilan dilingkari] # 0x2468
- "⑩": [T: sepuluh dilingkari] # 0x2469
- "⑪": [T: sebelas dilingkari] # 0x246a
- "⑫": [T: duabelas dilingkari] # 0x246b
- "⑬": [T: tigabelas dilingkari] # 0x246c
- "⑭": [T: empatbelas dilingkari] # 0x246d
- "⑮": [T: limabelas dilingkari] # 0x246e
- "⑯": [T: enambelas dilingkari] # 0x246f
- "⑰": [T: tujuhbelas dilingkari] # 0x2470
- "⑱": [T: delapanbelas dilingkari] # 0x2471
- "⑱": [T: sembilanbelas dilingkari] # 0x2471
- "⑳": [T: duapuluh dilingkari] # 0x2473
- "⑴": [T: dalam kurung satu] # 0x2474
- "⑵": [T: dalam kurung dua] # 0x2475
- "⑶": [T: dalam kurung tiga] # 0x2476
- "⑷": [T: dalam kurung empat] # 0x2477
- "⑸": [T: dalam kurung lima] # 0x2478
- "⑹": [T: dalam kurung enam] # 0x2479
- "⑺": [T: dalam kurung tujuh] # 0x247a
- "⑻": [T: dalam kurung delapan] # 0x247b
- "⑼": [T: dalam kurung sembilan] # 0x247c
- "⑽": [T: dalam kurung sepuluh] # 0x247d
- "⑾": [T: dalam kurung sebelas] # 0x247e
- "⑿": [T: dalam kurung duabelas] # 0x247f
- "⒀": [T: dalam kurung tigabelas] # 0x2480
- "⒁": [T: dalam kurung empatbelas] # 0x2481
- "⒂": [T: dalam kurung limabelas] # 0x2482
- "⒃": [T: dalam kurung enambelas] # 0x2483
- "⒄": [T: dalam kurung tujuhbelas] # 0x2484
- "⒅": [T: dalam kurung delapanbelas] # 0x2485
- "⒆": [T: dalam kurung sembilanbelas] # 0x2486
- "⒇": [T: dalam kurung duapuluh] # 0x2487
- "⒈": [T: satu titik] # 0x2488
- "⒉": [T: dua titik] # 0x2489
- "⒊": [T: tiga titik] # 0x248a
- "⒋": [T: empat titik] # 0x248b
- "⒌": [T: lima titik] # 0x248c
- "⒍": [T: enam titik] # 0x248d
- "⒎": [T: tujuh titik] # 0x248e
- "⒏": [T: delapan titik] # 0x248f
- "⒐": [T: sembilan titik] # 0x2490
- "⒑": [T: sepuluh titik] # 0x2491
- "⒒": [T: sebelas titik] # 0x2492
- "⒓": [T: duabelas titik] # 0x2493
- "⒔": [T: tigabelas titik] # 0x2494
- "⒕": [T: empatbelas titik] # 0x2495
- "⒖": [T: limabelas titik] # 0x2496
- "⒗": [T: enambelas titik] # 0x2497
- "⒘": [T: tujuhbelas titik] # 0x2498
- "⒙": [T: delapanbelas titik] # 0x2499
- "⒚": [T: sembilanbelas titik] # 0x249a
- "⒛": [T: duapuluh titik] # 0x249b
- "⒜": [T: dalam kurung a] # 0x249c
- "⒝": [T: dalam kurung b] # 0x249d
- "⒞": [T: dalam kurung c] # 0x249e
- "⒟": [T: dalam kurung d] # 0x249f
- "⒠": [T: dalam kurung e] # 0x24a0
- "⒡": [T: dalam kurung f] # 0x24a1
- "⒢": [T: dalam kurung g] # 0x24a2
- "⒣": [T: dalam kurung h] # 0x24a3
- "⒤": [T: dalam kurung i] # 0x24a4
- "⒥": [T: dalam kurung j] # 0x24a5
- "⒦": [T: dalam kurung k] # 0x24a6
- "⒧": [T: dalam kurung l] # 0x24a7
- "⒨": [T: dalam kurung m] # 0x24a8
- "⒩": [T: dalam kurung n] # 0x24a9
- "⒪": [T: dalam kurung o] # 0x24aa
- "⒫": [T: dalam kurung p] # 0x24ab
- "⒬": [T: dalam kurung q] # 0x24ac
- "⒭": [T: dalam kurung r] # 0x24ad
- "⒮": [T: dalam kurung s] # 0x24ae
- "⒯": [T: dalam kurung t] # 0x24af
- "⒰": [T: dalam kurung u] # 0x24b0
- "⒱": [T: dalam kurung v] # 0x24b1
- "⒲": [T: dalam kurung w] # 0x24b2
- "⒳": [T: dalam kurung x] # 0x24b3
- "⒴": [T: dalam kurung y] # 0x24b4
- "⒵": [T: dalam kurung z] # 0x24b5
- "Ⓐ": # 0x24b6
    - T: dalam lingkaran
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: a
- "Ⓑ": # 0x24b7
    - T: dalam lingkaran
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: b
- "Ⓒ": # 0x24b8
    - T: dalam lingkaran
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: c
- "Ⓓ": # 0x24b9
    - T: dalam lingkaran
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: d
- "Ⓔ": # 0x24ba
    - T: dalam lingkaran
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: e
- "Ⓕ": # 0x24bb
    - T: dalam lingkaran
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: f
- "Ⓖ": # 0x24bc
    - T: dalam lingkaran
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: g
- "Ⓗ": # 0x24bd
    - T: dalam lingkaran
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: h
- "Ⓘ": # 0x24be
    - T: dalam lingkaran
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: i
- "Ⓙ": # 0x24bf
    - T: dalam lingkaran
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: j
- "Ⓚ": # 0x24c0
    - T: dalam lingkaran
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: k
- "Ⓛ": # 0x24c1
    - T: dalam lingkaran
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: l
- "Ⓜ": # 0x24c2
    - T: dalam lingkaran
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: m
- "Ⓝ": # 0x24c3
    - T: dalam lingkaran
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: n
- "Ⓞ": # 0x24c4
    - T: dalam lingkaran
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: o
- "Ⓟ": # 0x24c5
    - T: dalam lingkaran
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: p
- "Ⓠ": # 0x24c6
    - T: dalam lingkaran
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: q
- "Ⓡ": # 0x24c7
    - T: dalam lingkaran
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: r
- "Ⓢ": # 0x24c8
    - T: dalam lingkaran
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: s
- "Ⓣ": # 0x24c9
    - T: dalam lingkaran
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: t
- "Ⓤ": # 0x24ca
    - T: dalam lingkaran
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: u
- "Ⓥ": # 0x24cb
    - T: dalam lingkaran
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: v
- "Ⓦ": # 0x24cc
    - T: dalam lingkaran
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: w
- "Ⓧ": # 0x24cd
    - T: dalam lingkaran
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: x
- "Ⓨ": # 0x24ce
    - T: dalam lingkaran
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: y
- "Ⓩ": # 0x24cf
    - T: dalam lingkaran
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: z
- "ⓐ": [T: dalam lingkaran a] # 0x24d0
- "ⓑ": [T: dalam lingkaran b] # 0x24d1
- "ⓒ": [T: dalam lingkaran c] # 0x24d2
- "ⓓ": [T: dalam lingkaran d] # 0x24d3
- "ⓔ": [T: dalam lingkaran e] # 0x24d4
- "ⓕ": [T: dalam lingkaran f] # 0x24d5
- "ⓖ": [T: dalam lingkaran g] # 0x24d6
- "ⓗ": [T: dalam lingkaran h] # 0x24d7
- "ⓘ": [T: dalam lingkaran i] # 0x24d8
- "ⓙ": [T: dalam lingkaran j] # 0x24d9
- "ⓚ": [T: dalam lingkaran k] # 0x24da
- "ⓛ": [T: dalam lingkaran l] # 0x24db
- "ⓜ": [T: dalam lingkaran m] # 0x24dc
- "ⓝ": [T: dalam lingkaran n] # 0x24dd
- "ⓞ": [T: dalam lingkaran o] # 0x24de
- "ⓟ": [T: dalam lingkaran p] # 0x24df
- "ⓠ": [T: dalam lingkaran q] # 0x24e0
- "ⓡ": [T: dalam lingkaran r] # 0x24e1
- "ⓢ": [T: dalam lingkaran s] # 0x24e2
- "ⓣ": [T: dalam lingkaran t] # 0x24e3
- "ⓤ": [T: dalam lingkaran u] # 0x24e4
- "ⓥ": [T: dalam lingkaran v] # 0x24e5
- "ⓦ": [T: dalam lingkaran w] # 0x24e6
- "ⓧ": [T: dalam lingkaran x] # 0x24e7
- "ⓨ": [T: dalam lingkaran y] # 0x24e8
- "ⓩ": [T: dalam lingkaran z] # 0x24e9
- "⓪": [T: dalam lingkaran zero] # 0x24ea
- "⓫": [T: dalam lingkaran hitam sebelas] # 0x24eb
- "⓬": [T: dalam lingkaran hitam duabelas] # 0x24ec
- "⓭": [T: dalam lingkaran hitam tigabelas] # 0x24ed
- "⓮": [T: dalam lingkaran hitam empatbelas] # 0x24ee
- "⓯": [T: dalam lingkaran hitam limabelas] # 0x24ef
- "⓰": [T: dalam lingkaran hitam enambelas] # 0x24f0
- "⓱": [T: dalam lingkaran hitam tujuhbelas] # 0x24f1
- "⓲": [T: dalam lingkaran hitam delapanbelas] # 0x24f2
- "⓳": [T: dalam lingkaran hitam sembilanbelas] # 0x24f3
- "⓴": [T: dalam lingkaran hitam duapuluh] # 0x24f4
- "⓵": [T: dalam lingkaran ganda satu] # 0x24f5
- "⓶": [T: dalam lingkaran ganda dua] # 0x24f6
- "⓷": [T: dalam lingkaran ganda tiga] # 0x24f7
- "⓸": [T: dalam lingkaran ganda empat] # 0x24f8
- "⓹": [T: dalam lingkaran ganda lima] # 0x24f9
- "⓺": [T: dalam lingkaran ganda enam] # 0x24fa
- "⓻": [T: dalam lingkaran ganda tujuh] # 0x24fb
- "⓼": [T: dalam lingkaran ganda delapan] # 0x24fc
- "⓽": [T: dalam lingkaran ganda sembilan] # 0x24fd
- "⓾": [T: dalam lingkaran ganda sepuluh] # 0x24fe
- "⓿": [T: dalam lingkaran hitam nol] # 0x24ff
- "■": [T: persegi hitam] # 0x25a0
- "□": [T: persegi putih] # 0x25a1
- "▢": [T: persegi putih dengan sudut bulat] # 0x25a2
- "▣": [T: persegi putih berisi kotak hitam kecil] # 0x25a3
- "▤": [T: persegi dengan isian horizontal] # 0x25a4
- "▥": [T: persegi dengan isian vertikal] # 0x25a5
- "▦": [T: persegi dengan isian palka silang ortogonal] # 0x25a6
- "▧": [T: persegi dengan isian kiri atas ke kanan bawah] # 0x25a7
- "▨": [T: persegi dengan isian kanan atas ke kiri bawah] # 0x25a8
- "▩": [T: persegi dengan isian palka silang diagonal] # 0x25a9
- "▪": [T: persegi kecil hitam] # 0x25aa
- "▫": [T: persegi kecil putih] # 0x25ab
- "▬": [T: persegi panjang hitam] # 0x25ac
- "▭": [T: persegi panjang putih] # 0x25ad
- "▮": [T: persegi panjang vertikal hitam] # 0x25ae
- "▯": [T: persegi panjang vertikal putih] # 0x25af
- "▰": [T: jajaran genjang hitam] # 0x25b0
- "▱": [T: jajaran genjang putih] # 0x25b1
- "▲": [T: segitiga hitam menunjuk ke atas] # 0x25b2
- "△": [T: segitiga menunjuk putih] # 0x25b3
- "▴": [T: segitiga kecil mengarah ke atas hitam] # 0x25b4
- "▵": [T: segitiga kecil mengarah ke atas putih] # 0x25b5
- "▶": [T: segitiga siku-siku hitam] # 0x25b6
- "▷": [T: segitiga siku-siku putih] # 0x25b7
- "▸": [T: black right pointing small triangle] # 0x25b8
- "▹": [T: white right pointing small triangle] # 0x25b9
- "►": [T: black right pointing pointer] # 0x25ba
- "▻": [T: white right pointing pointer] # 0x25bb
- "▼": [T: black down pointing triangle] # 0x25bc
- "▽": [T: white down pointing triangle] # 0x25bd
- "▾": [T: black down pointing small triangle] # 0x25be
- "▿": [T: white down pointing small triangle] # 0x25bf
- "◀": [T: black left pointing triangle] # 0x25c0
- "◁": [T: white left pointing triangle] # 0x25c1
- "◂": [T: black left pointing small triangle] # 0x25c2
- "◃": [T: white left pointing small triangle] # 0x25c3
- "◄": [T: black left pointing pointer] # 0x25c4
- "◅": [T: white left pointing pointer] # 0x25c5
- "◆": [T: black diamond] # 0x25c6
- "◇": [T: white diamond] # 0x25c7
- "◈": [T: white diamond containing black small diamond] # 0x25c8
- "◉": [T: fisheye] # 0x25c9
- "◊": [T: lozenge] # 0x25ca
- "○": [T: white circle] # 0x25cb
- "◌": [T: dotted circle] # 0x25cc
- "◍": [T: circle with vertical fill] # 0x25cd
- "◎": [T: bullseye] # 0x25ce
- "●": [T: black circle] # 0x25cf
- "◐": [T: circle with left half black] # 0x25d0
- "◑": [T: circle with right half black] # 0x25d1
- "◒": [T: circle with lower half black] # 0x25d2
- "◓": [T: circle with upper half black] # 0x25d3
- "◔": [T: circle with upper right quadrant black] # 0x25d4
- "◕": [T: circle with all but upper left quadrant black] # 0x25d5
- "◖": [T: left half black circle] # 0x25d6
- "◗": [T: right half black circle] # 0x25d7
- "◘": [T: inverse bullet] # 0x25d8
- "◙": [T: inverse white circle] # 0x25d9
- "◚": [T: upper half inverse white circle] # 0x25da
- "◛": [T: lower half inverse white circle] # 0x25db
- "◜": [T: upper left quadrant circular arc] # 0x25dc
- "◝": [T: upper right quadrant circular arc] # 0x25dd
- "◞": [T: lower right quadrant circular arc] # 0x25de
- "◟": [T: lower left quadrant circular arc] # 0x25df
- "◠": [T: upper half circle] # 0x25e0
- "◡": [T: lower half circle] # 0x25e1
- "◢": [T: black lower right triangle] # 0x25e2
- "◣": [T: black lower left triangle] # 0x25e3
- "◤": [T: black upper left triangle] # 0x25e4
- "◥": [T: black upper right triangle] # 0x25e5
- "◦": [T: composition] # 0x25e6
- "◧": [T: square with left half black] # 0x25e7
- "◨": [T: square with right half black] # 0x25e8
- "◩": [T: square with upper left half black] # 0x25e9
- "◪": [T: square with lower right half black] # 0x25ea
- "◫": [T: white square with bisecting line] # 0x25eb
- "◬": [T: white up pointing triangle with dot] # 0x25ec
- "◭": [T: up pointing triangle with left half black] # 0x25ed
- "◮": [T: up pointing triangle with right half black] # 0x25ee
- "◯": [T: lingkaran besar] # 0x25ef
- "◰": [T: white square with upper left quadrant] # 0x25f0
- "◱": [T: white square with lower left quadrant] # 0x25f1
- "◲": [T: white square with lower right quadrant] # 0x25f2
- "◳": [T: white square with upper right quadrant] # 0x25f3
- "◴": [T: white circle with upper left quadrant] # 0x25f4
- "◵": [T: white circle with lower left quadrant] # 0x25f5
- "◶": [T: white circle with lower right quadrant] # 0x25f6
- "◷": [T: white circle with upper right quadrant] # 0x25f7
- "◸": [T: upper left triangle] # 0x25f8
- "◹": [T: upper right triangle] # 0x25f9
- "◺": [T: lower left triangle] # 0x25fa
- "◻": [T: white medium square] # 0x25fb
- "◼": [T: black medium square] # 0x25fc
- "◽": [T: white medium small square] # 0x25fd
- "◾": [T: black medium small square] # 0x25fe
- "◿": [T: lower right triangle] # 0x25ff
- "♠": [T: black spade suit] # 0x2660
- "♡": [T: white heart suit] # 0x2661
- "♢": [T: white diamond suit] # 0x2662
- "♣": [T: black club suit] # 0x2663
- "♤": [T: white spade suit] # 0x2664
- "♥": [T: black heart suit] # 0x2665
- "♦": [T: black diamond suit] # 0x2666
- "♧": [T: white club suit] # 0x2667
- "❨": [T: medium left parentheses ornament] # 0x2768
- "❩": [T: medium right parentheses ornament] # 0x2769
- "❪": [T: medium flattened left parentheses ornament] # 0x276a
- "❫": [T: medium flattened right parentheses ornament] # 0x276b
- "❬": [T: medium left-pointing angle bracket ornament] # 0x276c
- "❭": [T: medium right--pointing angle bracked ornament] # 0x276d
- "❮": [T: heavy left-pointing angle quotation mark ornament] # 0x276e
- "❯": [T: heavy right-pointing angle quotation mark ornament] # 0x276f
- "❰": [T: heavy left-pointing angle bracket ornament] # 0x2770
- "❱": [T: heavy right-pointing angle bracket ornament] # 0x2771
- "❲": [T: light left tortoise shell bracket ornament] # 0x2772
- "❳": [T: light right tortoise shell bracket ornament] # 0x2773
- "❴": [T: medium left brace ornament] # 0x2774
- "❵": [T: medium right brace ornament] # 0x2775
- "❶": [T: dalam lingkaran hitam one] # 0x2776
- "❷": [T: dalam lingkaran hitam two] # 0x2777
- "❸": [T: dalam lingkaran hitam three] # 0x2778
- "❹": [T: dalam lingkaran hitam four] # 0x2779
- "❺": [T: dalam lingkaran hitam five] # 0x277a
- "❻": [T: dalam lingkaran hitam six] # 0x277b
- "❼": [T: dalam lingkaran hitam seven] # 0x277c
- "❽": [T: dalam lingkaran hitam eight] # 0x277d
- "❾": [T: dalam lingkaran hitam nine] # 0x277e
- "❿": [T: dalam lingkaran hitam ten] # 0x277f
- "➀": [T: dalam lingkaran sans serif satu] # 0x2780
- "➁": [T: dalam lingkaran sans serif dua] # 0x2781
- "➂": [T: dalam lingkaran sans serif tiga] # 0x2782
- "➃": [T: dalam lingkaran sans serif empat] # 0x2783
- "➄": [T: dalam lingkaran sans serif lima] # 0x2784
- "➅": [T: dalam lingkaran sans serif enam] # 0x2785
- "➆": [T: dalam lingkaran sans serif tujuh] # 0x2786
- "➇": [T: dalam lingkaran sans serif delapan] # 0x2787
- "➈": [T: dalam lingkaran sans serif sembilan] # 0x2788
- "➉": [T: dalam lingkaran sans serif sepuluh] # 0x2789
- "➊": [T: dalam lingkaran hitam sans serif satu] # 0x278a
- "➋": [T: dalam lingkaran hitam sans serif dua] # 0x278b
- "➌": [T: dalam lingkaran hitam sans serif tiga] # 0x278c
- "➍": [T: dalam lingkaran hitam sans serif empat] # 0x278d
- "➎": [T: dalam lingkaran hitam sans serif lima] # 0x278e
- "➏": [T: dalam lingkaran hitam sans serif enam] # 0x278f
- "➐": [T: dalam lingkaran hitam sans serif tujuh] # 0x2790
- "➑": [T: dalam lingkaran hitam sans serif delapan] # 0x2791
- "➒": [T: dalam lingkaran hitam sans serif sembilan] # 0x2792
- "➓": [T: dalam lingkaran hitam sans serif sepuluh] # 0x2793
- "➔": [T: panah kanan berkepala lebar tebal] # 0x2794
- "➕": [T: tanda tambah tebal] # 0x2795
- "➖": [T: tanda kurang tebal] # 0x2796
- "➗": [T: tanda bagi tebal] # 0x2797
- "➘": [T: panah tenggara tebal] # 0x2798
- "➙": [T: panah kanan tebal] # 0x2799
- "➚": [T: panah timur laut tebal] # 0x279a
- "➛": [T: titik penyusunan panah kanan] # 0x279b
- "➜": [T: panah kanan ujung bulat tebal] # 0x279c
- "➝": [T: panah kanan kepala segitiga] # 0x279d
- "➞": [T: panah kanan kepala segitiga tebal] # 0x279e
- "➟": [T: panah kanan kepala segitiga putus-putus] # 0x279f
- "➠": [T: panah kanan kepala segitiga putus-putus tebal] # 0x27a0
- "➡": [T: panah kanan hitam] # 0x27a1
- "➢": [T: panah kanan tiga d atas terang] # 0x27a2
- "➣": [T: panah kanan tiga d bawah terang] # 0x27a3
- "➤": [T: mata panah kanan hitam] # 0x27a4
- "➥": [T: panah kanan melengkung ke bawah hitam tebal] # 0x27a5
- "➦": [T: panah kanan melengkung ke atas hitam tebal] # 0x27a6
- "➧": [T: panah kanan hitam jongkok] # 0x27a7
- "➨": [T: panah kanan hitam tebal ujung cekung] # 0x27a8
- "➩": [T: panah kanan putih berbayang kanan] # 0x27a9
- "➪": [T: panah kanan putih berbayang kiri] # 0x27aa
- "➫": [T: panah kanan putih berbayang miring ke belakang] # 0x27ab
- "➬": [T: panah kanan putih berbayang miring ke depan] # 0x27ac
- "➭": [T: heavy lower right-shadowed white rightwards arrow] # 0x27ad
- "➮": [T: heavy upper right-shadowed white rightwards arrow] # 0x27ae
- "➯": [T: notched lower right-shadowed white rightwards arrow] # 0x27af
- "➱": [T: notched upper right-shadowed white rightwards arrow] # 0x27b1
- "➲": [T: circled heavy white rightwards arrow] # 0x27b2
- "➳": [T: white-feathered rightwards arrow] # 0x27b3
- "➴": [T: black-feathered south east arrow] # 0x27b4
- "➵": [T: black-feathered rightwards arrow] # 0x27b5
- "➶": [T: black-feathered north east arrow] # 0x27b6
- "➷": [T: heavy black-feathered south east arrow] # 0x27b7
- "➸": [T: heavy black-feathered rightwards arrow] # 0x27b8
- "➹": [T: heavy black-feathered north east arrow] # 0x27b9
- "➺": [T: teradrop-barbed rightwards arrow] # 0x27ba
- "➻": [T: heavy teardrop-shanked rightwards arrow] # 0x27bb
- "➼": [T: wedge-tailed rightwards arrow] # 0x27bc
- "➽": [T: heavy wedge-tailed rightwards arrow] # 0x27bd
- "➾": [T: open-outlined rightwards arrow] # 0x27be
- "⟀": [T: three dimensional angle] # 0x27c0
- "⟁": [T: white triangle containing small white triangle] # 0x27c1
- "⟂": # 0x27c2
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: is perpendicular to }
- "⟃": # 0x27c3
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: "" }
    - T: an open subset of
- "⟄": # 0x27c4
    - test:
        if: "$Verbosity!='Terse'"
        then: { T: "" }
    - T: an open superset of
- "⟅": [T: left s-shaped bag delimiter] # 0x27c5
- "⟆": [T: right s-shaped bag delimiter] # 0x27c6
- "⟇": [T: or with dot inside] # 0x27c7
- "⟈": [T: reverse solidus preceeding subset] # 0x27c8
- "⟉": [T: superset preceeding solidus] # 0x27c9
- "⟊": [T: vertical bar with horizontal stroke] # 0x27ca
- "⟋": [T: mathematical rising diagonal] # 0x27cb
- "⟌": [T: long division] # 0x27cc
- "⟍": [T: mathematical falling diagonal] # 0x27cd
- "⟎": [T: squared logical and] # 0x27ce
- "⟏": [T: squared logical or] # 0x27cf
- "⟐": [T: white diamond with centered dot] # 0x27d0
- "⟑": [T: and with dot] # 0x27d1
- "⟒": [T: element of openning upwards] # 0x27d2
- "⟓": [T: lower right corner with dot] # 0x27d3
- "⟔": [T: upper left corner with dot] # 0x27d4
- "⟕": [T: left outer join] # 0x27d5
- "⟖": [T: right outer join] # 0x27d6
- "⟗": [T: full outer join] # 0x27d7
- "⟘": [T: large up tack] # 0x27d8
- "⟙": [T: large down tack] # 0x27d9
- "⟚": [T: left and right double turnstile] # 0x27da
- "⟛": [T: left and right tack] # 0x27db
- "⟜": [T: left multimap] # 0x27dc
- "⟝": [T: long right tack] # 0x27dd
- "⟞": [T: long left tack] # 0x27de
- "⟟": [T: up tack with circle above] # 0x27df
- "⟠": [T: lozenge divided by horizontal rule] # 0x27e0
- "⟡": [T: white concave sided diamond] # 0x27e1
- "⟢": [T: white concave sided diamond with leftwards tick] # 0x27e2
- "⟣": [T: white concave sided diamond with rightwards tick] # 0x27e3
- "⟤": [T: white square with leftwards tick] # 0x27e4
- "⟥": [T: white square with rightwards tick] # 0x27e5
- "⟦": [T: left white square bracket] # 0x27e6
- "⟧": [T: right white square bracket] # 0x27e7
- "⟨": [T: left angle bracket] # 0x27e8
- "⟩": [T: right angle bracket] # 0x27e9
- "⟪": [T: left double angle bracket] # 0x27ea
- "⟫": [T: right double angle bracket] # 0x27eb
- "⟬": [T: left white tortoise shell bracket] # 0x27ec
- "⟭": [T: right white tortoise shell bracket] # 0x27ed
- "⟮": [T: left flattened parenthesis] # 0x27ee
- "⟯": [T: right flattened parenthesis] # 0x27ef
- "⟰": [T: upwards quadruple arrow] # 0x27f0
- "⟱": [T: downwards quadruple arrow] # 0x27f1
- "⟲": [T: anticlockwise gapped circle arrow] # 0x27f2
- "⟳": [T: clockwise gapped circle arrow] # 0x27f3
- "⟴": [T: right arrow with circled plus] # 0x27f4
- "⟵": [T: long leftwards arrow] # 0x27f5
- "⟶": [T: long rightwards arrow] # 0x27f6
- "⟷": [T: long left right arrow] # 0x27f7
- "⟸": [T: long leftwards double arrow] # 0x27f8
- "⟹": [T: long rightwards double arrow] # 0x27f9
- "⟺": [T: long left right double arrow] # 0x27fa
- "⟻": [T: long leftwards arrow from bar] # 0x27fb
- "⟼": [T: long rightwards arrow from bar] # 0x27fc
- "⟽": [T: long leftwards double arrow from bar] # 0x27fd
- "⟾": [T: long rightwards double arrow from bar] # 0x27fe
- "⟿": [T: long rightwards squiggle arrow] # 0x27ff
- "⤀": [T: rightwards two headed arrow with vertical stroke] # 0x2900
- "⤁": [T: rightwards two headed arrow with double vertical stroke] # 0x2901
- "⤂": [T: leftwards double arrow with vertical stroke] # 0x2902
- "⤃": [T: rightwards double arrow with vertical stroke] # 0x2903
- "⤄": [T: left right double arrow with vertical stroke] # 0x2904
- "⤅": [T: rightwards two headed arrow from bar] # 0x2905
- "⤆": [T: leftwards double arrow from bar] # 0x2906
- "⤇": [T: rightwards double arrow from bar] # 0x2907
- "⤈": [T: downwards arrow with horizontal stroke] # 0x2908
- "⤉": [T: upwards arrow with horizontal stroke] # 0x2909
- "⤊": [T: upwards triple arrow] # 0x290a
- "⤋": [T: downwards triple arrow] # 0x290b
- "⤌": [T: leftwards double dash arrow] # 0x290c
- "⤍": [T: rightwards double dash arrow] # 0x290d
- "⤎": [T: leftwards triple dash arrow] # 0x290e
- "⤏": [T: rightwards triple dash arrow] # 0x290f
- "⤐": [T: rightwards two headed triple dash arrow] # 0x2910
- "⤑": [T: panah kanan with dotted stem] # 0x2911
- "⤒": [T: upwards arrow to bar] # 0x2912
- "⤓": [T: downwards arrow to bar] # 0x2913
- "⤔": [T: panah kanan dengan ekor and vertical stroke] # 0x2914
- "⤕": [T: panah kanan dengan ekor and double vertical stroke] # 0x2915
- "⤖": [T: rightwards two headed arrow dengan ekor] # 0x2916
- "⤗": [T: rightwards two headed arrow dengan ekor with vertical stroke] # 0x2917
- "⤘": [T: rightwards two headed arrow dengan ekor with double vertical stroke] # 0x2918
- "⤙": [T: panah kiri tail] # 0x2919
- "⤚": [T: panah kanan tail] # 0x291a
- "⤛": [T: leftwards double arrow tail] # 0x291b
- "⤜": [T: rightwards double arrow tail] # 0x291c
- "⤝": [T: panah kiri to filled diamond] # 0x291d
- "⤞": [T: panah kanan to filled diamond] # 0x291e
- "⤟": [T: panah kiri from bar to filled diamond] # 0x291f
- "⤠": [T: panah kanan from bar to filled diamond] # 0x2920
- "⤡": [T: north west and south east arrow] # 0x2921
- "⤢": [T: north east and south west arrow] # 0x2922
- "⤣": [T: north west arrow dengan kail] # 0x2923
- "⤤": [T: north east arrow dengan kail] # 0x2924
- "⤥": [T: south east arrow dengan kail] # 0x2925
- "⤦": [T: south west arrow dengan kail] # 0x2926
- "⤧": [T: north west arrow and north east arrow] # 0x2927
- "⤨": [T: north east arrow and south east arrow] # 0x2928
- "⤩": [T: south east arrow and south west arrow] # 0x2929
- "⤪": [T: south west arrow and north west arrow] # 0x292a
- "⤫": [T: rising diagonal crossing falling diagonal] # 0x292b
- "⤬": [T: falling diagonal crossing rising diagonal] # 0x292c
- "⤭": [T: south east arrow crossing north east arrow] # 0x292d
- "⤮": [T: north east arrow corssing south east arrow] # 0x292e
- "⤯": [T: falling diagonal crossing north east arrow] # 0x292f
- "⤰": [T: rising diagonal crossing south east arrow] # 0x2930
- "⤱": [T: north east arrow corssing north west arrow] # 0x2931
- "⤲": [T: north west arrow crossing north east arrow] # 0x2932
- "⤳": [T: wave arrow pointing directly right] # 0x2933
- "⤴": [T: arrow pointing rightwards then curving upwards] # 0x2934
- "⤵": [T: arrow pointing rightwards then curving downwards] # 0x2935
- "⤶": [T: arrow pointing downwards then curving leftwards] # 0x2936
- "⤷": [T: arrow pointing downwards then curving rightwards] # 0x2937
- "⤸": [T: right side arc clockwise arrow] # 0x2938
- "⤹": [T: left side arc anticlockwise arrow] # 0x2939
- "⤺": [T: top arc anticlockwise arrow] # 0x293a
- "⤻": [T: bottom arc anticlockwise arrow] # 0x293b
- "⤼": [T: top arc clockwise arrow with minus] # 0x293c
- "⤽": [T: top arc anticlockwise arrow with plus] # 0x293d
- "⤾": [T: lower right semicicrular clockwise arrow] # 0x293e
- "⤿": [T: lower left semicircular anticlockwise arrow] # 0x293f
- "⥀": [T: anticlockwise closed circle arrow] # 0x2940
- "⥁": [T: clockwise closed circle arrow] # 0x2941
- "⥂": [T: panah kanan above short leftwards arrow] # 0x2942
- "⥃": [T: panah kiri above short rightwards arrow] # 0x2943
- "⥄": [T: short rightwards arrow above leftwards arrow] # 0x2944
- "⥅": [T: panah kanan with plus below] # 0x2945
- "⥆": [T: panah kiri with plus below] # 0x2946
- "⥇": [T: panah kanan through x] # 0x2947
- "⥈": [T: left right arrow through circle] # 0x2948
- "⥉": [T: upwards two headed arrow from circle] # 0x2949
- "⥊": [T: left barb up right barb down harpoon] # 0x294a
- "⥋": [T: left barb down right barb up harpoon] # 0x294b
- "⥌": [T: up barb right down barb left harpoon] # 0x294c
- "⥍": [T: up barb left down barb right harpoon] # 0x294d
- "⥎": [T: left barb up right barb up harpoon] # 0x294e
- "⥏": [T: up barb right down barb right harpoon] # 0x294f
- "⥐": [T: left barb down right barb down harpoon] # 0x2950
- "⥑": [T: up barb left down barb left harpoon] # 0x2951
- "⥒": [T: leftwards harpoon with barb up to bar] # 0x2952
- "⥓": [T: rightwards harpoon with barb up to bar] # 0x2953
- "⥔": [T: upwards harpoon with barb right to bar] # 0x2954
- "⥕": [T: downwards harpoon with barb right to bar] # 0x2955
- "⥖": [T: leftwards harpoon with barb down to bar] # 0x2956
- "⥗": [T: rightwards harpoon with barb down to bar] # 0x2957
- "⥘": [T: upwards harpoon with barb left to bar] # 0x2958
- "⥙": [T: downwards harpoon with barb left to bar] # 0x2959
- "⥚": [T: leftwards harpoon with barb up from bar] # 0x295a
- "⥛": [T: rightwards harpoon with barb up from bar] # 0x295b
- "⥜": [T: upwards harpoon with barb right from bar] # 0x295c
- "⥝": [T: downwards harpoon with barb right from bar] # 0x295d
- "⥞": [T: leftwards harpoon with barb down from bar] # 0x295e
- "⥟": [T: rightwards harpoon with barb down from bar] # 0x295f
- "⥠": [T: upwards harpoon with barb left from bar] # 0x2960
- "⥡": [T: downwards harpoon with barb left from bar] # 0x2961
- "⥢": [
      T: leftwards harpoon with barb up above leftwards harpoon with barb down,
    ] # 0x2962
- "⥣": [
      T: upwards harpoon with barb left beside upwards harpoon with barb right,
    ] # 0x2963
- "⥤": [
      T: rightwards harpoon with barb up above rightwards harpoon with barb down,
    ] # 0x2964
- "⥥": [
      T: downwards harpoon with barb left beside downwards harpoon with barb right,
    ] # 0x2965
- "⥦": [T: leftwards harpoon with barb up above rightwards harpoon with barb up] # 0x2966
- "⥧": [
      T: leftwards harpoon with barb down above rightwards harpoon with barb down,
    ] # 0x2967
- "⥨": [T: rightwards harpoon with barb up above leftwards harpoon with barb up] # 0x2968
- "⥩": [
      T: rightwards harpoon with barb down above leftwards harpoon with barb down,
    ] # 0x2969
- "⥪": [T: leftwards harpoon with barb up above long dash] # 0x296a
- "⥫": [T: leftwards harpoon with barb down below long dash] # 0x296b
- "⥬": [T: rightwards harpoon with barb up above long dash] # 0x296c
- "⥭": [T: rightwards harpoon with barb down below long dash] # 0x296d
- "⥮": [
      T: upwards harpoon with barb left beside downwards harpoon with barb right,
    ] # 0x296e
- "⥯": [
      T: downwards harpoon with barb left beside upwards harpoon with barb right,
    ] # 0x296f
- "⥰": [T: right double arrow with rounded head] # 0x2970
- "⥱": [T: equals above rightwards arrow] # 0x2971
- "⥲": [T: tilde operator above rightwards arrow] # 0x2972
- "⥳": [T: panah kiri above tilde operator] # 0x2973
- "⥴": [T: panah kanan above tilde operator] # 0x2974
- "⥵": [T: panah kanan above almost equal to] # 0x2975
- "⥶": [T: less than above leftwards arrow] # 0x2976
- "⥷": [T: panah kiri through less than] # 0x2977
- "⥸": [T: greater than above rightwards arrow] # 0x2978
- "⥹": [T: subset above rightwards arrow] # 0x2979
- "⥺": [T: panah kiri through subset] # 0x297a
- "⥻": [T: superset above leftwards arrow] # 0x297b
- "⥼": [T: left fish tail] # 0x297c
- "⥽": [T: right fish tail] # 0x297d
- "⥾": [T: up fish tail] # 0x297e
- "⥿": [T: down fish tail] # 0x297f
- "⦀": [T: triple vertical bar delimiter] # 0x2980
- "⦁": [T: z notation spot] # 0x2981
- "⦂": [T: z notation type colon] # 0x2982
- "⦃": [T: left white brace] # 0x2983
- "⦄": [T: right white brace] # 0x2984
- "⦅": [T: left white parenthesis] # 0x2985
- "⦆": [T: right white parenthesis] # 0x2986
- "⦇": [T: z notation left image bracket] # 0x2987
- "⦈": [T: z notation right image bracket] # 0x2988
- "⦉": [T: z notation left binding bracket] # 0x2989
- "⦊": [T: z notation right binding bracket] # 0x298a
- "⦋": [T: left square bracket with underbar] # 0x298b
- "⦌": [T: right square bracket with underbar] # 0x298c
- "⦍": [T: left square bracket with tick in top corner] # 0x298d
- "⦎": [T: right square bracket with tick in bottom corner] # 0x298e
- "⦏": [T: left square bracket with tick in bottom corner] # 0x298f
- "⦐": [T: right square bracket with tick in top corner] # 0x2990
- "⦑": [T: left angle bracket with dot] # 0x2991
- "⦒": [T: right angle bracket with dot] # 0x2992
- "⦓": [T: left arc less than bracket] # 0x2993
- "⦔": [T: right arc greater than bracket] # 0x2994
- "⦕": [T: double left arc greater than bracket] # 0x2995
- "⦖": [T: double right arc less than bracket] # 0x2996
- "⦗": [T: left black tortoise shell bracket] # 0x2997
- "⦘": [T: right black tortoise shell bracket] # 0x2998
- "⦙": [T: dotted fence] # 0x2999
- "⦚": [T: vertical zigzag line] # 0x299a
- "⦛": [T: measured angle opening left] # 0x299b
- "⦜": [T: right angle varient with square] # 0x299c
- "⦝": [T: measured right angle with dot] # 0x299d
- "⦞": [T: angle with s inside] # 0x299e
- "⦟": [T: akut angle] # 0x299f
- "⦠": [T: spehrical angle opening left] # 0x29a0
- "⦡": [T: spehrical angle opening up] # 0x29a1
- "⦢": [T: turned angle] # 0x29a2
- "⦣": [T: reversed angle] # 0x29a3
- "⦤": [T: angle with underbar] # 0x29a4
- "⦥": [T: reversed angle with underbar] # 0x29a5
- "⦦": [T: oblique angle opening up] # 0x29a6
- "⦧": [T: oblique angle opening down] # 0x29a7
- "⦨": [
      T: measured angle with open arm ending in arrow pointing up and to the right,
    ] # 0x29a8
- "⦩": [
      T: measured angle with open arm ending in arrow pointing up and to the left,
    ] # 0x29a9
- "⦪": [
      T: measured angle with open arm ending in arrow pointing down and to the right,
    ] # 0x29aa
- "⦫": [
      T: measured angle with open arm ending in arrow pointing down and to the left,
    ] # 0x29ab
- "⦬": [T: measured angle with open arm ending in arrow pointing right and up] # 0x29ac
- "⦭": [T: measured angle with open arm ending in arrow pointing left and up] # 0x29ad
- "⦮": [T: measured angle with open arm ending in arrow pointing right and down] # 0x29ae
- "⦯": [T: measured angle with open arm ending in arrow pointing left and down] # 0x29af
- "⦰": [T: reversed empty set] # 0x29b0
- "⦱": [T: empty set with overbar] # 0x29b1
- "⦲": [T: empty set with small circle above] # 0x29b2
- "⦳": [T: empty set with right arrow above] # 0x29b3
- "⦴": [T: empty set with left arrow above] # 0x29b4
- "⦵": [T: circle with horizontal bar] # 0x29b5
- "⦶": [T: circled vertical bar] # 0x29b6
- "⦷": [T: circled parallel] # 0x29b7
- "⦸": [T: circled reverse solidus] # 0x29b8
- "⦹": [T: circled perpendicular] # 0x29b9
- "⦺": [
      T: circled divided by horizontal bar and top half divided by vertical bar,
    ] # 0x29ba
- "⦻": [T: circle with superimposed x] # 0x29bb
- "⦼": [T: circled anticlockwise rotated division sign] # 0x29bc
- "⦽": [T: up arrow through circle] # 0x29bd
- "⦾": [T: circled white bullet] # 0x29be
- "⦿": [T: circled bullet] # 0x29bf
- "⧀": [T: circled less than] # 0x29c0
- "⧁": [T: circled greater than] # 0x29c1
- "⧂": [T: circle with small circle to the right] # 0x29c2
- "⧃": [T: circle with two horizontal strokes to the right] # 0x29c3
- "⧄": [T: squared rising diagonal slash] # 0x29c4
- "⧅": [T: squared falling diagonal slash] # 0x29c5
- "⧆": [T: squared asterisk] # 0x29c6
- "⧇": [T: squared small circle] # 0x29c7
- "⧈": [T: squared square] # 0x29c8
- "⧉": [T: two joined squares] # 0x29c9
- "⧊": [T: triangle with dot above] # 0x29ca
- "⧋": [T: triangle with underbar] # 0x29cb
- "⧌": [T: s in triangle] # 0x29cc
- "⧍": [T: triangle with serifs at bottom] # 0x29cd
- "⧎": [T: right triangle above left triangle] # 0x29ce
- "⧏": [T: left triangle beside vertical bar] # 0x29cf
- "⧐": [T: vertical bar beside right triangle] # 0x29d0
- "⧑": [T: bowtie with left half black] # 0x29d1
- "⧒": [T: bowtie with right half black] # 0x29d2
- "⧓": [T: black bowtie] # 0x29d3
- "⧔": [T: times with left half black] # 0x29d4
- "⧕": [T: times with right half black] # 0x29d5
- "⧖": [T: white hourglass] # 0x29d6
- "⧗": [T: black hourglass] # 0x29d7
- "⧘": [T: left wiggly fence] # 0x29d8
- "⧙": [T: right wiggly fence] # 0x29d9
- "⧚": [T: left double wiggly fence] # 0x29da
- "⧛": [T: right double wiggly fence] # 0x29db
- "⧜": [T: incomplete infinity] # 0x29dc
- "⧝": [T: tie over infinity] # 0x29dd
- "⧞": [T: infinity negated with vertical bar] # 0x29de
- "⧟": [T: double-ended multimap] # 0x29df
- "⧠": [T: square with contoured outline] # 0x29e0
- "⧡": [T: increases as] # 0x29e1
- "⧢": [T: shuffle product] # 0x29e2
- "⧣": [T: equals sign and slanted parallel] # 0x29e3
- "⧤": [T: equals sign and slanted parallel with tilde above] # 0x29e4
- "⧥": [T: identical to and slanted parallel] # 0x29e5
- "⧦": [T: gleich stark] # 0x29e6
- "⧧": [T: thermydynamic] # 0x29e7
- "⧨": [T: down pointing triangle with left half black] # 0x29e8
- "⧩": [T: down pointing triangle with right half black] # 0x29e9
- "⧪": [T: black diamond with down arrow] # 0x29ea
- "⧫": [T: black lozenge] # 0x29eb
- "⧬": [T: white circle with down arrow] # 0x29ec
- "⧭": [T: black circle with down arrow] # 0x29ed
- "⧮": [T: error-barred white square] # 0x29ee
- "⧯": [T: error-barred black square] # 0x29ef
- "⧰": [T: error-barred white diamond] # 0x29f0
- "⧱": [T: error-barred black diamond] # 0x29f1
- "⧲": [T: error-barred white circle] # 0x29f2
- "⧳": [T: error-barred black circle] # 0x29f3
- "⧴": [T: rule-delayed] # 0x29f4
- "⧵": [T: reverse solidus operator] # 0x29f5
- "⧶": [T: solidus with overbar] # 0x29f6
- "⧷": [T: reverse solidus with horizontal stroke] # 0x29f7
- "⧸": [T: big solidus] # 0x29f8
- "⧹": [T: big reverse solidus] # 0x29f9
- "⧺": [T: double plus] # 0x29fa
- "⧻": [T: triple plus] # 0x29fb
- "⧼": [T: left pointing curved angle bracket] # 0x29fc
- "⧽": [T: right pointing curved angle bracket] # 0x29fd
- "⧾": [T: tiny] # 0x29fe
- "⧿": [T: miny] # 0x29ff
- "⨀": [T: circled dot operator] # 0x2a00
- "⨁": [T: circled plus operator] # 0x2a01
- "⨂": [T: circled times operator] # 0x2a02
- "⨃": [T: union operator with dot] # 0x2a03
- "⨄": [T: union operator with plus] # 0x2a04
- "⨅": [T: square intersection operator] # 0x2a05
- "⨆": [T: square union operator] # 0x2a06
- "⨇": [T: two logical and operator] # 0x2a07
- "⨈": [T: two logical or operator] # 0x2a08
- "⨉": [T: times operator] # 0x2a09
- "⨊": [T: modulo two sum] # 0x2a0a
- "⨋": [T: summation with integral] # 0x2a0b
- "⨌": [T: quadruple integral operator] # 0x2a0c
- "⨍": [T: finite part integral] # 0x2a0d
- "⨎": [T: integral with double stroke] # 0x2a0e
- "⨏": [T: integral average with slash] # 0x2a0f
- "⨐": [T: circulation function] # 0x2a10
- "⨑": [T: anticlockwise integration] # 0x2a11
- "⨒": [T: line integration with rectangular path around pole] # 0x2a12
- "⨓": [T: line integration with semicircular path around pole] # 0x2a13
- "⨔": [T: line integration not including the pole] # 0x2a14
- "⨕": [T: integral around a point operator] # 0x2a15
- "⨖": [T: quaternion integral operator] # 0x2a16
- "⨗": [T: integral with leftwards arrow dengan kail] # 0x2a17
- "⨘": [T: integral with times sign] # 0x2a18
- "⨙": [T: integral with intersection] # 0x2a19
- "⨚": [T: integral with union] # 0x2a1a
- "⨛": [T: integral with overbar] # 0x2a1b
- "⨜": [T: integral with underbar] # 0x2a1c
- "⨝": [T: join] # 0x2a1d
- "⨞": [T: large left triangle operator] # 0x2a1e
- "⨟": [T: z notation schema composition] # 0x2a1f
- "⨠": [T: z notation schema piping] # 0x2a20
- "⨡": [T: z notation schema projection] # 0x2a21
- "⨢": [T: plus sign with circle above] # 0x2a22
- "⨣": [T: plus sign with aksen sirkumfleksa above] # 0x2a23
- "⨤": [T: plus sign with tilde above] # 0x2a24
- "⨥": [T: plus sign with dot below] # 0x2a25
- "⨦": [T: plus sign with tilde below] # 0x2a26
- "⨧": [T: plus sign with subscript two] # 0x2a27
- "⨨": [T: plus sign with black triangle] # 0x2a28
- "⨩": [T: minus sign with comma above] # 0x2a29
- "⨪": [T: minus sign with dot below] # 0x2a2a
- "⨫": [T: minus sign with falling dots] # 0x2a2b
- "⨬": [T: minus sign with rising dots] # 0x2a2c
- "⨭": [T: plus sign in left half circle] # 0x2a2d
- "⨮": [T: plus sign in right half circle] # 0x2a2e
- "⨯": [T: vector or cross product] # 0x2a2f
- "⨰": [T: multiplication sign with dot above] # 0x2a30
- "⨱": [T: multiplication sign with underbar] # 0x2a31
- "⨲": [T: semidirect product with bottom closed] # 0x2a32
- "⨳": [T: smash product] # 0x2a33
- "⨴": [T: multiplication sign in left half circle] # 0x2a34
- "⨵": [T: multiplication sign in right half circle] # 0x2a35
- "⨶": [T: circled multiplication sign with aksen sirkumfleksa] # 0x2a36
- "⨷": [T: multiplication sign in double circle] # 0x2a37
- "⨸": [T: circled division sign] # 0x2a38
- "⨹": [T: plus sign in triangle] # 0x2a39
- "⨺": [T: minus sign in triangle] # 0x2a3a
- "⨻": [T: multiplication sign in triangle] # 0x2a3b
- "⨼": [T: interior product] # 0x2a3c
- "⨽": [T: righthand interior product] # 0x2a3d
- "⨮": [T: z notation relational composition] # 0x2a2e
- "⨿": [T: amalgamation or coproduct] # 0x2a3f
- "⩀": [T: intersection with dot] # 0x2a40
- "⩁": [T: union with minus sign] # 0x2a41
- "⩂": [T: union with overbar] # 0x2a42
- "⩃": [T: intersection with overbar] # 0x2a43
- "⩄": [T: intersection with logical and] # 0x2a44
- "⩅": [T: union with logical or] # 0x2a45
- "⩆": [T: union above intersection] # 0x2a46
- "⩇": [T: intersection above union] # 0x2a47
- "⩈": [T: union above bar above intersection] # 0x2a48
- "⩉": [T: intersection above bar above union] # 0x2a49
- "⩊": [T: union beside and joined with union] # 0x2a4a
- "⩋": [T: intersection beside and joined with intersection] # 0x2a4b
- "⩌": [T: closed union with serifs] # 0x2a4c
- "⩍": [T: closed intersection with serifs] # 0x2a4d
- "⩎": [T: double square intersection] # 0x2a4e
- "⩏": [T: double square union] # 0x2a4f
- "⩐": [T: closed union with serifs and smash product] # 0x2a50
- "⩑": [T: logical and with dot above] # 0x2a51
- "⩒": [T: logical or with dot above] # 0x2a52
- "⩓": [T: double logical and] # 0x2a53
- "⩔": [T: double logical or] # 0x2a54
- "⩕": [T: two intersecting logical and] # 0x2a55
- "⩖": [T: two intersecting logical or] # 0x2a56
- "⩗": [T: sloping large or] # 0x2a57
- "⩘": [T: sloping large and] # 0x2a58
- "⩙": [T: logical or overlapping logical and] # 0x2a59
- "⩚": [T: logical and with middle stem] # 0x2a5a
- "⩛": [T: logical or with middle stem] # 0x2a5b
- "⩜": [T: logical and with horizontal dash] # 0x2a5c
- "⩝": [T: logical or with horizontal dash] # 0x2a5d
- "⩞": [T: logical and with double overbar] # 0x2a5e
- "⩟": [T: logical and with underbar] # 0x2a5f
- "⩠": [T: logical and with double underbar] # 0x2a60
- "⩡": [T: small vee with underbar] # 0x2a61
- "⩢": [T: logical or with double overbar] # 0x2a62
- "⩣": [T: logical or with double underbar] # 0x2a63
- "⩤": [T: z notation domain antirestriction] # 0x2a64
- "⩥": [T: z notation range antirestriction] # 0x2a65
- "⩦": [T: equals sign with dot below] # 0x2a66
- "⩧": [T: identical with dot above] # 0x2a67
- "⩨": [T: triple horizontal bar with double vertical stroke] # 0x2a68
- "⩩": [T: triple horizontal bar with triple vertical stroke] # 0x2a69
- "⩪": [T: tilde operator with dot above] # 0x2a6a
- "⩫": [T: tilde operator with rising dots] # 0x2a6b
- "⩬": [T: similar minus similar] # 0x2a6c
- "⩭": [T: congruent with dot above] # 0x2a6d
- "⩮": [T: equals with asterisk] # 0x2a6e
- "⩯": [T: almost equal to with aksen sirkumfleksa] # 0x2a6f
- "⩰": [T: approximately equal to or equal to] # 0x2a70
- "⩱": [T: equals sign above plus sign] # 0x2a71
- "⩲": [T: plus sign above equals sign] # 0x2a72
- "⩳": [T: equals sign above tilde operator] # 0x2a73
- "⩴": [T: double colon equal] # 0x2a74
- "⩵": [T: two consecutive equals signs] # 0x2a75
- "⩶": [T: three consecutive equals signs] # 0x2a76
- "⩷": [T: equals sign with two dots above and two dots below] # 0x2a77
- "⩸": [T: equivalent with four dots above] # 0x2a78
- "⩹": [T: less than with circle inside] # 0x2a79
- "⩺": [T: greater than with circle inside] # 0x2a7a
- "⩻": [T: less than with question mark above] # 0x2a7b
- "⩼": [T: greater than with question mark above] # 0x2a7c
- "⩽": [T: less than or slanted equal to] # 0x2a7d
- "⩾": [T: greater than or slanted equal to] # 0x2a7e
- "⩿": [T: less than or slanted equal to with dot inside] # 0x2a7f
- "⪀": [T: greater than or slanted equal to with dot inside] # 0x2a80
- "⪁": [T: less than or slanted equal to with dot above] # 0x2a81
- "⪂": [T: greater than or slanted equal to with dot above] # 0x2a82
- "⪃": [T: less than or slanted equal to with dot above right] # 0x2a83
- "⪄": [T: greater than or slanted equal to with dot above left] # 0x2a84
- "⪅": [T: less than or approximate] # 0x2a85
- "⪆": [T: greater than or approximate] # 0x2a86
- "⪇": [T: less than and single line not equal to] # 0x2a87
- "⪈": [T: greater than and single line not equal to] # 0x2a88
- "⪉": [T: less than and not approximate] # 0x2a89
- "⪊": [T: greater than and not approximate] # 0x2a8a
- "⪋": [T: less than above double line equal above greater than] # 0x2a8b
- "⪌": [T: greater than above double line equal above less than] # 0x2a8c
- "⪍": [T: less than above similar or equal] # 0x2a8d
- "⪎": [T: greater than above similar or equal] # 0x2a8e
- "⪏": [T: less than above similar above greater than] # 0x2a8f
- "⪐": [T: greater than above similar above less than] # 0x2a90
- "⪑": [T: less than above greater than above double line equal] # 0x2a91
- "⪒": [T: greater than above less than above double line equal] # 0x2a92
- "⪓": [T: less than above slanted equal above greater than above slanted equal] # 0x2a93
- "⪔": [T: greater than above slanted equal above less than above slanted equal] # 0x2a94
- "⪕": [T: slanted equal to or less than] # 0x2a95
- "⪖": [T: slanted equal to or greater than] # 0x2a96
- "⪗": [T: slanted equal to or less than with dot inside] # 0x2a97
- "⪘": [T: slanted equal to or greater than with dot inside] # 0x2a98
- "⪙": [T: double line equal to or less than] # 0x2a99
- "⪚": [T: double line equal to or greater than] # 0x2a9a
- "⪛": [T: double line slanted equal to or less than] # 0x2a9b
- "⪜": [T: double line slanted equal to or greater than] # 0x2a9c
- "⪝": [T: similar or less than] # 0x2a9d
- "⪞": [T: similar or greater than] # 0x2a9e
- "⪟": [T: similar above less than above equals sign] # 0x2a9f
- "⪠": [T: similar above greater than above equals sign] # 0x2aa0
- "⪡": [T: double nested less than] # 0x2aa1
- "⪢": [T: double nested greater than] # 0x2aa2
- "⪣": [T: double nested less than with underbar] # 0x2aa3
- "⪤": [T: greater than overlapping less than] # 0x2aa4
- "⪥": [T: greater than beside less than] # 0x2aa5
- "⪦": [T: less than closed by curve] # 0x2aa6
- "⪧": [T: greater than closed by curve] # 0x2aa7
- "⪨": [T: less than closed by curve above slanted equal] # 0x2aa8
- "⪩": [T: greater than closed by curve above slanted equal] # 0x2aa9
- "⪪": [T: smaller than] # 0x2aaa
- "⪫": [T: larger than] # 0x2aab
- "⪬": [T: smaller than or equal to] # 0x2aac
- "⪭": [T: larger than or equal to] # 0x2aad
- "⪮": [T: equals sign with bumpy above] # 0x2aae
- "⪯": [T: precedes above single line equals sign] # 0x2aaf
- "⪰": [T: succeeds above single line equals sign] # 0x2ab0
- "⪱": [T: prededes above single line not equal to] # 0x2ab1
- "⪲": [T: succeeds above single line not equal to] # 0x2ab2
- "⪳": [T: precedes above equals sign] # 0x2ab3
- "⪴": [T: succeeds above equals sign] # 0x2ab4
- "⪵": [T: prededes above not equal to] # 0x2ab5
- "⪶": [T: succeeds above not equal to] # 0x2ab6
- "⪷": [T: prededes above almost equal to] # 0x2ab7
- "⪸": [T: succeeds above almost equal to] # 0x2ab8
- "⪹": [T: precedes above not almost equal to] # 0x2ab9
- "⪺": [T: succeeds above not almost equal to] # 0x2aba
- "⪻": [T: double precedes] # 0x2abb
- "⪼": [T: double succeeds] # 0x2abc
- "⪽": [T: subset with dot] # 0x2abd
- "⪾": [T: superset with dot] # 0x2abe
- "⪿": [T: subset with plus sign below] # 0x2abf
- "⫀": [T: superset with plus sign below] # 0x2ac0
- "⫁": [T: subset with multiplication sign below] # 0x2ac1
- "⫂": [T: superset with multiplication sign below] # 0x2ac2
- "⫃": [T: subset of or equal to with dot above] # 0x2ac3
- "⫄": [T: superset of or equal to with dot above] # 0x2ac4
- "⫅": [T: subset of above equals sign] # 0x2ac5
- "⫆": [T: superset of above equals sign] # 0x2ac6
- "⫇": [T: subset of above tilde operator] # 0x2ac7
- "⫈": [T: superset of above tilde operator] # 0x2ac8
- "⫉": [T: subset of above almost equal to] # 0x2ac9
- "⫊": [T: superset of above almost equal to] # 0x2aca
- "⫋": [T: subset above not equal to] # 0x2acb
- "⫌": [T: superset of above not equal to] # 0x2acc
- "⫍": [T: square left open box operator] # 0x2acd
- "⫎": [T: square right open box operator] # 0x2ace
- "⫏": [T: closed subset] # 0x2acf
- "⫐": [T: closed superset] # 0x2ad0
- "⫑": [T: closed subset or equal to] # 0x2ad1
- "⫒": [T: closed superset or equal to] # 0x2ad2
- "⫓": [T: subset above superset] # 0x2ad3
- "⫔": [T: superset above subset] # 0x2ad4
- "⫕": [T: subset above subset] # 0x2ad5
- "⫖": [T: superset above superset] # 0x2ad6
- "⫗": [T: superset beside subset] # 0x2ad7
- "⫘": [T: superset beside and joined by dash with subset] # 0x2ad8
- "⫙": [T: element of opening downwards] # 0x2ad9
- "⫚": [T: pitchfork with tee top] # 0x2ada
- "⫛": [T: transversal intersection] # 0x2adb
- "⫝̸": [T: forking] # 0x2adc
- "⫝": [T: nonforking] # 0x2add
- "⫞": [T: shrot left tack] # 0x2ade
- "⫟": [T: short down tack] # 0x2adf
- "⫠": [T: short up tack] # 0x2ae0
- "⫡": [T: perpendicular with s] # 0x2ae1
- "⫢": [T: vertical bar triple right turnstile] # 0x2ae2
- "⫣": [T: double vertical bar left turnstile] # 0x2ae3
- "⫤": [T: vertical bar double left turnstile] # 0x2ae4
- "⫥": [T: double vertical bar double left turnstile] # 0x2ae5
- "⫦": [T: long dash from left member of double vertical] # 0x2ae6
- "⫧": [T: short down tack with overbar] # 0x2ae7
- "⫨": [T: short up tack with underbar] # 0x2ae8
- "⫩": [T: short up tack above short down tack] # 0x2ae9
- "⫪": [T: double down tack] # 0x2aea
- "⫫": [T: double up tack] # 0x2aeb
- "⫬": [T: double stroke not sign] # 0x2aec
- "⫭": [T: reversed double stroke not sign] # 0x2aed
- "⫮": [T: does not divide with reversed negation slash] # 0x2aee
- "⫯": [T: garis vertikal with circle above] # 0x2aef
- "⫰": [T: garis vertikal with circle below] # 0x2af0
- "⫱": [T: down tack with circle below] # 0x2af1
- "⫲": [T: parallel with horizontal stroke] # 0x2af2
- "⫳": [T: parallel with tilde operator] # 0x2af3
- "⫴": [T: triple vertical bar binary relation] # 0x2af4
- "⫵": [T: triple vertical bar with horizontal stroke] # 0x2af5
- "⫶": [T: triple colon operator] # 0x2af6
- "⫷": [T: triple nested less than] # 0x2af7
- "⫸": [T: triple nested greater than] # 0x2af8
- "⫹": [T: double line slanted less than or equal to] # 0x2af9
- "⫺": [T: double line slanted greater than or equal to] # 0x2afa
- "⫻": [T: triple solidus binary relation] # 0x2afb
- "⫼": [T: large triple vertical bar operator] # 0x2afc
- "⫽": [T: double solidus operator] # 0x2afd
- "⫾": [T: white vertical bar] # 0x2afe
- "⫿": [T: white vertical bar] # 0x2aff
- "⬀": [T: north east white arrow] # 0x2b00
- "⬁": [T: north west white arrow] # 0x2b01
- "⬂": [T: south east white arrow] # 0x2b02
- "⬃": [T: south west white arrow] # 0x2b03
- "⬄": [T: left right white arrow] # 0x2b04
- "⬅": [T: leftwards black arrow] # 0x2b05
- "⬆": [T: upwards black arrow] # 0x2b06
- "⬇": [T: downwards black arrow] # 0x2b07
- "⬈": [T: north east black arrow] # 0x2b08
- "⬉": [T: north west black arrow] # 0x2b09
- "⬊": [T: south east black arrow] # 0x2b0a
- "⬋": [T: south west black arrow] # 0x2b0b
- "⬌": [T: left right black arrow] # 0x2b0c
- "⬍": [T: up down black arrow] # 0x2b0d
- "⬎": [T: panah kanan with tip downwards] # 0x2b0e
- "⬏": [T: panah kanan with tip upwards] # 0x2b0f
- "⬐": [T: panah kiri with tip downwards] # 0x2b10
- "⬑": [T: panah kiri with tip upwards] # 0x2b11
- "⬒": [T: square with top half black] # 0x2b12
- "⬓": [T: square with bottom half black] # 0x2b13
- "⬔": [T: square with upper right diagonal half black] # 0x2b14
- "⬕": [T: square with lower left diagonal half black] # 0x2b15
- "⬖": [T: diamond with left half black] # 0x2b16
- "⬗": [T: diamond with right half black] # 0x2b17
- "⬘": [T: diamond with top half black] # 0x2b18
- "⬙": [T: diamond with bottom half black] # 0x2b19
- "⬚": [T: box] # 0x2b1a
- "⬛": [T: black large square] # 0x2b1b
- "⬜": [T: white large square] # 0x2b1c
- "⬝": [T: black very small square] # 0x2b1d
- "⬞": [T: white very small square] # 0x2b1e
- "⬟": [T: black pentagon] # 0x2b1f
- "⬠": [T: white pentagon] # 0x2b20
- "⬡": [T: white hexagon] # 0x2b21
- "⬢": [T: black hexagon] # 0x2b22
- "⬣": [T: horizontal black hexagon] # 0x2b23
- "⬤": [T: black large circle] # 0x2b24
- "⬥": [T: black medium diamond] # 0x2b25
- "⬦": [T: white medium diamond] # 0x2b26
- "⬧": [T: black medium lozenge] # 0x2b27
- "⬨": [T: white medium lozenge] # 0x2b28
- "⬩": [T: black small diamond] # 0x2b29
- "⬪": [T: black small lozenge] # 0x2b2a
- "⬫": [T: white small lozenge] # 0x2b2b
- "⬬": [T: black horizontal ellipse] # 0x2b2c
- "⬭": [T: white horizontal ellipse] # 0x2b2d
- "⬮": [T: black vertical ellipse] # 0x2b2e
- "⬯": [T: white vertical ellipse] # 0x2b2f
- "⬰": [T: left arrow with small circle] # 0x2b30
- "⬱": [T: three leftwards arrows] # 0x2b31
- "⬲": [T: left arrow with circled plus] # 0x2b32
- "⬳": [T: long leftwards squiggle arrow] # 0x2b33
- "⬴": [T: leftwards two headed arrow with vertical stroke] # 0x2b34
- "⬵": [T: lettwards two headed arrow with double vertical stroke] # 0x2b35
- "⬶": [T: leftwards two headed arrow from bar] # 0x2b36
- "⬷": [T: leftwards two headed triple dash arrow] # 0x2b37
- "⬸": [T: panah kiri with dotted stem] # 0x2b38
- "⬹": [T: panah kiri dengan ekor with vertical stroke] # 0x2b39
- "⬺": [T: panah kiri dengan ekor with double vertical stroke] # 0x2b3a
- "⬻": [T: leftwards two headed arrow dengan ekor] # 0x2b3b
- "⬼": [T: leftwards two headed arrow dengan ekor with vertical stroke] # 0x2b3c
- "⬽": [T: leftwards two headed arrow dengan ekor with double vertical stroke] # 0x2b3d
- "⬾": [T: panah kiri through x] # 0x2b3e
- "⬿": [T: wave arrow pointing directly left] # 0x2b3f
- "⭀": [T: equals sign above leftwards arrow] # 0x2b40
- "⭁": [T: reverse tilde operator above leftwards arrow] # 0x2b41
- "⭂": [T: panah kiri above reverse almost equal to] # 0x2b42
- "⭃": [T: panah kanan through greater than] # 0x2b43
- "⭄": [T: panah kanan through superret] # 0x2b44
- "⭅": [T: leftwards quadurple arrow] # 0x2b45
- "⭆": [T: rightwards quadruple arrow] # 0x2b46
- "⭇": [T: reverse tilde operator above rightwards arrow] # 0x2b47
- "⭈": [T: panah kanan above rerverse almost equal to] # 0x2b48
- "⭉": [T: tilde operator above leftwards arrow] # 0x2b49
- "⭊": [T: panah kiri above almost equal to] # 0x2b4a
- "⭋": [T: panah kiri above reverse tilde operator] # 0x2b4b
- "⭌": [T: panah kanan above reverse tilde operator] # 0x2b4c
- "⭐": [T: white medium star] # 0x2b50
- "⭑": [T: black small star] # 0x2b51
- "⭒": [T: white small star] # 0x2b52
- "⭓": [T: black right pointing pentagon] # 0x2b53
- "⭔": [T: white right pointing pentagon] # 0x2b54
- "⭕": [T: heavy large circle] # 0x2b55
- "⭖": [T: heavy oval with oval inside] # 0x2b56
- "⭗": [T: heavy circle with circle inside] # 0x2b57
- "⭘": [T: heavy circle] # 0x2b58
- "⭙": [T: heavy circled saltire] # 0x2b59
- "⸀": [T: right angle substitution marker] # 0x2e00
- "⸁": [T: right angle dotted substitution marker] # 0x2e01
- "⸂": [T: left substitution bracket] # 0x2e02
- "⸃": [T: right substitution bracket] # 0x2e03
- "⸄": [T: left dotted substitution bracket] # 0x2e04
- "⸅": [T: right dotted substitution bracket] # 0x2e05
- "⸆": [T: raised interpolation marker] # 0x2e06
- "⸇": [T: raised dotted interpolation marker] # 0x2e07
- "⸈": [T: dotted transposition marker marker] # 0x2e08
- "⸉": [T: left transposition bracket] # 0x2e09
- "⸊": [T: right transposition bracket] # 0x2e0a
- "⸋": [T: raised square] # 0x2e0b
- "⸌": [T: left raised omission bracket] # 0x2e0c
- "⸍": [T: right raised omission bracket] # 0x2e0d
- "⸎": [T: editorial coronis] # 0x2e0e
- "⸏": [T: paragraphos] # 0x2e0f
- "⸐": [T: forked paragraphos] # 0x2e10
- "⸑": [T: reversed forked paragraphos] # 0x2e11
- "⸒": [T: hypodiastole] # 0x2e12
- "⸓": [T: dotted obelos] # 0x2e13
- "⸔": [T: downwards ancora] # 0x2e14
- "⸕": [T: upwards ancora] # 0x2e15
- "⸖": [T: dotted right pointing angle] # 0x2e16
- "⸗": [T: double oblique hyphen] # 0x2e17
- "⸘": [T: inverted interrobang] # 0x2e18
- "⸙": [T: palm branch] # 0x2e19
- "⸚": [T: hyphen with diaeresis] # 0x2e1a
- "⸛": [T: tilde with ring above] # 0x2e1b
- "⸜": [T: left low paraphrase bracket] # 0x2e1c
- "⸝": [T: right low paraphrase bracket] # 0x2e1d
- "⸞": [T: tilde with dot above] # 0x2e1e
- "⸟": [T: tilde with dot below] # 0x2e1f
- "⸠": [T: left vertical bar with quill] # 0x2e20
- "⸡": [T: right vertical bar with quill] # 0x2e21
- "⸢": [T: top left half bracket] # 0x2e22
- "⸣": [T: top right half bracket] # 0x2e23
- "⸤": [T: bottom left half bracket] # 0x2e24
- "⸥": [T: bottom right half bracket] # 0x2e25
- "⸦": [T: left sideways u bracket] # 0x2e26
- "⸧": [T: right sideways u bracket] # 0x2e27
- "⸨": [T: left double parentheses] # 0x2e28
- "⸩": [T: right double parentheses] # 0x2e29
- "⸪": [T: two dots over one dot punctuation] # 0x2e2a
- "⸫": [T: one dot over two dots punctuation] # 0x2e2b
- "⸬": [T: squared four dot punctuation] # 0x2e2c
- "⸭": [T: five dot mark] # 0x2e2d
- "⸮": [T: reversed question mark] # 0x2e2e
- "ⸯ": [T: vertical tilde] # 0x2e2f
- "⸰": [T: ring point] # 0x2e30
- "⸱": [T: word seperator middle dot] # 0x2e31
- "⸲": [T: koma terbalik] # 0x2e32
- "⸳": [T: raised dot] # 0x2e33
- "⸴": [T: raised comma] # 0x2e34
- "⸵": [T: turned semicolon] # 0x2e35
- "⸶": [T: dagger with left guard] # 0x2e36
- "⸷": [T: dagger with right guard] # 0x2e37
- "⸸": [T: turned dagger] # 0x2e38
- "⸹": [T: top half section sign] # 0x2e39
- "⸺": [T: two em dash] # 0x2e3a
- "⸻": [T: three em dash] # 0x2e3b
- "〃": [T: ditto mark] # 0x3003
- "〈": [T: left angle bracket] # 0x3008
- "〉": [T: right angle bracket] # 0x3009
- "《": [T: left double angle bracket] # 0x300a
- "》": [T: right double angle bracket] # 0x300b
- "「": [T: left corner bracket] # 0x300c
- "」": [T: right corner bracket] # 0x300d
- "『": [T: left white corner bracket] # 0x300e
- "』": [T: right white corner bracket] # 0x300f
- "【": [T: left black lenticular bracket] # 0x3010
- "】": [T: right black lenticular bracket] # 0x3011
- "〔": [T: left tortoise shell bracket] # 0x3014
- "〕": [T: right tortoise shell bracket] # 0x3015
- "〖": [T: left white lenticular bracket] # 0x3016
- "〗": [T: right white lenticular bracket] # 0x3017
- "〘": [T: left white tortoise shell bracket] # 0x3018
- "〙": [T: right white tortoise shell bracket] # 0x3019
- "〚": [T: left white square bracket] # 0x301a
- "〛": [T: right white square bracket] # 0x301b
- "〜": [T: wave dash] # 0x301c
- "〰": [T: wavy dash] # 0x3030
- "㉈": [T: circled number ten on black square] # 0x3248
- "㉉": [T: circled number twenty on black square] # 0x3249
- "㉊": [T: circled number thirty on black square] # 0x324a
- "㉋": [T: circled number forty on blacks quare] # 0x324b
- "㉌": [T: circled number fifty on black square] # 0x324c
- "㉍": [T: circled number sixty on black square] # 0x324d
- "㉎": [T: circled number seventy on black square] # 0x324e
- "㉏": [T: circled number eighty on black square] # 0x324f
- "㉑": [T: circled number twenty one] # 0x3251
- "㉒": [T: circled number twenty two] # 0x3252
- "㉓": [T: circled number twenty three] # 0x3253
- "㉔": [T: circled number twenty four] # 0x3254
- "㉕": [T: circled number twenty five] # 0x3255
- "㉖": [T: circled number twenty six] # 0x3256
- "㉗": [T: circled number twenty seven] # 0x3257
- "㉘": [T: circled number twenty eight] # 0x3258
- "㉙": [T: circled number twenty nine] # 0x3259
- "㉚": [T: circled number thirty] # 0x325a
- "㉛": [T: circled number thirty one] # 0x325b
- "㉜": [T: circled number thirty two] # 0x325c
- "㉝": [T: circled number thirty three] # 0x325d
- "㉞": [T: circled number thirty four] # 0x325e
- "㉟": [T: circled number thirty five] # 0x325f
- "㊱": [T: circled number thirty six] # 0x32b1
- "㉒": [T: circled number thirty seven] # 0x3252
- "㉓": [T: circled number thirty eight] # 0x3253
- "㉔": [T: circled number thirty nine] # 0x3254
- "㉕": [T: circled number forty] # 0x3255
- "㉖": [T: circled number forty one] # 0x3256
- "㉗": [T: circled number forty two] # 0x3257
- "㉘": [T: circled number forty three] # 0x3258
- "㉙": [T: circled number forty four] # 0x3259
- "㉚": [T: circled number forty five] # 0x325a
- "㉛": [T: circled number forty six] # 0x325b
- "㉜": [T: circled number forty seven] # 0x325c
- "㉝": [T: circled number forty eight] # 0x325d
- "㉞": [T: circled number forty nine] # 0x325e
- "㉟": [T: circled number fifty] # 0x325f
- "㋌": [T: mercury] # 0x32cc
- "㋍": [T: ergs] # 0x32cd
- "㋎": [T: electron volts] # 0x32ce
- "㋏": [T: limited liability sign] # 0x32cf
- "㍱": [T: hectopascals] # 0x3371
- "㍲": [T: daltons] # 0x3372
- "㍳": [T: astronomical units] # 0x3373
- "㍴": [T: bars] # 0x3374
- "㍵": [T: o v] # 0x3375
- "㍶": [T: parsecs] # 0x3376
- "㍷": [T: decimeters] # 0x3377
- "㍸": [T: decimeters squared] # 0x3378
- "㍹": [T: decimeters cubed] # 0x3379
- "㍺": [T: instrumental units] # 0x337a
- "㎀": [T: picoamps] # 0x3380
- "㎁": [T: nanoamps] # 0x3381
- "㎂": [T: microamps] # 0x3382
- "㎃": [T: milliamps] # 0x3383
- "㎄": [T: kiloamps] # 0x3384
- "㎅": [T: kilobytes] # 0x3385
- "㎆": [T: megabytes] # 0x3386
- "㎇": [T: gigabytes] # 0x3387
- "㎈": [T: calories] # 0x3388
- "㎉": [T: kilocalories] # 0x3389
- "㎊": [T: picofarads] # 0x338a
- "㎋": [T: nanofarads] # 0x338b
- "㎌": [T: microfarads] # 0x338c
- "㎍": [T: micrograms] # 0x338d
- "㎎": [T: milligrams] # 0x338e
- "㎏": [T: kilograms] # 0x338f
- "㎐": [T: hertz] # 0x3390
- "㎑": [T: kilohertz] # 0x3391
- "㎒": [T: megahertz] # 0x3392
- "㎓": [T: gigahertz] # 0x3393
- "㎔": [T: terahertz] # 0x3394
- "㎕": [T: microliters] # 0x3395
- "㎖": [T: millileters] # 0x3396
- "㎗": [T: deciliters] # 0x3397
- "㎘": [T: kiloliters] # 0x3398
- "㎙": [T: femtometers] # 0x3399
- "㎚": [T: nanometers] # 0x339a
- "㎛": [T: micrometers] # 0x339b
- "㎜": [T: millimeters] # 0x339c
- "㎝": [T: centimeters] # 0x339d
- "㎞": [T: kilometers] # 0x339e
- "㎟": [T: millimeters squared] # 0x339f
- "㎠": [T: centimeters squared] # 0x33a0
- "㎡": [T: meters squared] # 0x33a1
- "㎢": [T: kilometers squared] # 0x33a2
- "㎣": [T: millimeters cubed] # 0x33a3
- "㎤": [T: centimeters cubed] # 0x33a4
- "㎥": [T: meters cubed] # 0x33a5
- "㎦": [T: kilometers cubed] # 0x33a6
- "㎧": [T: meters per second] # 0x33a7
- "㎨": [T: meters per second squared] # 0x33a8
- "㎩": [T: pascals] # 0x33a9
- "㎪": [T: kilopascals] # 0x33aa
- "㎫": [T: megapascals] # 0x33ab
- "㎬": [T: gigapascals] # 0x33ac
- "㎭": [T: rads] # 0x33ad
- "㎮": [T: rads per second] # 0x33ae
- "㎯": [T: rads per second squared] # 0x33af
- "㎰": [T: picoseconds] # 0x33b0
- "㎱": [T: nanoseconds] # 0x33b1
- "㎲": [T: microseconds] # 0x33b2
- "㎳": [T: milliseconds] # 0x33b3
- "㎴": [T: picovolts] # 0x33b4
- "㎵": [T: nanovolts] # 0x33b5
- "㎶": [T: microvolts] # 0x33b6
- "㎷": [T: millivolts] # 0x33b7
- "㎸": [T: kilovolts] # 0x33b8
- "㎹": [T: megavolts] # 0x33b9
- "㎺": [T: picowatts] # 0x33ba
- "㎻": [T: nanowatts] # 0x33bb
- "㎼": [T: microwatts] # 0x33bc
- "㎽": [T: milliwatts] # 0x33bd
- "㎾": [T: kilowatts] # 0x33be
- "㎿": [T: megawatts] # 0x33bf
- "㏀": [T: kilo-ohms] # 0x33c0
- "㏁": [T: megaohms] # 0x33c1
- "㏂": [T: attometers] # 0x33c2
- "㏃": [T: becquerels] # 0x33c3
- "㏄": [T: cubic centimeters] # 0x33c4
- "㏅": [T: candelas] # 0x33c5
- "㏆": [T: coulombs per kilogram] # 0x33c6
- "㏇": [T: cardiac output] # 0x33c7
- "㏈": [T: decibels] # 0x33c8
- "㏉": [T: grays] # 0x33c9
- "㏊": [T: hectares] # 0x33ca
- "㏋": [T: horsepower] # 0x33cb
- "㏌": [T: inches] # 0x33cc
- "㏍": [T: kilokelvins] # 0x33cd
- "㏎": [T: kilometers] # 0x33ce
- "㏏": [T: knots] # 0x33cf
- "㏐": [T: lumens] # 0x33d0
- "㏑": [T: natural log] # 0x33d1
- "㏒": [T: logarithm] # 0x33d2
- "㏓": [T: lux] # 0x33d3
- "㏔": [T: millibarns] # 0x33d4
- "㏕": [T: mills] # 0x33d5
- "㏖": [T: moles] # 0x33d6
- "㏗": [T: p h] # 0x33d7
- "㏘": [T: picometers] # 0x33d8
- "㏙": [T: parts per million] # 0x33d9
- "㏚": [T: petaroentgens] # 0x33da
- "㏛": [T: steradians] # 0x33db
- "㏜": [T: sieverts] # 0x33dc
- "㏝": [T: webers] # 0x33dd
- "㏞": [T: volts per meter] # 0x33de
- "㏟": [T: amps per meter] # 0x33df
- "㏿": [T: gallons] # 0x33ff
- "": [T: equals with hat below] # 0xe900
- "": [T: equals with plus above] # 0xe901
- "⩲": [T: equals with plus above] # 0x2a72
- "": [T: equals with plus below] # 0xe902
- "⩱": [T: equals with plus below] # 0x2a71
- "": [T: tilde with plus above] # 0xe903
- "⨦": [T: tilde with plus above] # 0x2a26
- "": [T: tilde with plus below] # 0xe904
- "⨤": [T: tilde with plus below] # 0x2a24
- "": [T: equal double over greater than] # 0xe908
- "": [T: equal double over less than] # 0xe909
- "⪙": [T: equal double over less than] # 0x2a99
- "": [T: contains or equal to] # 0xe90a
- "⋽": [T: contains or equal to] # 0x22fd
- "": [T: superset of or equal to] # 0xe90b
- "": [T: subset of or equal to] # 0xe90c
- "": [T: equal over less than] # 0xe90d
- "": [T: element of or equal to] # 0xe912
- "⋷": [T: element of or equal to] # 0x22f7
- "": [T: equal to or greater than] # 0xe913
- "⪚": [T: equal to or greater than] # 0x2a9a
- "": [T: approximate superset of] # 0xe914
- "⫈": [T: approximate superset of] # 0x2ac8
- "": [T: approximate subset of] # 0xe915
- "⫇": [T: approximate subset of] # 0x2ac7
- "": [T: superset of with dot includes as sub relation] # 0xe916
- "⪾": [T: superset of with dot includes as sub relation] # 0x2abe
- "": [T: subset of with dot is included in as sub relation] # 0xe917
- "⪽": [T: subset of with dot is included in as sub relation] # 0x2abd
- "": [T: equal with dot below] # 0xe918
- "⩦": [T: equal with dot below] # 0x2a66
- "": [T: left dot over minus over right dot] # 0xe919
- "": [T: right dot over minus over left dot] # 0xe91a
- "": [T: almost equal to minus] # 0xe91f
- "": [T: double square cup] # 0xe920
- "": [T: double square cap] # 0xe921
- "": [T: less than equal to or greater than] # 0xe922
- "": [T: tilde with dot] # 0xe924
- "⩪": [T: tilde with dot] # 0x2a6a
- "": [T: tilde with two dots] # 0xe925
- "": [T: less than greater than or equal to] # 0xe926
- "⪑": [T: less than greater than or equal to] # 0x2a91
- "": [T: greater than less than or equal to] # 0xe927
- "⪒": [T: greater than less than or equal to] # 0x2a92
- "": [T: equivalent to or less than] # 0xe928
- "⪝": [T: equivalent to or less than] # 0x2a9d
- "": [T: equivalent to or greater than] # 0xe929
- "": [T: left open box operator] # 0xe92a
- "": [T: right open box operator] # 0xe92b
- "": [T: identical to with dot] # 0xe92c
- "": [T: greater than equal to or less than] # 0xe92d
- "": [T: bar operator] # 0xe92e
- "": [T: double bar operator] # 0xe92f
- "": [T: triple bar operator] # 0xe930
- "": [T: less than or approximately equal to] # 0xe932
- "": [T: greater than or approximately equal to] # 0xe933
- "": [T: nested less than] # 0xe936
- "⪡": [T: nested less than] # 0x2aa1
- "": [T: nested greater than] # 0xe937
- "⪢": [T: nested greater than] # 0x2aa2
- "": [T: precedes or equivalent to] # 0xe93a
- "": [T: succeeds or equivalent to] # 0xe93b
- "": [T: precedes over equal] # 0xe940
- "": [T: succeeds over equal] # 0xe941
- "": [T: less equal slanted greater] # 0xe942
- "": [T: greater equal slanted less] # 0xe943
- "": [T: satisfied by] # 0xe948
- "": [T: lazy s] # 0xe949
- "": [T: not assertion] # 0xe94a
- "": [T: double equal] # 0xe94b
- "⩵": [T: double equal] # 0x2a75
- "": [T: triple equal] # 0xe94c
- "": [T: rule delayed] # 0xe94d
- "⧴": [T: rule delayed] # 0x29f4
- "": [T: alias delimiter] # 0xe94e
- "": [T: normal subgroup of with bar] # 0xe950
- "⧏": [T: normal subgroup of with bar] # 0x29cf
- "": [T: contains as normal subgroup with bar] # 0xe951
- "⧐": [T: contains as normal subgroup with bar] # 0x29d0
- "": [T: round implies] # 0xe954
- "⥰": [T: round implies] # 0x2970
- "": [T: smile under bar] # 0xe955
- "": [T: frown over bar] # 0xe956
- "": [T: superset of or almost equal to] # 0xe957
- "": [T: subset of or almost equal to] # 0xe958
- "": [T: greater than almost equal to or less than] # 0xe959
- "": [T: less than almost equal or greater than] # 0xe95a
- "": [T: double logical or] # 0xe95c
- "⩔": [T: double logical or] # 0x2a54
- "": [T: double logical and] # 0xe95d
- "⩓": [T: double logical and] # 0x2a53
- "": [T: logical or with double bar below] # 0xe95e
- "": [T: logical or with bar below] # 0xe95f
- "": [T: almost equal over equal] # 0xe962
- "": [T: left pointing triangle with bisecting bar] # 0xe964
- "": [T: right pointing triangle with bisecting bar] # 0xe965
- "": [T: equals with dotted top line] # 0xe966
- "": [T: precedes with colon] # 0xe967
- "": [T: succeeds with colon] # 0xe968
- "": [T: smaller than or equal slanted] # 0xe969
- "": [T: larger than or equal slanted] # 0xe96a
- "": [T: nested very much less than] # 0xe96b
- "": [T: nested very much greater than] # 0xe96c
- "": [T: difference between variant] # 0xe96d
- "⪮": [T: difference between variant] # 0x2aae
- "": [T: less than greater than overlay] # 0xe96e
- "⪤": [T: less than greater than overlay] # 0x2aa4
- "": [T: logical or logical and overlay] # 0xe96f
- "": [T: superset over superset] # 0xe970
- "⫖": [T: superset over superset] # 0x2ad6
- "": [T: subset over subset] # 0xe971
- "⫕": [T: subset over subset] # 0x2ad5
- "": [T: superset over subset] # 0xe972
- "⫔": [T: superset over subset] # 0x2ad4
- "": [T: subset over superset] # 0xe973
- "⫓": [T: subset over superset] # 0x2ad3
- "": [T: triple vertical bar] # 0xe979
- "": [T: paired quadruple vertical dots] # 0xe97a
- "": [T: perpendicular over bar] # 0xe97b
- "⫨": [T: perpendicular over bar] # 0x2ae8
- "": [T: left turnstile double vertical bar] # 0xe97c
- "": [T: double left turnstile double vertical bar] # 0xe97d
- "": [T: perpendicular over inverted perpendicular] # 0xe97e
- "": [T: double left turnstile vertical bar] # 0xe97f
- "⫤": [T: double left turnstile vertical bar] # 0x2ae4
- "": [T: spherical angle opening up] # 0xe980
- "": [T: double slash] # 0xe981
- "": [T: right angle with corner] # 0xe982
- "": [T: circled vertical bar] # 0xe984
- "⦶": [T: circled vertical bar] # 0x29b6
- "": [T: circled division sign] # 0xe985
- "⨸": [T: circled division sign] # 0x2a38
- "": [T: dashed solidus] # 0xe986
- "": [T: dashed backslash] # 0xe987
- "": [T: dashed mid line] # 0xe988
- "": [T: dashed vertical bar] # 0xe989
- "": [T: perpendicular with s] # 0xe98a
- "": [T: angle with s] # 0xe98b
- "": [T: spherical angle opening left] # 0xe98c
- "": [T: angle opening left] # 0xe98d
- "": [T: vertical bar with double hook] # 0xe98e
- "⥾": [T: vertical bar with double hook] # 0x297e
- "": [T: medium dot operator free radical] # 0xe98f
- "": [T: white up pointing triangle above bar] # 0xe990
- "": [T: identical and parallel to] # 0xe991
- "": [T: smash product] # 0xe992
- "⨳": [T: smash product] # 0x2a33
- "": [T: triple bar operator with horizontal bar] # 0xe993
- "": [T: identical to with double slash] # 0xe994
- "⧥": [T: identical to with double slash] # 0x29e5
- "": [T: triple crossed bars] # 0xe995
- "": [T: vertical bar over circle] # 0xe996
- "": [T: vertical proportional to] # 0xe997
- "": [T: black last quarter moon] # 0xe998
- "": [T: black first quarter moon] # 0xe999
- "": [T: negative sine wave] # 0xe9a0
- "": [T: parenthesized dot] # 0xe9a1
- "": [T: parens] # 0xe9a2
- "": [T: white smile] # 0xe9a3
- "": [T: white frown] # 0xe9a4
- "": [T: hexagon] # 0xe9a5
- "": [T: equivalent to over plus] # 0xe9a6
- "": [T: plus over equivalent to] # 0xe9a7
- "": [T: intersection serifs] # 0xe9b0
- "": [T: union serifs] # 0xe9b1
- "": [T: square intersection serifs] # 0xe9b2
- "": [T: square union serifs] # 0xe9b3
- "": [T: precedes equivalent to or succeeds] # 0xe9e0
- "": [T: succeeds equivalent to or precedes] # 0xe9e1
- "": [T: precedes almost equal to or succeeds] # 0xe9e2
- "": [T: succeeds almost equal to or precedes] # 0xe9e3
- "": [T: less than equivalent to or greater than] # 0xe9f0
- "": [T: greater than equivalent to or less than] # 0xe9f1
- "": [T: not vert much less than] # 0xea00
- "": [T: not vert much greater than] # 0xea01
- "": [T: not much less than variant] # 0xea02
- "": [T: not much greater than variant] # 0xea03
- "": [T: less vert not double equals] # 0xea04
- "": [T: gt vert not double equals] # 0xea05
- "": [T: not less than or equal to] # 0xea06
- "": [T: not greater than or equal to] # 0xea07
- "": [T: neither equal to nor less than] # 0xea09
- "": [T: does not contain or equal to] # 0xea0a
- "": [T: neither superset of nor equal to] # 0xea0b
- "": [T: neither subset of nor equal to] # 0xea0c
- "": [T: reverse solidus subset] # 0xea0d
- "": [T: neither equal to nor greater than] # 0xea0e
- "": [T: not minus tilde operator] # 0xea0f
- "": [T: neither equal to nor less than] # 0xea10
- "": [T: not tilde operator] # 0xea11
- "": [T: not element of or equal to] # 0xea12
- "": [T: neither equal to nor greater than] # 0xea13
- "": [T: not almost equal] # 0xea14
- "": [T: not succeeds similar] # 0xea15
- "": [T: less than or slanted equal to with slash] # 0xea16
- "": [T: greater than or slanted equal to with slash] # 0xea17
- "": [T: superset solidus] # 0xea1a
- "": [T: does not contain] # 0xea1b
- "": [T: not less than or equal to] # 0xea1d
- "": [T: not greater than or equal to] # 0xea1e
- "": [T: not almost equal to minus] # 0xea1f
- "": [T: negated set membership dot above] # 0xea22
- "": [T: not vert angle] # 0xea2c
- "": [T: not parallel slanted] # 0xea2d
- "": [T: not bar operator] # 0xea2e
- "": [T: not double bar operator] # 0xea2f
- "": [T: not triple bar operator] # 0xea30
- "": [T: less than but not approximately equal to] # 0xea32
- "⪉": [T: less than but not approximately equal to] # 0x2a89
- "": [T: greater than but not approximately equal to] # 0xea33
- "⪊": [T: greater than but not approximately equal to] # 0x2a8a
- "": [T: less than or not equal to] # 0xea34
- "": [T: greater than or not equal to] # 0xea35
- "": [T: not nested less than] # 0xea36
- "": [T: not nested greater than] # 0xea37
- "": [T: not much less than] # 0xea38
- "": [T: not much greater than] # 0xea39
- "": [T: precedes but not equivalent to] # 0xea3a
- "": [T: succeeds but not equivalent to] # 0xea3b
- "": [T: precedes but not equal to] # 0xea3c
- "": [T: succeeds but not equal to] # 0xea3d
- "": [T: does not equal or precede] # 0xea3e
- "": [T: does not equal or succeed] # 0xea3f
- "": [T: precedes but not equal to] # 0xea40
- "⪵": [T: precedes but not equal to] # 0x2ab5
- "": [T: succeeds but not equal to] # 0xea41
- "⪶": [T: succeeds but not equal to] # 0x2ab6
- "": [T: not subset of nor equal to] # 0xea42
- "": [T: not superset of nor equal to] # 0xea43
- "": [T: subset of or not equal to] # 0xea44
- "": [T: superset of or not equal to] # 0xea45
- "": [T: not subset of nor equal to] # 0xea46
- "": [T: not superset of nor equal to] # 0xea47
- "": [T: not triple less than] # 0xea48
- "": [T: not triple greater than] # 0xea49
- "": [T: not precedes equals] # 0xea4c
- "": [T: not succeeds equals] # 0xea4d
- "": [T: not normal subgroup of with bar] # 0xea50
- "": [T: does not contain as normal subgroup with bar] # 0xea51
- "": [T: not difference between] # 0xea52
- "": [T: not geometrically equivalent to] # 0xea53
- "": [T: not vert similar] # 0xea54
- "": [T: not equal or similar] # 0xea55
- "": [T: not vert approximate] # 0xea56
- "": [T: not approximately identical to] # 0xea57
- "": [T: not bumpy equals] # 0xea58
- "": [T: not bumpy single equals] # 0xea59
- "": [T: not equal dot] # 0xea5a
- "": [T: reverse not equivalent] # 0xea5b
- "": [T: not square subset] # 0xea60
- "": [T: not square superset] # 0xea61
- "": [T: not almost equal over equal] # 0xea62
- "": [T: not strictly equivalent to] # 0xea63
- "": [T: not congruent dot] # 0xea64
- "": [T: reverse not equal] # 0xea65
- "": [T: not vert left triangle equals] # 0xea70
- "": [T: not vert right triangle equals] # 0xea71
- "": [T: not partial] # 0xea80
- "": [T: arrow embellishment extender] # 0xeb00
- "": [T: arrow rightwards over arrow leftwards] # 0xeb01
- "": [T: arrow rightwards over arrow leftwards] # 0xeb02
- "": [T: harpoon right over harpoon left] # 0xeb03
- "": [T: harpoon right over harpoon left] # 0xeb04
- "": [T: double arrow northeast southwest] # 0xeb05
- "": [T: double arrow northwest southeast] # 0xeb06
- "": [T: horizontal harpoon extender] # 0xeb07
- "": [T: anticlockwise arc leftwards arrow] # 0xeb08
- "": [T: anticlockwise arc rightwards arrow] # 0xeb09
- "": [T: large rightwards arrow accent] # 0xeb0b
- "": [T: large leftwards arrow accent] # 0xeb0c
- "": [T: panah kirihead] # 0xeb0d
- "": [T: panah kananhead] # 0xeb0e
- "": [T: large left right arrow with stroke] # 0xeb0f
- "": [T: horizontal double arrow extender] # 0xeb10
- "": [T: large left right double arrow with stroke] # 0xeb11
- "": [T: downwards arrow leftwards of upwards arrow] # 0xeb12
- "⇵": [T: downwards arrow leftwards of upwards arrow] # 0x21f5
- "": [T: panah kiri with corner downwards] # 0xeb13
- "": [T: panah kanan with corner upwards] # 0xeb14
- "": [T: panah kiri with corner upwards] # 0xeb15
- "": [T: anticlockwise top semicircle arrow with plus] # 0xeb16
- "⤽": [T: anticlockwise top semicircle arrow with plus] # 0x293d
- "": [T: clockwise top semicircle arrow with minus] # 0xeb17
- "⤼": [T: clockwise top semicircle arrow with minus] # 0x293c
- "": [T: panah kanan dengan ekor with stroke] # 0xeb18
- "": [T: right harpoon down] # 0xeb19
- "": [T: left harpoon down] # 0xeb1a
- "": [T: left right harpoon down] # 0xeb1b
- "⥐": [T: left right harpoon down] # 0x2950
- "": [T: left right harpoon up] # 0xeb1c
- "⥎": [T: left right harpoon up] # 0x294e
- "": [T: up down harpoon left] # 0xeb1d
- "⥑": [T: up down harpoon left] # 0x2951
- "": [T: up down harpoon right] # 0xeb1e
- "⥏": [T: up down harpoon right] # 0x294f
- "": [T: upwards arrow to the right of downwards arrow] # 0xeb1f
- "⇵": [T: upwards arrow to the right of downwards arrow] # 0x21f5
- "": [T: leftwards harpoon to bar with barb upwards] # 0xeb20
- "⥒": [T: leftwards harpoon to bar with barb upwards] # 0x2952
- "": [T: rightwards harpoon to bar with barb upwards] # 0xeb21
- "⥓": [T: rightwards harpoon to bar with barb upwards] # 0x2953
- "": [T: leftwards harpoon to bar with barb downwards] # 0xeb22
- "⥖": [T: leftwards harpoon to bar with barb downwards] # 0x2956
- "": [T: rightwards harpoon to bar with barb downwards] # 0xeb23
- "⥗": [T: rightwards harpoon to bar with barb downwards] # 0x2957
- "": [T: leftwards harpoon from bar with barb upwards] # 0xeb24
- "⥚": [T: leftwards harpoon from bar with barb upwards] # 0x295a
- "": [T: rightwards harpoon from bar with barb upwards] # 0xeb25
- "⥛": [T: rightwards harpoon from bar with barb upwards] # 0x295b
- "": [T: leftwards harpoon from bar with barb downwards] # 0xeb26
- "⥞": [T: leftwards harpoon from bar with barb downwards] # 0x295e
- "": [T: rightwards harpoon from bar with barb downwards] # 0xeb27
- "⥟": [T: rightwards harpoon from bar with barb downwards] # 0x295f
- "": [T: upwards harpoon to bar with barb leftwards] # 0xeb28
- "⥘": [T: upwards harpoon to bar with barb leftwards] # 0x2958
- "": [T: downwards harpoon to bar with barb leftwards] # 0xeb29
- "⥙": [T: downwards harpoon to bar with barb leftwards] # 0x2959
- "": [T: upwards harpoon to bar with barb rightwards] # 0xeb2a
- "⥔": [T: upwards harpoon to bar with barb rightwards] # 0x2954
- "": [T: downwards harpoon to bar with barb rightwards] # 0xeb2b
- "⥕": [T: downwards harpoon to bar with barb rightwards] # 0x2955
- "": [T: upwards harpoon from bar with barb leftwards] # 0xeb2c
- "⥠": [T: upwards harpoon from bar with barb leftwards] # 0x2960
- "": [T: downwards harpoon from bar with barb leftwards] # 0xeb2d
- "⥡": [T: downwards harpoon from bar with barb leftwards] # 0x2961
- "": [T: upwards harpoon from bar with barb rightwards] # 0xeb2e
- "⥜": [T: upwards harpoon from bar with barb rightwards] # 0x295c
- "": [T: downwards harpoon from bar with barb rightwards] # 0xeb2f
- "⥝": [T: downwards harpoon from bar with barb rightwards] # 0x295d
- "": [T: upwards arrow to bar] # 0xeb30
- "⤒": [T: upwards arrow to bar] # 0x2912
- "": [T: downwards arrow to bar] # 0xeb31
- "⤓": [T: downwards arrow to bar] # 0x2913
- "": [T: upwards harpoon to the left of downwards harpoon] # 0xeb32
- "⥮": [T: upwards harpoon to the left of downwards harpoon] # 0x296e
- "": [T: upwards harpoon to the right of downwards harpoon] # 0xeb33
- "⥯": [T: upwards harpoon to the right of downwards harpoon] # 0x296f
- "": [T: upwards arrowhead] # 0xeb34
- "": [T: downwards arrowhead] # 0xeb35
- "": [T: double harpoon with leftwards barb down rightwards barb up] # 0xeb36
- "": [T: double harpoon with leftwards barb up rightwards barb down] # 0xeb37
- "": [T: panah kiri over bar] # 0xeb38
- "": [T: panah kanan over bar] # 0xeb39
- "": [T: panah kiri under bar] # 0xeb3a
- "": [T: panah kanan under bar] # 0xeb3b
- "": [T: left right triple arrow] # 0xeb3c
- "": [T: double arrow northeast southeast] # 0xeb3f
- "": [T: anticlockwise left semicircle arrow] # 0xeb40
- "⤹": [T: anticlockwise left semicircle arrow] # 0x2939
- "": [T: clockwise left semicircle arrow] # 0xeb41
- "": [T: left open circle left right arrow] # 0xeb42
- "": [T: panah kanan over tilde] # 0xeb44
- "⥴": [T: panah kanan over tilde] # 0x2974
- "": [T: panah kiri over tilde] # 0xeb45
- "⥳": [T: panah kiri over tilde] # 0x2973
- "": [T: leftwards harpoon over bar] # 0xeb48
- "⥪": [T: leftwards harpoon over bar] # 0x296a
- "": [T: rightwards harpoon over bar] # 0xeb49
- "⥬": [T: rightwards harpoon over bar] # 0x296c
- "": [T: leftwards harpoon under bar] # 0xeb4a
- "⥫": [T: leftwards harpoon under bar] # 0x296b
- "": [T: rightwards harpoon under bar] # 0xeb4b
- "⥭": [T: rightwards harpoon under bar] # 0x296d
- "": [T: squat black leftwards arrow] # 0xeb4c
- "": [T: clockwise right semicircle arrow] # 0xeb50
- "⤸": [T: clockwise right semicircle arrow] # 0x2938
- "": [T: anticlockwise right semicircle arrow] # 0xeb51
- "": [T: left open circle left right harpoon] # 0xeb52
- "": [T: upwards arrow leftwards of vertical bar] # 0xeb58
- "": [T: downwards arrow leftwards of vertical bar] # 0xeb59
- "": [T: upwards arrow rightwards of vertical bar] # 0xeb5a
- "": [T: downwards arrow rightwards of vertical bar] # 0xeb5b
- "": [T: panah kanan with extended downwards hook] # 0xeb5c
- "": [T: panah kiri with extended hook] # 0xeb5d
- "": [T: panah kiri with extended downwards hook] # 0xeb5e
- "": [T: panah kanan with extended hook] # 0xeb5f
- "": [T: not right arrow wavy] # 0xeb60
- "": [T: not right arrow curved] # 0xeb61
- "": [T: upwards harpoon leftwards of vertical bar] # 0xeb68
- "": [T: downwards harpoon leftwards of vertical bar] # 0xeb69
- "": [T: upwards harpoon rightwards of vertical bar] # 0xeb6a
- "": [T: downwards harpoon rightwards of vertical bar] # 0xeb6b
- "": [T: vertical double arrow extender] # 0xeb6c
- "": [T: vertical harpoon with barb left extender] # 0xeb6d
- "": [T: vertical harpoon with barb right extender] # 0xeb6e
- "": [T: right harpoon over left harpoon right] # 0xeb6f
- "": [T: right harpoon over left harpoon left] # 0xeb70
- "": [T: left harpoon over right harpoon right] # 0xeb71
- "": [T: left harpoon over right harpoon left] # 0xeb72
- "": [T: panah kiri from bar arrowhead] # 0xeb73
- "": [T: leftwards rightwards arrow from bar extender] # 0xeb74
- "": [T: panah kiri from bar tail] # 0xeb75
- "": [T: panah kanan from bar tail] # 0xeb76
- "": [T: panah kanan from bar arrowhead] # 0xeb77
- "": [T: upwards harpoon from bar with barb leftwards arrowhead] # 0xeb78
- "": [T: panah kanan over leftwards arrow right] # 0xeb79
- "": [T: panah kanan over leftwards arrow left] # 0xeb7a
- "": [T: panah kiri over rightwards arrow right] # 0xeb7b
- "": [T: panah kiri over rightwards arrow leftt] # 0xeb7c
- "": [T: upwards arrow from bar arrowhead] # 0xeb7d
- "": [T: upwards arrow from bar tail] # 0xeb7e
- "": [T: downwards arrow from bar tail] # 0xeb7f
- "": [T: downwards arrow from bar arrowhead] # 0xeb80
- "": [T: downwards harpoon from bar with barb rightwards arrowhead] # 0xeb81
- "": [T: upwards harpoon to the left of downwards harpoon bottom] # 0xeb82
- "": [T: upwards harpoon to the left of downwards harpoon extender] # 0xeb83
- "": [T: downwards harpoon to the left of upwards harpoon top] # 0xeb84
- "": [T: upwards harppoon to the left of downwards harpoon top] # 0xeb85
- "": [T: downwards harpoon to the left of the upwards harpoon extender] # 0xeb86
- "": [T: downwards harpoon to the left of the upwards harpoon bottom] # 0xeb87
- "": [T: upwards arrow leftwards of downwards arrow bottom] # 0xeb88
- "": [T: downwards arrow leftwards of upwards arrow top] # 0xeb89
- "": [T: upwards arrow leftwards of downwards arrow top] # 0xeb8a
- "": [T: downwards arrow leftwards of upwards arrow bottom] # 0xeb8b
- "": [T: leftwards rightwards arrows extender] # 0xeb8c
- "": [T: north east arrow extender] # 0xeb8d
- "": [T: north west arrow extender] # 0xeb8e
- "": [T: down pointing brace left] # 0xec00
- "": [T: down pointing brace mid] # 0xec01
- "": [T: down pointing brace right] # 0xec02
- "": [T: horizontal brace extender] # 0xec03
- "": [T: up pointing brace left] # 0xec04
- "": [T: up pointing brace mid] # 0xec05
- "": [T: up-pointing brace right] # 0xec06
- "": [T: left vertical bar] # 0xec07
- "": [T: right vertical bar] # 0xec08
- "": [T: left double vertical bar] # 0xec09
- "": [T: right double vertical bar] # 0xec0a
- "": [T: horizontal bracket extender] # 0xec0b
- "": [T: under square bracket] # 0xec0c
- "⎵": [T: under square bracket] # 0x23b5
- "": [T: over square bracket] # 0xec0d
- "⎴": [T: over square bracket] # 0x23b4
- "": [T: under bracket left] # 0xec0e
- "": [T: under bracket right] # 0xec0f
- "": [T: over bracket left] # 0xec10
- "": [T: over bracket right] # 0xec11
- "": [T: left parens 1] # 0xec12
- "": [T: left parens 2] # 0xec13
- "": [T: left parens 3] # 0xec14
- "": [T: left parens 4] # 0xec15
- "": [T: right parens 1] # 0xec16
- "": [T: right parens 2] # 0xec17
- "": [T: right parens 3] # 0xec18
- "": [T: right parens 4] # 0xec19
- "": [T: radical 1] # 0xec1a
- "": [T: radical 2] # 0xec1b
- "": [T: radical 3] # 0xec1c
- "": [T: radical 4] # 0xec1d
- "": [T: radical 5] # 0xec1e
- "": [T: radical bottom] # 0xec1f
- "": [T: radical vertical extender] # 0xec20
- "": [T: radical top] # 0xec21
- "": [T: left white bracket top] # 0xec22
- "": [T: left white bracket extender] # 0xec23
- "": [T: left white bracket bottom] # 0xec24
- "": [T: right white bracket top] # 0xec25
- "": [T: right white bracket extender] # 0xec26
- "": [T: right white bracket bottom] # 0xec27
- "": [T: left white curly bracket] # 0xec30
- "": [T: right white curly bracket] # 0xec31
- "": [T: long division sign] # 0xec32
- "": [T: long division sign extender] # 0xec33
- "": [T: short division] # 0xec34
- "": [T: double southwest to northeast em bond] # 0xec40
- "": [T: double northwest to southeast em bond] # 0xec41
- "": [T: single horizontal em bond] # 0xec42
- "": [T: double horizontal em bond] # 0xec43
- "": [T: triple horizontal em bond] # 0xec44
- "": [T: single vertical em bond] # 0xec45
- "": [T: double vertical em bond] # 0xec46
- "": [T: triple vertical em bond] # 0xec47
- "": [T: less than em bond] # 0xec48
- "": [T: greater than em bond] # 0xec49
- "": [T: single horizontal en bond] # 0xec4a
- "": [T: double horizontal en bond] # 0xec4b
- "": [T: triple horizontal en bond] # 0xec4c
- "": [T: top left rectangle] # 0xec80
- "": [T: bottom left rectangle] # 0xec81
- "": [T: top right rectangle] # 0xec90
- "": [T: bottom right rectangle] # 0xec91
- "": [T: synthetic division corner] # 0xec92
- "": [T: synthetic division horizontal extender] # 0xec93
- "": [T: synthetic division vertical extender] # 0xec94
- "": [T: left ceiling floor extender] # 0xec95
- "": [T: right ceiling floor extender] # 0xec96
- "": [T: over bracket extender] # 0xec97
- "": [T: vertical bar extender] # 0xec98
- "": [T: left double vertical bar extender] # 0xec99
- "": [T: horizontal bar extender] # 0xec9a
- "": [T: under bracket extender] # 0xec9c
- "": [T: down pointing paren right] # 0xec9d
- "": [T: down pointing paren extender] # 0xec9e
- "": [T: down pointing paren left] # 0xec9f
- "": [T: up pointing brace extender] # 0xeca0
- "": [T: up pointing paren left] # 0xeca1
- "": [T: up pointing paren extender] # 0xeca2
- "": [T: up pointing paren right] # 0xeca3
- "": [T: down pointing brace extender] # 0xeca4
- "": [T: planck constant over two pi bar] # 0xed00
- "": [T: mirror g] # 0xed01
- "": [T: dotless j] # 0xed02
- "": [T: digamma] # 0xed03
- "ϝ": [T: digamma] # 0x3dd
- "": [T: d] # 0xed10
- "ⅆ": [T: d] # 0x2146
- "": [T: e] # 0xed11
- "ⅇ": [T: e] # 0x2147
- "": [T: i] # 0xed12
- "ⅈ": [T: i] # 0x2148
- "": [T: j] # 0xed13
- "": # 0xed16
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: d
- "ⅅ": # 0x2145
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: d
- "": [T: anticlockwise contour integral loop] # 0xee00
- "": [T: clockwise contour integral loop] # 0xee01
- "": [T: ''] # 0xee04
- "": [T: ''] # 0xee05
- "": [T: ''] # 0xee06
- "": [T: ''] # 0xee07
- "": [T: ''] # 0xee08
- "": [T: ''] # 0xee09
- "": [T: ''] # 0xee0a
- "": [T: ''] # 0xee0b
- "": [T: ''] # 0xee0c
- "": [T: joint status embellishment] # 0xee0d
- "": [T: joint status embellishment left] # 0xee0e
- "": [T: joint status embellishment right] # 0xee0f
- "": [T: joint status embellishment extender] # 0xee10
- "": [T: integral loop] # 0xee11
- "": [T: integral loop double] # 0xee12
- "": [T: integral loop triple] # 0xee13
- "": [T: expanding integral loop double] # 0xee15
- "": [T: expanding integral loop triple] # 0xee16
- "": [T: asymptotically equal to accent] # 0xee17
- "": [T: equal sign accent] # 0xee18
- "": [T: quadruple prime] # 0xee19
- "⁗": [T: quadruple prime] # 0x2057
- "": [T: bar accent with open circle left] # 0xee1a
- "": [T: bar accent with closed circle left] # 0xee1b
- "": [T: bar accent with open circle right] # 0xee1c
- "": [T: bar accent with over dot] # 0xee1d
- "": [T: bar accent with under dot] # 0xee1e
- "": [T: bar accent with double over dot] # 0xee1f
- "": [T: bar accent with double under dot] # 0xee20
- "": [T: bar accent with caret] # 0xee21
- "": [T: thick under bar accent] # 0xee22
- "": [T: bar accent with closed circle right] # 0xee23
- "": [T: large dot above] # 0xee24
- "": [T: alignment mark] # 0xef00
- "": [T: ''] # 0xef01
- "​": [T: ''] # 0x200b
- "": [T: ''] # 0xef02
- " ": [T: ''] # 0x2009
- "": [T: ''] # 0xef03
- " ": [T: ''] # 0x205f
- "": [T: ''] # 0xef04
- "": [T: ''] # 0xef05
- " ": [T: ''] # 0x2003
- "": [T: ''] # 0xef06
- "": [T: ''] # 0xef07
- "": [T: ''] # 0xef08
- "": [T: ''] # 0xef09
- "": [T: ''] # 0xef0a
- " ": [T: ''] # 0x200a
- "": [T: ''] # 0xef22
- "": [T: ''] # 0xef23
- "": [T: ''] # 0xef24
- "": [T: ''] # 0xef29
- "": [T: missing term] # 0xef41
- "": [T: clockwise contour integral arrow on left] # 0xef80
- "": [T: integral with square] # 0xef81
- "": [T: integral with slash] # 0xef82
- "": [T: reversed integral] # 0xef83
- "": [T: double zero over double zero] # 0xef90
- "": [T: zero with slash] # 0xef91
- "": # 0xf000
    - T: fraktur
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: a
- "𝔄": # 0x1d504
    - T: fraktur
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: a
- "": # 0xf001
    - T: fraktur
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: b
- "𝔅": # 0x1d505
    - T: fraktur
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: b
- "": # 0xf003
    - T: fraktur
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: d
- "𝔇": # 0x1d507
    - T: fraktur
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: d
- "": # 0xf004
    - T: fraktur
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: e
- "𝔈": # 0x1d508
    - T: fraktur
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: e
- "": # 0xf005
    - T: fraktur
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: f
- "𝔉": # 0x1d509
    - T: fraktur
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: f
- "": # 0xf006
    - T: fraktur
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: g
- "𝔊": # 0x1d50a
    - T: fraktur
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: g
- "": # 0xf009
    - T: fraktur
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: j
- "𝔍": # 0x1d50d
    - T: fraktur
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: j
- "": # 0xf00a
    - T: fraktur
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: k
- "𝔎": # 0x1d50e
    - T: fraktur
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: k
- "": # 0xf00b
    - T: fraktur
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: l
- "𝔏": # 0x1d50f
    - T: fraktur
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: l
- "": # 0xf00c
    - T: fraktur
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: m
- "𝔐": # 0x1d510
    - T: fraktur
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: m
- "": # 0xf00d
    - T: fraktur
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: n
- "𝔑": # 0x1d511
    - T: fraktur
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: n
- "": # 0xf00e
    - T: fraktur
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: o
- "𝔒": # 0x1d512
    - T: fraktur
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: o
- "": # 0xf00f
    - T: fraktur
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: p
- "𝔓": # 0x1d513
    - T: fraktur
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: p
- "": # 0xf010
    - T: fraktur
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: q
- "𝔔": # 0x1d514
    - T: fraktur
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: q
- "": # 0xf012
    - T: fraktur
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: s
- "𝔖": # 0x1d516
    - T: fraktur
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: s
- "": # 0xf013
    - T: fraktur
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: t
- "𝔗": # 0x1d517
    - T: fraktur
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: t
- "": # 0xf014
    - T: fraktur
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: u
- "𝔘": # 0x1d518
    - T: fraktur
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: u
- "": # 0xf015
    - T: fraktur
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: v
- "𝔙": # 0x1d519
    - T: fraktur
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: v
- "": # 0xf016
    - T: fraktur
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: w
- "𝔚": # 0x1d51a
    - T: fraktur
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: w
- "": # 0xf017
    - T: fraktur
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: x
- "𝔛": # 0x1d51b
    - T: fraktur
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: x
- "": # 0xf018
    - T: fraktur
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: y
- "𝔜": # 0x1d51c
    - T: fraktur
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: y
- "": [T: fraktur a] # 0xf01a
- "𝔞": [T: fraktur a] # 0x1d51e
- "": [T: fraktur b] # 0xf01b
- "𝔟": [T: fraktur b] # 0x1d51f
- "": [T: fraktur c] # 0xf01c
- "𝔠": [T: fraktur c] # 0x1d520
- "": [T: fraktur d] # 0xf01d
- "𝔡": [T: fraktur d] # 0x1d521
- "": [T: fraktur e] # 0xf01e
- "𝔢": [T: fraktur e] # 0x1d522
- "": [T: fraktur f] # 0xf01f
- "𝔣": [T: fraktur f] # 0x1d523
- "": [T: fraktur g] # 0xf020
- "𝔤": [T: fraktur g] # 0x1d524
- "": [T: fraktur h] # 0xf021
- "𝔥": [T: fraktur h] # 0x1d525
- "": [T: fraktur i] # 0xf022
- "𝔦": [T: fraktur i] # 0x1d526
- "": [T: fraktur j] # 0xf023
- "𝔧": [T: fraktur j] # 0x1d527
- "": [T: fraktur k] # 0xf024
- "𝔨": [T: fraktur k] # 0x1d528
- "": [T: fraktur l] # 0xf025
- "𝔩": [T: fraktur l] # 0x1d529
- "": [T: fraktur m] # 0xf026
- "𝔪": [T: fraktur m] # 0x1d52a
- "": [T: fraktur n] # 0xf027
- "𝔫": [T: fraktur n] # 0x1d52b
- "": [T: fraktur o] # 0xf028
- "𝔬": [T: fraktur o] # 0x1d52c
- "": [T: fraktur p] # 0xf029
- "𝔭": [T: fraktur p] # 0x1d52d
- "": [T: fraktur q] # 0xf02a
- "𝔮": [T: fraktur q] # 0x1d52e
- "": [T: fraktur r] # 0xf02b
- "𝔯": [T: fraktur r] # 0x1d52f
- "": [T: fraktur s] # 0xf02c
- "𝔰": [T: fraktur s] # 0x1d530
- "": [T: fraktur t] # 0xf02d
- "𝔱": [T: fraktur t] # 0x1d531
- "": [T: fraktur u] # 0xf02e
- "𝔲": [T: fraktur u] # 0x1d532
- "": [T: fraktur v] # 0xf02f
- "𝔳": [T: fraktur v] # 0x1d533
- "": [T: fraktur w] # 0xf030
- "𝔴": [T: fraktur w] # 0x1d534
- "": [T: fraktur x] # 0xf031
- "𝔵": [T: fraktur x] # 0x1d535
- "": [T: fraktur y] # 0xf032
- "𝔶": [T: fraktur y] # 0x1d536
- "": [T: fraktur z] # 0xf033
- "𝔷": [T: fraktur z] # 0x1d537
- "": # 0xf040
    - T: fraktur bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: a
- "𝕬": # 0x1d56c
    - T: fraktur bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: a
- "": # 0xf041
    - T: fraktur bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: b
- "𝕭": # 0x1d56d
    - T: fraktur bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: b
- "": # 0xf042
    - T: fraktur bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: c
- "𝕮": # 0x1d56e
    - T: fraktur bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: c
- "": # 0xf043
    - T: fraktur bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: d
- "𝕯": # 0x1d56f
    - T: fraktur bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: d
- "": # 0xf044
    - T: fraktur bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: e
- "𝕰": # 0x1d570
    - T: fraktur bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: e
- "": # 0xf045
    - T: fraktur bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: f
- "𝕱": # 0x1d571
    - T: fraktur bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: f
- "": # 0xf046
    - T: fraktur bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: g
- "𝕲": # 0x1d572
    - T: fraktur bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: g
- "": # 0xf047
    - T: fraktur bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: h
- "𝕳": # 0x1d573
    - T: fraktur bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: h
- "": # 0xf048
    - T: fraktur bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: i
- "𝕴": # 0x1d574
    - T: fraktur bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: i
- "": # 0xf049
    - T: fraktur bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: j
- "𝕵": # 0x1d575
    - T: fraktur bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: j
- "": # 0xf04a
    - T: fraktur bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: k
- "𝕶": # 0x1d576
    - T: fraktur bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: k
- "": # 0xf04b
    - T: fraktur bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: l
- "𝕷": # 0x1d577
    - T: fraktur bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: l
- "": # 0xf04c
    - T: fraktur bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: m
- "𝕸": # 0x1d578
    - T: fraktur bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: m
- "": # 0xf04d
    - T: fraktur bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: n
- "𝕹": # 0x1d579
    - T: fraktur bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: n
- "": # 0xf04e
    - T: fraktur bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: o
- "𝕺": # 0x1d57a
    - T: fraktur bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: o
- "": # 0xf04f
    - T: fraktur bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: p
- "𝕻": # 0x1d57b
    - T: fraktur bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: p
- "": # 0xf050
    - T: fraktur bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: q
- "𝕼": # 0x1d57c
    - T: fraktur bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: q
- "": # 0xf051
    - T: fraktur bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: r
- "𝕽": # 0x1d57d
    - T: fraktur bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: r
- "": # 0xf052
    - T: fraktur bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: s
- "𝕾": # 0x1d57e
    - T: fraktur bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: s
- "": # 0xf053
    - T: fraktur bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: t
- "𝕿": # 0x1d57f
    - T: fraktur bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: t
- "": # 0xf054
    - T: fraktur bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: u
- "𝖀": # 0x1d580
    - T: fraktur bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: u
- "": # 0xf055
    - T: fraktur bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: v
- "𝖁": # 0x1d581
    - T: fraktur bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: v
- "": # 0xf056
    - T: fraktur bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: w
- "𝖂": # 0x1d582
    - T: fraktur bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: w
- "": # 0xf057
    - T: fraktur bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: x
- "𝖃": # 0x1d583
    - T: fraktur bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: x
- "": # 0xf058
    - T: fraktur bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: y
- "𝖄": # 0x1d584
    - T: fraktur bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: y
- "": # 0xf059
    - T: fraktur bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: z
- "𝖅": # 0x1d585
    - T: fraktur bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: z
- "": [T: fraktur bold a] # 0xf05a
- "𝖆": [T: fraktur bold a] # 0x1d586
- "": [T: fraktur bold b] # 0xf05b
- "𝖇": [T: fraktur bold b] # 0x1d587
- "": [T: fraktur bold c] # 0xf05c
- "𝖈": [T: fraktur bold c] # 0x1d588
- "": [T: fraktur bold d] # 0xf05d
- "𝖉": [T: fraktur bold d] # 0x1d589
- "": [T: fraktur bold e] # 0xf05e
- "𝖊": [T: fraktur bold e] # 0x1d58a
- "": [T: fraktur bold f] # 0xf05f
- "𝖋": [T: fraktur bold f] # 0x1d58b
- "": [T: fraktur bold g] # 0xf060
- "𝖌": [T: fraktur bold g] # 0x1d58c
- "": [T: fraktur bold h] # 0xf061
- "𝖍": [T: fraktur bold h] # 0x1d58d
- "": [T: fraktur bold i] # 0xf062
- "𝖎": [T: fraktur bold i] # 0x1d58e
- "": [T: fraktur bold j] # 0xf063
- "𝖏": [T: fraktur bold j] # 0x1d58f
- "": [T: fraktur bold k] # 0xf064
- "𝖐": [T: fraktur bold k] # 0x1d590
- "": [T: fraktur bold l] # 0xf065
- "𝖑": [T: fraktur bold l] # 0x1d591
- "": [T: fraktur bold m] # 0xf066
- "𝖒": [T: fraktur bold m] # 0x1d592
- "": [T: fraktur bold n] # 0xf067
- "𝖓": [T: fraktur bold n] # 0x1d593
- "": [T: fraktur bold o] # 0xf068
- "𝖔": [T: fraktur bold o] # 0x1d594
- "": [T: fraktur bold p] # 0xf069
- "𝖕": [T: fraktur bold p] # 0x1d595
- "": [T: fraktur bold q] # 0xf06a
- "𝖖": [T: fraktur bold q] # 0x1d596
- "": [T: fraktur bold r] # 0xf06b
- "𝖗": [T: fraktur bold r] # 0x1d597
- "": [T: fraktur bold s] # 0xf06c
- "𝖘": [T: fraktur bold s] # 0x1d598
- "": [T: fraktur bold t] # 0xf06d
- "𝖙": [T: fraktur bold t] # 0x1d599
- "": [T: fraktur bold u] # 0xf06e
- "𝖚": [T: fraktur bold u] # 0x1d59a
- "": [T: fraktur bold v] # 0xf06f
- "𝖛": [T: fraktur bold v] # 0x1d59b
- "": [T: fraktur bold w] # 0xf070
- "𝖜": [T: fraktur bold w] # 0x1d59c
- "": [T: fraktur bold x] # 0xf071
- "𝖝": [T: fraktur bold x] # 0x1d59d
- "": [T: fraktur bold y] # 0xf072
- "𝖞": [T: fraktur bold y] # 0x1d59e
- "": [T: fraktur bold z] # 0xf073
- "𝖟": [T: fraktur bold z] # 0x1d59f
- "": # 0xf080
    - T: double struck
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: a
- "": # 0xf081
    - T: double struck
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: b
- "𝔹": # 0x1d539
    - T: double struck
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: b
- "": # 0xf083
    - T: double struck
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: d
- "𝔻": # 0x1d53b
    - T: double struck
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: d
- "": # 0xf084
    - T: double struck
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: e
- "𝔼": # 0x1d53c
    - T: double struck
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: e
- "": # 0xf085
    - T: double struck
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: f
- "𝔽": # 0x1d53d
    - T: double struck
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: f
- "": # 0xf086
    - T: double struck
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: g
- "𝔾": # 0x1d53e
    - T: double struck
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: g
- "": # 0xf088
    - T: double struck
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: i
- "𝕀": # 0x1d540
    - T: double struck
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: i
- "": # 0xf089
    - T: double struck
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: j
- "𝕁": # 0x1d541
    - T: double struck
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: j
- "": # 0xf08a
    - T: double struck
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: k
- "𝕂": # 0x1d542
    - T: double struck
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: k
- "": # 0xf08b
    - T: double struck
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: l
- "𝕃": # 0x1d543
    - T: double struck
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: l
- "": # 0xf08c
    - T: double struck
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: m
- "𝕄": # 0x1d544
    - T: double struck
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: m
- "": # 0xf08e
    - T: double struck
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: o
- "𝕆": # 0x1d546
    - T: double struck
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: o
- "": # 0xf092
    - T: double struck
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: s
- "𝕊": # 0x1d54a
    - T: double struck
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: s
- "": # 0xf093
    - T: double struck
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: t
- "𝕋": # 0x1d54b
    - T: double struck
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: t
- "": # 0xf094
    - T: double struck
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: u
- "𝕌": # 0x1d54c
    - T: double struck
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: u
- "": # 0xf095
    - T: double struck
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: v
- "𝕍": # 0x1d54d
    - T: double struck
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: v
- "": # 0xf096
    - T: double struck
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: w
- "𝕎": # 0x1d54e
    - T: double struck
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: w
- "": # 0xf097
    - T: double struck
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: x
- "𝕏": # 0x1d54f
    - T: double struck
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: x
- "": # 0xf098
    - T: double struck
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: y
- "𝕐": # 0x1d550
    - T: double struck
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: y
- "": [T: double struck a] # 0xf09a
- "𝕒": [T: double struck a] # 0x1d552
- "": [T: double struck b] # 0xf09b
- "𝕓": [T: double struck b] # 0x1d553
- "": [T: double struck c] # 0xf09c
- "𝕔": [T: double struck c] # 0x1d554
- "": [T: double struck d] # 0xf09d
- "𝕕": [T: double struck d] # 0x1d555
- "": [T: double struck e] # 0xf09e
- "𝕖": [T: double struck e] # 0x1d556
- "": [T: double struck f] # 0xf09f
- "𝕗": [T: double struck f] # 0x1d557
- "": [T: double struck g] # 0xf0a0
- "𝕘": [T: double struck g] # 0x1d558
- "": [T: double struck h] # 0xf0a1
- "𝕙": [T: double struck h] # 0x1d559
- "": [T: double struck i] # 0xf0a2
- "𝕚": [T: double struck i] # 0x1d55a
- "": [T: double struck j] # 0xf0a3
- "𝕛": [T: double struck j] # 0x1d55b
- "": [T: double struck k] # 0xf0a4
- "𝕜": [T: double struck k] # 0x1d55c
- "": [T: double struck l] # 0xf0a5
- "𝕝": [T: double struck l] # 0x1d55d
- "": [T: double struck m] # 0xf0a6
- "𝕞": [T: double struck m] # 0x1d55e
- "": [T: double struck n] # 0xf0a7
- "𝕟": [T: double struck n] # 0x1d55f
- "": [T: double struck o] # 0xf0a8
- "𝕠": [T: double struck o] # 0x1d560
- "": [T: double struck p] # 0xf0a9
- "𝕡": [T: double struck p] # 0x1d561
- "": [T: double struck q] # 0xf0aa
- "𝕢": [T: double struck q] # 0x1d562
- "": [T: double struck r] # 0xf0ab
- "𝕣": [T: double struck r] # 0x1d563
- "": [T: double struck s] # 0xf0ac
- "𝕤": [T: double struck s] # 0x1d564
- "": [T: double struck t] # 0xf0ad
- "𝕥": [T: double struck t] # 0x1d565
- "": [T: double struck u] # 0xf0ae
- "𝕦": [T: double struck u] # 0x1d566
- "": [T: double struck v] # 0xf0af
- "𝕧": [T: double struck v] # 0x1d567
- "": [T: double struck w] # 0xf0b0
- "𝕨": [T: double struck w] # 0x1d568
- "": [T: double struck x] # 0xf0b1
- "𝕩": [T: double struck x] # 0x1d569
- "": [T: double struck y] # 0xf0b2
- "𝕪": [T: double struck y] # 0x1d56a
- "": [T: double struck z] # 0xf0b3
- "𝕫": [T: double struck z] # 0x1d56b
- "": [T: double struck nol] # 0xf0c0
- "𝟘": [T: double struck nol] # 0x1d7d8
- "": [T: double struck satu] # 0xf0c1
- "𝟙": [T: double struck satu] # 0x1d7d9
- "": [T: double struck dua] # 0xf0c2
- "𝟚": [T: double struck dua] # 0x1d7da
- "": [T: double struck tiga] # 0xf0c3
- "𝟛": [T: double struck tiga] # 0x1d7db
- "": [T: double struck empat] # 0xf0c4
- "𝟜": [T: double struck empat] # 0x1d7dc
- "": [T: double struck lima] # 0xf0c5
- "𝟝": [T: double struck lima] # 0x1d7dd
- "": [T: double struck enam] # 0xf0c6
- "𝟞": [T: double struck enam] # 0x1d7de
- "": [T: double struck tujuh] # 0xf0c7
- "𝟟": [T: double struck tujuh] # 0x1d7df
- "": [T: double struck delapan] # 0xf0c8
- "𝟠": [T: double struck delapan] # 0x1d7e0
- "": [T: double struck sembilan] # 0xf0c9
- "𝟡": [T: double struck sembilan] # 0x1d7e1
- "": [T: double struck nabla] # 0xf0ca
- "": [T: double struck konstanta euler] # 0xf0cb
- "": # 0xf100
    - T: script
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: a
- "𝒜": # 0x1d49c
    - T: script
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: a
- "": # 0xf102
    - T: script
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: c
- "𝒞": # 0x1d49e
    - T: script
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: c
- "": # 0xf103
    - T: script
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: d
- "𝒟": # 0x1d49f
    - T: script
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: d
- "": # 0xf106
    - T: script
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: g
- "𝒢": # 0x1d4a2
    - T: script
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: g
- "": # 0xf109
    - T: script
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: j
- "𝒥": # 0x1d4a5
    - T: script
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: j
- "": # 0xf10a
    - T: script
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: k
- "𝒦": # 0x1d4a6
    - T: script
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: k
- "": # 0xf10d
    - T: script
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: n
- "𝒩": # 0x1d4a9
    - T: script
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: n
- "": # 0xf10e
    - T: script
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: o
- "𝒪": # 0x1d4aa
    - T: script
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: o
- "": # 0xf10f
    - T: script
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: p
- "𝒫": # 0x1d4ab
    - T: script
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: p
- "": # 0xf110
    - T: script
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: q
- "𝒬": # 0x1d4ac
    - T: script
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: q
- "": # 0xf112
    - T: script
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: s
- "𝒮": # 0x1d4ae
    - T: script
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: s
- "": # 0xf113
    - T: script
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: t
- "𝒯": # 0x1d4af
    - T: script
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: t
- "": # 0xf114
    - T: script
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: u
- "𝒰": # 0x1d4b0
    - T: script
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: u
- "": # 0xf115
    - T: script
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: v
- "𝒱": # 0x1d4b1
    - T: script
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: v
- "": # 0xf116
    - T: script
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: w
- "𝒲": # 0x1d4b2
    - T: script
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: w
- "": # 0xf117
    - T: script
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: x
- "𝒳": # 0x1d4b3
    - T: script
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: x
- "": # 0xf118
    - T: script
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: y
- "𝒴": # 0x1d4b4
    - T: script
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: y
- "": # 0xf119
    - T: script
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: z
- "𝒵": # 0x1d4b5
    - T: script
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: z
- "": [T: script a] # 0xf11a
- "𝒶": [T: script a] # 0x1d4b6
- "": [T: script b] # 0xf11b
- "𝒷": [T: script b] # 0x1d4b7
- "": [T: script c] # 0xf11c
- "𝒸": [T: script c] # 0x1d4b8
- "": [T: script d] # 0xf11d
- "𝒹": [T: script d] # 0x1d4b9
- "": [T: script f] # 0xf11f
- "𝒻": [T: script f] # 0x1d4bb
- "": [T: script h] # 0xf121
- "𝒽": [T: script h] # 0x1d4bd
- "": [T: script i] # 0xf122
- "𝒾": [T: script i] # 0x1d4be
- "": [T: script j] # 0xf123
- "𝒿": [T: script j] # 0x1d4bf
- "": [T: script k] # 0xf124
- "𝓀": [T: script k] # 0x1d4c0
- "": [T: script m] # 0xf126
- "𝓂": [T: script m] # 0x1d4c2
- "": [T: script n] # 0xf127
- "𝓃": [T: script n] # 0x1d4c3
- "": [T: script p] # 0xf129
- "𝓅": [T: script p] # 0x1d4c5
- "": [T: script q] # 0xf12a
- "𝓆": [T: script q] # 0x1d4c6
- "": [T: script r] # 0xf12b
- "𝓇": [T: script r] # 0x1d4c7
- "": [T: script s] # 0xf12c
- "𝓈": [T: script s] # 0x1d4c8
- "": [T: script t] # 0xf12d
- "𝓉": [T: script t] # 0x1d4c9
- "": [T: script u] # 0xf12e
- "𝓊": [T: script u] # 0x1d4ca
- "": [T: script v] # 0xf12f
- "𝓋": [T: script v] # 0x1d4cb
- "": [T: script w] # 0xf130
- "𝓌": [T: script w] # 0x1d4cc
- "": [T: script x] # 0xf131
- "𝓍": [T: script x] # 0x1d4cd
- "": [T: script y] # 0xf132
- "𝓎": [T: script y] # 0x1d4ce
- "": [T: script z] # 0xf133
- "𝓏": [T: script z] # 0x1d4cf
- "": # 0xf140
    - T: script bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: a
- "𝓐": # 0x1d4d0
    - T: script bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: a
- "": # 0xf141
    - T: script bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: b
- "𝓑": # 0x1d4d1
    - T: script bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: b
- "": # 0xf142
    - T: script bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: c
- "𝓒": # 0x1d4d2
    - T: script bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: c
- "": # 0xf143
    - T: script bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: d
- "𝓓": # 0x1d4d3
    - T: script bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: d
- "": # 0xf144
    - T: script bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: e
- "𝓔": # 0x1d4d4
    - T: script bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: e
- "": # 0xf145
    - T: script bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: f
- "𝓕": # 0x1d4d5
    - T: script bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: f
- "": # 0xf146
    - T: script bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: g
- "𝓖": # 0x1d4d6
    - T: script bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: g
- "": # 0xf147
    - T: script bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: h
- "𝓗": # 0x1d4d7
    - T: script bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: h
- "": # 0xf148
    - T: script bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: i
- "𝓘": # 0x1d4d8
    - T: script bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: i
- "": # 0xf149
    - T: script bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: j
- "𝓙": # 0x1d4d9
    - T: script bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: j
- "": # 0xf14a
    - T: script bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: k
- "𝓚": # 0x1d4da
    - T: script bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: k
- "": # 0xf14b
    - T: script bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: l
- "𝓛": # 0x1d4db
    - T: script bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: l
- "": # 0xf14c
    - T: script bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: m
- "𝓜": # 0x1d4dc
    - T: script bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: m
- "": # 0xf14d
    - T: script bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: n
- "𝓝": # 0x1d4dd
    - T: script bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: n
- "": # 0xf14e
    - T: script bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: o
- "𝓞": # 0x1d4de
    - T: script bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: o
- "": # 0xf14f
    - T: script bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: p
- "𝓟": # 0x1d4df
    - T: script bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: p
- "": # 0xf150
    - T: script bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: q
- "𝓠": # 0x1d4e0
    - T: script bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: q
- "": # 0xf151
    - T: script bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: r
- "𝓡": # 0x1d4e1
    - T: script bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: r
- "": # 0xf152
    - T: script bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: s
- "𝓢": # 0x1d4e2
    - T: script bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: s
- "": # 0xf153
    - T: script bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: t
- "𝓣": # 0x1d4e3
    - T: script bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: t
- "": # 0xf154
    - T: script bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: u
- "𝓤": # 0x1d4e4
    - T: script bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: u
- "": # 0xf155
    - T: script bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: v
- "𝓥": # 0x1d4e5
    - T: script bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: v
- "": # 0xf156
    - T: script bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: w
- "𝓦": # 0x1d4e6
    - T: script bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: w
- "": # 0xf157
    - T: script bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: x
- "𝓧": # 0x1d4e7
    - T: script bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: x
- "": # 0xf158
    - T: script bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: y
- "𝓨": # 0x1d4e8
    - T: script bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: y
- "": # 0xf159
    - T: script bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: z
- "𝓩": # 0x1d4e9
    - T: script bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: z
- "": [T: script bold a] # 0xf15a
- "𝓪": [T: script bold a] # 0x1d4ea
- "": [T: script bold b] # 0xf15b
- "𝓫": [T: script bold b] # 0x1d4eb
- "": [T: script bold c] # 0xf15c
- "𝓬": [T: script bold c] # 0x1d4ec
- "": [T: script bold d] # 0xf15d
- "𝓭": [T: script bold d] # 0x1d4ed
- "": [T: script bold e] # 0xf15e
- "𝓮": [T: script bold e] # 0x1d4ee
- "": [T: script bold f] # 0xf15f
- "𝓯": [T: script bold f] # 0x1d4ef
- "": [T: script bold g] # 0xf160
- "𝓰": [T: script bold g] # 0x1d4f0
- "": [T: script bold h] # 0xf161
- "𝓱": [T: script bold h] # 0x1d4f1
- "": [T: script bold i] # 0xf162
- "𝓲": [T: script bold i] # 0x1d4f2
- "": [T: script bold j] # 0xf163
- "𝓳": [T: script bold j] # 0x1d4f3
- "": [T: script bold k] # 0xf164
- "𝓴": [T: script bold k] # 0x1d4f4
- "": [T: script bold l] # 0xf165
- "𝓵": [T: script bold l] # 0x1d4f5
- "": [T: script bold m] # 0xf166
- "𝓶": [T: script bold m] # 0x1d4f6
- "": [T: script bold n] # 0xf167
- "𝓷": [T: script bold n] # 0x1d4f7
- "": [T: script bold o] # 0xf168
- "𝓸": [T: script bold o] # 0x1d4f8
- "": [T: script bold p] # 0xf169
- "𝓹": [T: script bold p] # 0x1d4f9
- "": [T: script bold q] # 0xf16a
- "𝓺": [T: script bold q] # 0x1d4fa
- "": [T: script bold r] # 0xf16b
- "𝓻": [T: script bold r] # 0x1d4fb
- "": [T: script bold s] # 0xf16c
- "𝓼": [T: script bold s] # 0x1d4fc
- "": [T: script bold t] # 0xf16d
- "𝓽": [T: script bold t] # 0x1d4fd
- "": [T: script bold u] # 0xf16e
- "𝓾": [T: script bold u] # 0x1d4fe
- "": [T: script bold v] # 0xf16f
- "𝓿": [T: script bold v] # 0x1d4ff
- "": [T: script bold w] # 0xf170
- "𝔀": [T: script bold w] # 0x1d500
- "": [T: script bold x] # 0xf171
- "𝔁": [T: script bold x] # 0x1d501
- "": [T: script bold y] # 0xf172
- "𝔂": [T: script bold y] # 0x1d502
- "": [T: script bold z] # 0xf173
- "𝔃": [T: script bold z] # 0x1d503
- "": # 0xf180
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: a
- "": # 0xf182
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: c
- "": # 0xf183
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: d
- "": # 0xf184
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: e
- "": # 0xf185
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: f
- "": # 0xf189
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: j
- "": # 0xf18a
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: k
- "": # 0xf18c
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: m
- "": # 0xf18e
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: o
- "": # 0xf18f
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: p
- "": # 0xf190
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: q
- "": # 0xf192
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: s
- "": # 0xf193
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: t
- "": # 0xf194
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: u
- "": # 0xf195
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: v
- "": # 0xf196
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: w
- "": # 0xf197
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: x
- "": # 0xf199
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: z
- "": # 0xf19a
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: ligature ae
- "": # 0xf19b
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: sharp s
- "": # 0xf19c
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: o with stroke
- "": # 0xf201
    - T: double struck
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: delta
- "": # 0xf202
    - T: double struck
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: zai
- "": # 0xf203
    - T: double struck
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: lambda
- "": # 0xf204
    - T: double struck
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: pi
- "": # 0xf205
    - T: double struck
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: sigma
- "": # 0xf206
    - T: double struck
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: theta
- "": # 0xf207
    - T: double struck
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: gamma
- "": # 0xf208
    - T: double struck
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: omega
- "": # 0xf209
    - T: double struck
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: upsilon
- "": [T: double struck alpha] # 0xf220
- "": [T: double struck beta] # 0xf221
- "": [T: double struck phi] # 0xf222
- "": [T: double struck zeta] # 0xf223
- "": [T: double struck psi] # 0xf224
- "": [T: double struck delta] # 0xf225
- "": [T: double struck non-curly epsilon] # 0xf226
- "": [T: double struck gamma] # 0xf227
- "": [T: double struck eta] # 0xf228
- "": [T: double struck iota] # 0xf229
- "": [T: double struck xi] # 0xf22a
- "": [T: double struck kappa] # 0xf22b
- "": [T: double struck lambda] # 0xf22c
- "": [T: double struck mu] # 0xf22d
- "": [T: double struck nu] # 0xf22e
- "": [T: double struck epsilon] # 0xf22f
- "": [T: double struck pi] # 0xf230
- "": [T: double struck theta] # 0xf231
- "": [T: double struck rho] # 0xf232
- "": [T: double struck sigma] # 0xf233
- "": [T: double struck tau] # 0xf234
- "": [T: double struck theta] # 0xf235
- "": [T: double struck omega] # 0xf236
- "": [T: double struck final sigma] # 0xf237
- "": [T: double struck rho] # 0xf250
- "": [T: double struck phi] # 0xf251
- "": # 0xf260
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: a
- "𝐀": # 0x1d400
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: a
- "": # 0xf261
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: b
- "𝐁": # 0x1d401
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: b
- "": # 0xf262
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: c
- "𝐂": # 0x1d402
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: c
- "": # 0xf263
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: d
- "𝐃": # 0x1d403
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: d
- "": # 0xf264
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: e
- "𝐄": # 0x1d404
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: e
- "": # 0xf265
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: f
- "𝐅": # 0x1d405
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: f
- "": # 0xf266
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: g
- "𝐆": # 0x1d406
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: g
- "": # 0xf267
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: h
- "𝐇": # 0x1d407
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: h
- "": # 0xf268
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: i
- "𝐈": # 0x1d408
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: i
- "": # 0xf269
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: j
- "𝐉": # 0x1d409
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: j
- "": # 0xf26a
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: k
- "𝐊": # 0x1d40a
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: k
- "": # 0xf26b
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: l
- "𝐋": # 0x1d40b
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: l
- "": # 0xf26c
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: m
- "𝐌": # 0x1d40c
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: m
- "": # 0xf26d
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: n
- "𝐍": # 0x1d40d
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: n
- "": # 0xf26e
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: o
- "𝐎": # 0x1d40e
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: o
- "": # 0xf26f
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: p
- "𝐏": # 0x1d40f
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: p
- "": # 0xf270
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: q
- "𝐐": # 0x1d410
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: q
- "": # 0xf271
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: r
- "𝐑": # 0x1d411
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: r
- "": # 0xf272
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: s
- "𝐒": # 0x1d412
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: s
- "": # 0xf273
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: t
- "𝐓": # 0x1d413
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: t
- "": # 0xf274
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: u
- "𝐔": # 0x1d414
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: u
- "": # 0xf275
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: v
- "𝐕": # 0x1d415
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: v
- "": # 0xf276
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: w
- "𝐖": # 0x1d416
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: w
- "": # 0xf277
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: x
- "𝐗": # 0x1d417
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: x
- "": # 0xf278
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: y
- "𝐘": # 0x1d418
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: y
- "": # 0xf279
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: z
- "𝐙": # 0x1d419
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: z
- "": [T: bold a] # 0xf27a
- "𝐚": [T: bold a] # 0x1d41a
- "": [T: bold b] # 0xf27b
- "𝐛": [T: bold b] # 0x1d41b
- "": [T: bold c] # 0xf27c
- "𝐜": [T: bold c] # 0x1d41c
- "": [T: bold d] # 0xf27d
- "𝐝": [T: bold d] # 0x1d41d
- "": [T: bold e] # 0xf27e
- "𝐞": [T: bold e] # 0x1d41e
- "": [T: bold f] # 0xf27f
- "𝐟": [T: bold f] # 0x1d41f
- "": [T: bold g] # 0xf280
- "𝐠": [T: bold g] # 0x1d420
- "": [T: bold h] # 0xf281
- "𝐡": [T: bold h] # 0x1d421
- "": [T: bold i] # 0xf282
- "𝐢": [T: bold i] # 0x1d422
- "": [T: bold j] # 0xf283
- "𝐣": [T: bold j] # 0x1d423
- "": [T: bold k] # 0xf284
- "𝐤": [T: bold k] # 0x1d424
- "": [T: bold l] # 0xf285
- "𝐥": [T: bold l] # 0x1d425
- "": [T: bold m] # 0xf286
- "𝐦": [T: bold m] # 0x1d426
- "": [T: bold n] # 0xf287
- "𝐧": [T: bold n] # 0x1d427
- "": [T: bold o] # 0xf288
- "𝐨": [T: bold o] # 0x1d428
- "": [T: bold p] # 0xf289
- "𝐩": [T: bold p] # 0x1d429
- "": [T: bold q] # 0xf28a
- "𝐪": [T: bold q] # 0x1d42a
- "": [T: bold r] # 0xf28b
- "𝐫": [T: bold r] # 0x1d42b
- "": [T: bold s] # 0xf28c
- "𝐬": [T: bold s] # 0x1d42c
- "": [T: bold t] # 0xf28d
- "𝐭": [T: bold t] # 0x1d42d
- "": [T: bold u] # 0xf28e
- "𝐮": [T: bold u] # 0x1d42e
- "": [T: bold v] # 0xf28f
- "𝐯": [T: bold v] # 0x1d42f
- "": [T: bold w] # 0xf290
- "𝐰": [T: bold w] # 0x1d430
- "": [T: bold x] # 0xf291
- "𝐱": [T: bold x] # 0x1d431
- "": [T: bold y] # 0xf292
- "𝐲": [T: bold y] # 0x1d432
- "": [T: bold z] # 0xf293
- "𝐳": [T: bold z] # 0x1d433
- "": # 0xf294
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: a
- "𝐴": # 0x1d434
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: a
- "": # 0xf295
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: b
- "𝐵": # 0x1d435
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: b
- "": # 0xf296
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: c
- "𝐶": # 0x1d436
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: c
- "": # 0xf297
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: d
- "𝐷": # 0x1d437
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: d
- "": # 0xf298
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: e
- "𝐸": # 0x1d438
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: e
- "": # 0xf299
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: f
- "𝐹": # 0x1d439
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: f
- "": # 0xf29a
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: g
- "𝐺": # 0x1d43a
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: g
- "": # 0xf29b
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: h
- "𝐻": # 0x1d43b
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: h
- "": # 0xf29c
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: i
- "𝐼": # 0x1d43c
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: i
- "": # 0xf29d
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: j
- "𝐽": # 0x1d43d
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: j
- "": # 0xf29e
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: k
- "𝐾": # 0x1d43e
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: k
- "": # 0xf29f
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: l
- "𝐿": # 0x1d43f
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: l
- "": # 0xf2a0
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: m
- "𝑀": # 0x1d440
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: m
- "": # 0xf2a1
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: n
- "𝑁": # 0x1d441
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: n
- "": # 0xf2a2
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: o
- "𝑂": # 0x1d442
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: o
- "": # 0xf2a3
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: p
- "𝑃": # 0x1d443
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: p
- "": # 0xf2a4
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: q
- "𝑄": # 0x1d444
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: q
- "": # 0xf2a5
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: r
- "𝑅": # 0x1d445
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: r
- "": # 0xf2a6
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: s
- "𝑆": # 0x1d446
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: s
- "": # 0xf2a7
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: t
- "𝑇": # 0x1d447
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: t
- "": # 0xf2a8
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: u
- "𝑈": # 0x1d448
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: u
- "": # 0xf2a9
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: v
- "𝑉": # 0x1d449
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: v
- "": # 0xf2aa
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: w
- "𝑊": # 0x1d44a
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: w
- "": # 0xf2ab
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: x
- "𝑋": # 0x1d44b
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: x
- "": # 0xf2ac
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: y
- "𝑌": # 0x1d44c
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: y
- "": # 0xf2ad
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: z
- "𝑍": # 0x1d44d
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: z
- "": [T: b] # 0xf2af
- "𝑏": [T: b] # 0x1d44f
- "": [T: c] # 0xf2b0
- "𝑐": [T: c] # 0x1d450
- "": [T: d] # 0xf2b1
- "𝑑": [T: d] # 0x1d451
- "": [T: e] # 0xf2b2
- "𝑒": [T: e] # 0x1d452
- "": [T: f] # 0xf2b3
- "𝑓": [T: f] # 0x1d453
- "": [T: g] # 0xf2b4
- "𝑔": [T: g] # 0x1d454
- "": [T: h] # 0xf2b5
- "𝑕": [T: h] # 0x1d455
- "": [T: i] # 0xf2b6
- "𝑖": [T: i] # 0x1d456
- "": [T: j] # 0xf2b7
- "𝑗": [T: j] # 0x1d457
- "": [T: k] # 0xf2b8
- "𝑘": [T: k] # 0x1d458
- "": [T: l] # 0xf2b9
- "𝑙": [T: l] # 0x1d459
- "": [T: m] # 0xf2ba
- "𝑚": [T: m] # 0x1d45a
- "": [T: n] # 0xf2bb
- "𝑛": [T: n] # 0x1d45b
- "": [T: o] # 0xf2bc
- "𝑜": [T: o] # 0x1d45c
- "": [T: p] # 0xf2bd
- "𝑝": [T: p] # 0x1d45d
- "": [T: q] # 0xf2be
- "𝑞": [T: q] # 0x1d45e
- "": [T: r] # 0xf2bf
- "𝑟": [T: r] # 0x1d45f
- "": [T: s] # 0xf2c0
- "𝑠": [T: s] # 0x1d460
- "": [T: t] # 0xf2c1
- "𝑡": [T: t] # 0x1d461
- "": [T: u] # 0xf2c2
- "𝑢": [T: u] # 0x1d462
- "": [T: v] # 0xf2c3
- "𝑣": [T: v] # 0x1d463
- "": [T: w] # 0xf2c4
- "𝑤": [T: w] # 0x1d464
- "": [T: x] # 0xf2c5
- "𝑥": [T: x] # 0x1d465
- "": [T: y] # 0xf2c6
- "𝑦": [T: y] # 0x1d466
- "": [T: z] # 0xf2c7
- "𝑧": [T: z] # 0x1d467
- "": # 0xf2c8
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: a
- "𝑨": # 0x1d468
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: a
- "": # 0xf2c9
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: b
- "𝑩": # 0x1d469
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: b
- "": # 0xf2ca
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: c
- "𝑪": # 0x1d46a
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: c
- "": # 0xf2cb
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: d
- "𝑫": # 0x1d46b
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: d
- "": # 0xf2cc
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: e
- "𝑬": # 0x1d46c
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: e
- "": # 0xf2cd
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: f
- "𝑭": # 0x1d46d
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: f
- "": # 0xf2ce
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: g
- "𝑮": # 0x1d46e
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: g
- "": # 0xf2cf
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: h
- "𝑯": # 0x1d46f
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: h
- "": # 0xf2d0
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: i
- "𝑰": # 0x1d470
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: i
- "": # 0xf2d1
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: j
- "𝑱": # 0x1d471
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: j
- "": # 0xf2d2
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: k
- "𝑲": # 0x1d472
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: k
- "": # 0xf2d3
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: l
- "𝑳": # 0x1d473
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: l
- "": # 0xf2d4
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: m
- "𝑴": # 0x1d474
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: m
- "": # 0xf2d5
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: n
- "𝑵": # 0x1d475
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: n
- "": # 0xf2d6
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: o
- "𝑶": # 0x1d476
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: o
- "": # 0xf2d7
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: p
- "𝑷": # 0x1d477
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: p
- "": # 0xf2d8
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: q
- "𝑸": # 0x1d478
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: q
- "": # 0xf2d9
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: r
- "𝑹": # 0x1d479
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: r
- "": # 0xf2da
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: s
- "𝑺": # 0x1d47a
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: s
- "": # 0xf2db
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: t
- "𝑻": # 0x1d47b
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: t
- "": # 0xf2dc
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: u
- "𝑼": # 0x1d47c
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: u
- "": # 0xf2dd
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: v
- "𝑽": # 0x1d47d
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: v
- "": # 0xf2de
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: w
- "𝑾": # 0x1d47e
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: w
- "": # 0xf2df
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: x
- "𝑿": # 0x1d47f
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: x
- "": # 0xf2e0
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: y
- "𝒀": # 0x1d480
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: y
- "": # 0xf2e1
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: z
- "𝒁": # 0x1d481
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: z
- "": [T: bold italic a] # 0xf2e2
- "𝒂": [T: bold italic a] # 0x1d482
- "": [T: bold italic b] # 0xf2e3
- "𝒃": [T: bold italic b] # 0x1d483
- "": [T: bold italic c] # 0xf2e4
- "𝒄": [T: bold italic c] # 0x1d484
- "": [T: bold italic d] # 0xf2e5
- "𝒅": [T: bold italic d] # 0x1d485
- "": [T: bold italic e] # 0xf2e6
- "𝒆": [T: bold italic e] # 0x1d486
- "": [T: bold italic f] # 0xf2e7
- "𝒇": [T: bold italic f] # 0x1d487
- "": [T: bold italic g] # 0xf2e8
- "𝒈": [T: bold italic g] # 0x1d488
- "": [T: bold italic h] # 0xf2e9
- "𝒉": [T: bold italic h] # 0x1d489
- "": [T: bold italic i] # 0xf2ea
- "𝒊": [T: bold italic i] # 0x1d48a
- "": [T: bold italic j] # 0xf2eb
- "𝒋": [T: bold italic j] # 0x1d48b
- "": [T: bold italic k] # 0xf2ec
- "𝒌": [T: bold italic k] # 0x1d48c
- "": [T: bold italic l] # 0xf2ed
- "𝒍": [T: bold italic l] # 0x1d48d
- "": [T: bold italic m] # 0xf2ee
- "𝒎": [T: bold italic m] # 0x1d48e
- "": [T: bold italic n] # 0xf2ef
- "𝒏": [T: bold italic n] # 0x1d48f
- "": [T: bold italic o] # 0xf2f0
- "𝒐": [T: bold italic o] # 0x1d490
- "": [T: bold italic p] # 0xf2f1
- "𝒑": [T: bold italic p] # 0x1d491
- "": [T: bold italic q] # 0xf2f2
- "𝒒": [T: bold italic q] # 0x1d492
- "": [T: bold italic r] # 0xf2f3
- "𝒓": [T: bold italic r] # 0x1d493
- "": [T: bold italic s] # 0xf2f4
- "𝒔": [T: bold italic s] # 0x1d494
- "": [T: bold italic t] # 0xf2f5
- "𝒕": [T: bold italic t] # 0x1d495
- "": [T: bold italic u] # 0xf2f6
- "𝒖": [T: bold italic u] # 0x1d496
- "": [T: bold italic v] # 0xf2f7
- "𝒗": [T: bold italic v] # 0x1d497
- "": [T: bold italic w] # 0xf2f8
- "𝒘": [T: bold italic w] # 0x1d498
- "": [T: bold italic x] # 0xf2f9
- "𝒙": [T: bold italic x] # 0x1d499
- "": [T: bold italic y] # 0xf2fa
- "𝒚": [T: bold italic y] # 0x1d49a
- "": [T: bold italic z] # 0xf2fb
- "𝒛": [T: bold italic z] # 0x1d49b
- "": # 0xf300
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: a
- "𝖠": # 0x1d5a0
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: a
- "": # 0xf301
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: b
- "𝖡": # 0x1d5a1
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: b
- "": # 0xf302
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: c
- "𝖢": # 0x1d5a2
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: c
- "": # 0xf303
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: d
- "𝖣": # 0x1d5a3
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: d
- "": # 0xf304
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: e
- "𝖤": # 0x1d5a4
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: e
- "": # 0xf305
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: f
- "𝖥": # 0x1d5a5
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: f
- "": # 0xf306
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: g
- "𝖦": # 0x1d5a6
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: g
- "": # 0xf307
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: h
- "𝖧": # 0x1d5a7
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: h
- "": # 0xf308
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: i
- "𝖨": # 0x1d5a8
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: i
- "": # 0xf309
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: j
- "𝖩": # 0x1d5a9
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: j
- "": # 0xf30a
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: k
- "𝖪": # 0x1d5aa
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: k
- "": # 0xf30b
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: l
- "𝖫": # 0x1d5ab
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: l
- "": # 0xf30c
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: m
- "𝖬": # 0x1d5ac
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: m
- "": # 0xf30d
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: n
- "𝖭": # 0x1d5ad
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: n
- "": # 0xf30e
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: o
- "𝖮": # 0x1d5ae
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: o
- "": # 0xf30f
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: p
- "𝖯": # 0x1d5af
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: p
- "": # 0xf310
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: q
- "𝖰": # 0x1d5b0
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: q
- "": # 0xf311
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: r
- "𝖱": # 0x1d5b1
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: r
- "": # 0xf312
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: s
- "𝖲": # 0x1d5b2
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: s
- "": # 0xf313
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: t
- "𝖳": # 0x1d5b3
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: t
- "": # 0xf314
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: u
- "𝖴": # 0x1d5b4
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: u
- "": # 0xf315
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: v
- "𝖵": # 0x1d5b5
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: v
- "": # 0xf316
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: w
- "𝖶": # 0x1d5b6
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: w
- "": # 0xf317
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: x
- "𝖷": # 0x1d5b7
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: x
- "": # 0xf318
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: y
- "𝖸": # 0x1d5b8
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: y
- "": # 0xf319
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: z
- "𝖹": # 0x1d5b9
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: z
- "": [T: a] # 0xf31a
- "𝖺": [T: a] # 0x1d5ba
- "": [T: b] # 0xf31b
- "𝖻": [T: b] # 0x1d5bb
- "": [T: c] # 0xf31c
- "𝖼": [T: c] # 0x1d5bc
- "": [T: d] # 0xf31d
- "𝖽": [T: d] # 0x1d5bd
- "": [T: e] # 0xf31e
- "𝖾": [T: e] # 0x1d5be
- "": [T: f] # 0xf31f
- "𝖿": [T: f] # 0x1d5bf
- "": [T: g] # 0xf320
- "𝗀": [T: g] # 0x1d5c0
- "": [T: h] # 0xf321
- "𝗁": [T: h] # 0x1d5c1
- "": [T: i] # 0xf322
- "𝗂": [T: i] # 0x1d5c2
- "": [T: j] # 0xf323
- "𝗃": [T: j] # 0x1d5c3
- "": [T: k] # 0xf324
- "𝗄": [T: k] # 0x1d5c4
- "": [T: l] # 0xf325
- "𝗅": [T: l] # 0x1d5c5
- "": [T: m] # 0xf326
- "𝗆": [T: m] # 0x1d5c6
- "": [T: n] # 0xf327
- "𝗇": [T: n] # 0x1d5c7
- "": [T: o] # 0xf328
- "𝗈": [T: o] # 0x1d5c8
- "": [T: p] # 0xf329
- "𝗉": [T: p] # 0x1d5c9
- "": [T: q] # 0xf32a
- "𝗊": [T: q] # 0x1d5ca
- "": [T: r] # 0xf32b
- "𝗋": [T: r] # 0x1d5cb
- "": [T: s] # 0xf32c
- "𝗌": [T: s] # 0x1d5cc
- "": [T: t] # 0xf32d
- "𝗍": [T: t] # 0x1d5cd
- "": [T: u] # 0xf32e
- "𝗎": [T: u] # 0x1d5ce
- "": [T: v] # 0xf32f
- "𝗏": [T: v] # 0x1d5cf
- "": [T: w] # 0xf330
- "𝗐": [T: w] # 0x1d5d0
- "": [T: x] # 0xf331
- "𝗑": [T: x] # 0x1d5d1
- "": [T: y] # 0xf332
- "𝗒": [T: y] # 0x1d5d2
- "": [T: z] # 0xf333
- "𝗓": [T: z] # 0x1d5d3
- "": # 0xf334
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: a
- "𝗔": # 0x1d5d4
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: a
- "": # 0xf335
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: b
- "𝗕": # 0x1d5d5
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: b
- "": # 0xf336
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: c
- "𝗖": # 0x1d5d6
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: c
- "": # 0xf337
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: d
- "𝗗": # 0x1d5d7
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: d
- "": # 0xf338
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: e
- "𝗘": # 0x1d5d8
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: e
- "": # 0xf339
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: f
- "𝗙": # 0x1d5d9
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: f
- "": # 0xf33a
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: g
- "𝗚": # 0x1d5da
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: g
- "": # 0xf33b
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: h
- "𝗛": # 0x1d5db
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: h
- "": # 0xf33c
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: i
- "𝗜": # 0x1d5dc
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: i
- "": # 0xf33d
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: j
- "𝗝": # 0x1d5dd
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: j
- "": # 0xf33e
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: k
- "𝗞": # 0x1d5de
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: k
- "": # 0xf33f
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: l
- "𝗟": # 0x1d5df
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: l
- "": # 0xf340
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: m
- "𝗠": # 0x1d5e0
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: m
- "": # 0xf341
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: n
- "𝗡": # 0x1d5e1
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: n
- "": # 0xf342
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: o
- "𝗢": # 0x1d5e2
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: o
- "": # 0xf343
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: p
- "𝗣": # 0x1d5e3
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: p
- "": # 0xf344
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: q
- "𝗤": # 0x1d5e4
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: q
- "": # 0xf345
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: r
- "𝗥": # 0x1d5e5
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: r
- "": # 0xf346
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: s
- "𝗦": # 0x1d5e6
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: s
- "": # 0xf347
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: t
- "𝗧": # 0x1d5e7
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: t
- "": # 0xf348
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: u
- "𝗨": # 0x1d5e8
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: u
- "": # 0xf349
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: v
- "𝗩": # 0x1d5e9
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: v
- "": # 0xf34a
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: w
- "𝗪": # 0x1d5ea
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: w
- "": # 0xf34b
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: x
- "𝗫": # 0x1d5eb
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: x
- "": # 0xf34c
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: y
- "𝗬": # 0x1d5ec
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: y
- "": # 0xf34d
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: z
- "𝗭": # 0x1d5ed
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: z
- "": [T: bold a] # 0xf34e
- "𝗮": [T: bold a] # 0x1d5ee
- "": [T: bold b] # 0xf34f
- "𝗯": [T: bold b] # 0x1d5ef
- "": [T: bold c] # 0xf350
- "𝗰": [T: bold c] # 0x1d5f0
- "": [T: bold d] # 0xf351
- "𝗱": [T: bold d] # 0x1d5f1
- "": [T: bold e] # 0xf352
- "𝗲": [T: bold e] # 0x1d5f2
- "": [T: bold f] # 0xf353
- "𝗳": [T: bold f] # 0x1d5f3
- "": [T: bold g] # 0xf354
- "𝗴": [T: bold g] # 0x1d5f4
- "": [T: bold h] # 0xf355
- "𝗵": [T: bold h] # 0x1d5f5
- "": [T: bold i] # 0xf356
- "𝗶": [T: bold i] # 0x1d5f6
- "": [T: bold j] # 0xf357
- "𝗷": [T: bold j] # 0x1d5f7
- "": [T: bold k] # 0xf358
- "𝗸": [T: bold k] # 0x1d5f8
- "": [T: bold l] # 0xf359
- "𝗹": [T: bold l] # 0x1d5f9
- "": [T: bold m] # 0xf35a
- "𝗺": [T: bold m] # 0x1d5fa
- "": [T: bold n] # 0xf35b
- "𝗻": [T: bold n] # 0x1d5fb
- "": [T: bold o] # 0xf35c
- "𝗼": [T: bold o] # 0x1d5fc
- "": [T: bold p] # 0xf35d
- "𝗽": [T: bold p] # 0x1d5fd
- "": [T: bold q] # 0xf35e
- "𝗾": [T: bold q] # 0x1d5fe
- "": [T: bold r] # 0xf35f
- "𝗿": [T: bold r] # 0x1d5ff
- "": [T: bold s] # 0xf360
- "𝘀": [T: bold s] # 0x1d600
- "": [T: bold t] # 0xf361
- "𝘁": [T: bold t] # 0x1d601
- "": [T: bold u] # 0xf362
- "𝘂": [T: bold u] # 0x1d602
- "": [T: bold v] # 0xf363
- "𝘃": [T: bold v] # 0x1d603
- "": [T: bold w] # 0xf364
- "𝘄": [T: bold w] # 0x1d604
- "": [T: bold x] # 0xf365
- "𝘅": [T: bold x] # 0x1d605
- "": [T: bold y] # 0xf366
- "𝘆": [T: bold y] # 0x1d606
- "": [T: bold z] # 0xf367
- "𝘇": [T: bold z] # 0x1d607
- "": # 0xf368
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: a
- "𝘈": # 0x1d608
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: a
- "": # 0xf369
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: b
- "𝘉": # 0x1d609
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: b
- "": # 0xf36a
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: c
- "𝘊": # 0x1d60a
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: c
- "": # 0xf36b
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: d
- "𝘋": # 0x1d60b
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: d
- "": # 0xf36c
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: e
- "𝘌": # 0x1d60c
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: e
- "": # 0xf36d
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: f
- "𝘍": # 0x1d60d
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: f
- "": # 0xf36e
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: g
- "𝘎": # 0x1d60e
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: g
- "": # 0xf36f
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: h
- "𝘏": # 0x1d60f
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: h
- "": # 0xf370
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: i
- "𝘐": # 0x1d610
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: i
- "": # 0xf371
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: j
- "𝘑": # 0x1d611
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: j
- "": # 0xf372
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: k
- "𝘒": # 0x1d612
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: k
- "": # 0xf373
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: l
- "𝘓": # 0x1d613
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: l
- "": # 0xf374
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: m
- "𝘔": # 0x1d614
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: m
- "": # 0xf375
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: n
- "𝘕": # 0x1d615
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: n
- "": # 0xf376
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: o
- "𝘖": # 0x1d616
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: o
- "": # 0xf377
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: p
- "𝘗": # 0x1d617
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: p
- "": # 0xf378
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: q
- "𝘘": # 0x1d618
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: q
- "": # 0xf379
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: r
- "𝘙": # 0x1d619
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: r
- "": # 0xf37a
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: s
- "𝘚": # 0x1d61a
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: s
- "": # 0xf37b
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: t
- "𝘛": # 0x1d61b
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: t
- "": # 0xf37c
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: u
- "𝘜": # 0x1d61c
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: u
- "": # 0xf37d
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: v
- "𝘝": # 0x1d61d
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: v
- "": # 0xf37e
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: w
- "𝘞": # 0x1d61e
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: w
- "": # 0xf37f
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: x
- "𝘟": # 0x1d61f
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: x
- "": # 0xf380
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: y
- "𝘠": # 0x1d620
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: y
- "": # 0xf381
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: z
- "𝘡": # 0x1d621
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: z
- "": [T: italic a] # 0xf382
- "𝘢": [T: italic a] # 0x1d622
- "": [T: italic b] # 0xf383
- "𝘣": [T: italic b] # 0x1d623
- "": [T: italic c] # 0xf384
- "𝘤": [T: italic c] # 0x1d624
- "": [T: italic d] # 0xf385
- "𝘥": [T: italic d] # 0x1d625
- "": [T: italic e] # 0xf386
- "𝘦": [T: italic e] # 0x1d626
- "": [T: italic f] # 0xf387
- "𝘧": [T: italic f] # 0x1d627
- "": [T: italic g] # 0xf388
- "𝘨": [T: italic g] # 0x1d628
- "": [T: italic h] # 0xf389
- "𝘩": [T: italic h] # 0x1d629
- "": [T: italic i] # 0xf38a
- "𝘪": [T: italic i] # 0x1d62a
- "": [T: italic j] # 0xf38b
- "𝘫": [T: italic j] # 0x1d62b
- "": [T: italic k] # 0xf38c
- "𝘬": [T: italic k] # 0x1d62c
- "": [T: italic l] # 0xf38d
- "𝘭": [T: italic l] # 0x1d62d
- "": [T: italic m] # 0xf38e
- "𝘮": [T: italic m] # 0x1d62e
- "": [T: italic n] # 0xf38f
- "𝘯": [T: italic n] # 0x1d62f
- "": [T: italic o] # 0xf390
- "𝘰": [T: italic o] # 0x1d630
- "": [T: italic p] # 0xf391
- "𝘱": [T: italic p] # 0x1d631
- "": [T: italic q] # 0xf392
- "𝘲": [T: italic q] # 0x1d632
- "": [T: italic r] # 0xf393
- "𝘳": [T: italic r] # 0x1d633
- "": [T: italic s] # 0xf394
- "𝘴": [T: italic s] # 0x1d634
- "": [T: italic t] # 0xf395
- "𝘵": [T: italic t] # 0x1d635
- "": [T: italic u] # 0xf396
- "𝘶": [T: italic u] # 0x1d636
- "": [T: italic v] # 0xf397
- "𝘷": [T: italic v] # 0x1d637
- "": [T: italic w] # 0xf398
- "𝘸": [T: italic w] # 0x1d638
- "": [T: italic x] # 0xf399
- "𝘹": [T: italic x] # 0x1d639
- "": [T: italic y] # 0xf39a
- "𝘺": [T: italic y] # 0x1d63a
- "": [T: italic z] # 0xf39b
- "𝘻": [T: italic z] # 0x1d63b
- "": # 0xf39c
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: a
- "𝘼": # 0x1d63c
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: a
- "": # 0xf39d
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: b
- "𝘽": # 0x1d63d
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: b
- "": # 0xf39e
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: c
- "𝘾": # 0x1d63e
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: c
- "": # 0xf39f
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: d
- "𝘿": # 0x1d63f
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: d
- "": # 0xf3a0
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: e
- "𝙀": # 0x1d640
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: e
- "": # 0xf3a1
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: f
- "𝙁": # 0x1d641
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: f
- "": # 0xf3a2
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: g
- "𝙂": # 0x1d642
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: g
- "": # 0xf3a3
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: h
- "𝙃": # 0x1d643
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: h
- "": # 0xf3a4
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: i
- "𝙄": # 0x1d644
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: i
- "": # 0xf3a5
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: j
- "𝙅": # 0x1d645
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: j
- "": # 0xf3a6
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: k
- "𝙆": # 0x1d646
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: k
- "": # 0xf3a7
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: l
- "𝙇": # 0x1d647
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: l
- "": # 0xf3a8
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: m
- "𝙈": # 0x1d648
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: m
- "": # 0xf3a9
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: n
- "𝙉": # 0x1d649
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: n
- "": # 0xf3aa
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: o
- "𝙊": # 0x1d64a
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: o
- "": # 0xf3ab
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: p
- "𝙋": # 0x1d64b
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: p
- "": # 0xf3ac
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: q
- "𝙌": # 0x1d64c
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: q
- "": # 0xf3ad
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: r
- "𝙍": # 0x1d64d
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: r
- "": # 0xf3ae
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: s
- "𝙎": # 0x1d64e
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: s
- "": # 0xf3af
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: t
- "𝙏": # 0x1d64f
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: t
- "": # 0xf3b0
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: u
- "𝙐": # 0x1d650
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: u
- "": # 0xf3b1
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: v
- "𝙑": # 0x1d651
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: v
- "": # 0xf3b2
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: w
- "𝙒": # 0x1d652
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: w
- "": # 0xf3b3
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: x
- "𝙓": # 0x1d653
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: x
- "": # 0xf3b4
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: y
- "𝙔": # 0x1d654
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: y
- "": # 0xf3b5
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: z
- "𝙕": # 0x1d655
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: z
- "": [T: bold italic a] # 0xf3b6
- "𝙖": [T: bold italic a] # 0x1d656
- "": [T: bold italic b] # 0xf3b7
- "𝙗": [T: bold italic b] # 0x1d657
- "": [T: bold italic c] # 0xf3b8
- "𝙘": [T: bold italic c] # 0x1d658
- "": [T: bold italic d] # 0xf3b9
- "𝙙": [T: bold italic d] # 0x1d659
- "": [T: bold italic e] # 0xf3ba
- "𝙚": [T: bold italic e] # 0x1d65a
- "": [T: bold italic f] # 0xf3bb
- "𝙛": [T: bold italic f] # 0x1d65b
- "": [T: bold italic g] # 0xf3bc
- "𝙜": [T: bold italic g] # 0x1d65c
- "": [T: bold italic h] # 0xf3bd
- "𝙝": [T: bold italic h] # 0x1d65d
- "": [T: bold italic i] # 0xf3be
- "𝙞": [T: bold italic i] # 0x1d65e
- "": [T: bold italic j] # 0xf3bf
- "𝙟": [T: bold italic j] # 0x1d65f
- "": [T: bold italic k] # 0xf3c0
- "𝙠": [T: bold italic k] # 0x1d660
- "": [T: bold italic l] # 0xf3c1
- "𝙡": [T: bold italic l] # 0x1d661
- "": [T: bold italic m] # 0xf3c2
- "𝙢": [T: bold italic m] # 0x1d662
- "": [T: bold italic n] # 0xf3c3
- "𝙣": [T: bold italic n] # 0x1d663
- "": [T: bold italic o] # 0xf3c4
- "𝙤": [T: bold italic o] # 0x1d664
- "": [T: bold italic p] # 0xf3c5
- "𝙥": [T: bold italic p] # 0x1d665
- "": [T: bold italic q] # 0xf3c6
- "𝙦": [T: bold italic q] # 0x1d666
- "": [T: bold italic r] # 0xf3c7
- "𝙧": [T: bold italic r] # 0x1d667
- "": [T: bold italic s] # 0xf3c8
- "𝙨": [T: bold italic s] # 0x1d668
- "": [T: bold italic t] # 0xf3c9
- "𝙩": [T: bold italic t] # 0x1d669
- "": [T: bold italic u] # 0xf3ca
- "𝙪": [T: bold italic u] # 0x1d66a
- "": [T: bold italic v] # 0xf3cb
- "𝙫": [T: bold italic v] # 0x1d66b
- "": [T: bold italic w] # 0xf3cc
- "𝙬": [T: bold italic w] # 0x1d66c
- "": [T: bold italic x] # 0xf3cd
- "𝙭": [T: bold italic x] # 0x1d66d
- "": [T: bold italic y] # 0xf3ce
- "𝙮": [T: bold italic y] # 0x1d66e
- "": [T: bold italic z] # 0xf3cf
- "𝙯": [T: bold italic z] # 0x1d66f
- "": # 0xf3d0
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: a
- "𝙰": # 0x1d670
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: a
- "": # 0xf3d1
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: b
- "𝙱": # 0x1d671
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: b
- "": # 0xf3d2
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: c
- "𝙲": # 0x1d672
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: c
- "": # 0xf3d3
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: d
- "𝙳": # 0x1d673
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: d
- "": # 0xf3d4
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: e
- "𝙴": # 0x1d674
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: e
- "": # 0xf3d5
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: f
- "𝙵": # 0x1d675
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: f
- "": # 0xf3d6
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: g
- "𝙶": # 0x1d676
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: g
- "": # 0xf3d7
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: h
- "𝙷": # 0x1d677
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: h
- "": # 0xf3d8
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: i
- "𝙸": # 0x1d678
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: i
- "": # 0xf3d9
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: j
- "𝙹": # 0x1d679
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: j
- "": # 0xf3da
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: k
- "𝙺": # 0x1d67a
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: k
- "": # 0xf3db
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: l
- "𝙻": # 0x1d67b
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: l
- "": # 0xf3dc
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: m
- "𝙼": # 0x1d67c
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: m
- "": # 0xf3dd
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: n
- "𝙽": # 0x1d67d
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: n
- "": # 0xf3de
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: o
- "𝙾": # 0x1d67e
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: o
- "": # 0xf3df
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: p
- "𝙿": # 0x1d67f
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: p
- "": # 0xf3e0
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: q
- "𝚀": # 0x1d680
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: q
- "": # 0xf3e1
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: r
- "𝚁": # 0x1d681
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: r
- "": # 0xf3e2
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: s
- "𝚂": # 0x1d682
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: s
- "": # 0xf3e3
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: t
- "𝚃": # 0x1d683
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: t
- "": # 0xf3e4
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: u
- "𝚄": # 0x1d684
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: u
- "": # 0xf3e5
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: v
- "𝚅": # 0x1d685
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: v
- "": # 0xf3e6
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: w
- "𝚆": # 0x1d686
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: w
- "": # 0xf3e7
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: x
- "𝚇": # 0x1d687
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: x
- "": # 0xf3e8
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: y
- "𝚈": # 0x1d688
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: y
- "": # 0xf3e9
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: z
- "𝚉": # 0x1d689
    - T: ''
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: z
- "": [T: a] # 0xf3ea
- "𝚊": [T: a] # 0x1d68a
- "": [T: b] # 0xf3eb
- "𝚋": [T: b] # 0x1d68b
- "": [T: c] # 0xf3ec
- "𝚌": [T: c] # 0x1d68c
- "": [T: d] # 0xf3ed
- "𝚍": [T: d] # 0x1d68d
- "": [T: e] # 0xf3ee
- "𝚎": [T: e] # 0x1d68e
- "": [T: f] # 0xf3ef
- "𝚏": [T: f] # 0x1d68f
- "": [T: g] # 0xf3f0
- "𝚐": [T: g] # 0x1d690
- "": [T: h] # 0xf3f1
- "𝚑": [T: h] # 0x1d691
- "": [T: i] # 0xf3f2
- "𝚒": [T: i] # 0x1d692
- "": [T: j] # 0xf3f3
- "𝚓": [T: j] # 0x1d693
- "": [T: k] # 0xf3f4
- "𝚔": [T: k] # 0x1d694
- "": [T: l] # 0xf3f5
- "𝚕": [T: l] # 0x1d695
- "": [T: m] # 0xf3f6
- "𝚖": [T: m] # 0x1d696
- "": [T: n] # 0xf3f7
- "𝚗": [T: n] # 0x1d697
- "": [T: o] # 0xf3f8
- "𝚘": [T: o] # 0x1d698
- "": [T: p] # 0xf3f9
- "𝚙": [T: p] # 0x1d699
- "": [T: q] # 0xf3fa
- "𝚚": [T: q] # 0x1d69a
- "": [T: r] # 0xf3fb
- "𝚛": [T: r] # 0x1d69b
- "": [T: s] # 0xf3fc
- "𝚜": [T: s] # 0x1d69c
- "": [T: t] # 0xf3fd
- "𝚝": [T: t] # 0x1d69d
- "": [T: u] # 0xf3fe
- "𝚞": [T: u] # 0x1d69e
- "": [T: v] # 0xf3ff
- "𝚟": [T: v] # 0x1d69f
- "": [T: w] # 0xf400
- "𝚠": [T: w] # 0x1d6a0
- "": [T: x] # 0xf401
- "𝚡": [T: x] # 0x1d6a1
- "": [T: y] # 0xf402
- "𝚢": [T: y] # 0x1d6a2
- "": [T: z] # 0xf403
- "𝚣": [T: z] # 0x1d6a3
- "": [T: dotless i] # 0xf404
- "𝚤": [T: dotless i] # 0x1d6a4
- "𝚥": [T: dotless j] # 0x1d6a5
- "": # 0xf408
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: alpha
- "𝚨": # 0x1d6a8
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: alpha
- "": # 0xf409
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: beta
- "𝚩": # 0x1d6a9
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: beta
- "": # 0xf40a
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: gamma
- "𝚪": # 0x1d6aa
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: gamma
- "": # 0xf40b
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: delta
- "𝚫": # 0x1d6ab
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: delta
- "": # 0xf40c
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: epsilon
- "𝚬": # 0x1d6ac
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: epsilon
- "": # 0xf40d
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: zeta
- "𝚭": # 0x1d6ad
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: zeta
- "": # 0xf40e
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: eta
- "𝚮": # 0x1d6ae
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: eta
- "": # 0xf40f
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: theta
- "𝚯": # 0x1d6af
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: theta
- "": # 0xf410
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: iota
- "𝚰": # 0x1d6b0
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: iota
- "": # 0xf411
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: kappa
- "𝚱": # 0x1d6b1
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: kappa
- "": # 0xf412
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: lamda
- "𝚲": # 0x1d6b2
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: lamda
- "": # 0xf413
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: mu
- "𝚳": # 0x1d6b3
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: mu
- "": # 0xf414
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: nu
- "𝚴": # 0x1d6b4
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: nu
- "": # 0xf415
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: xi
- "𝚵": # 0x1d6b5
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: xi
- "": # 0xf416
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: omicron
- "𝚶": # 0x1d6b6
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: omicron
- "": # 0xf417
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: pi
- "𝚷": # 0x1d6b7
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: pi
- "": # 0xf418
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: rho
- "𝚸": # 0x1d6b8
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: rho
- "": # 0xf419
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: theta
- "𝚹": # 0x1d6b9
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: theta
- "": # 0xf41a
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: sigma
- "𝚺": # 0x1d6ba
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: sigma
- "": # 0xf41b
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: tau
- "𝚻": # 0x1d6bb
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: tau
- "": # 0xf41c
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: upsilon
- "𝚼": # 0x1d6bc
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: upsilon
- "": # 0xf41d
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: phi
- "𝚽": # 0x1d6bd
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: phi
- "": # 0xf41e
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: chi
- "𝚾": # 0x1d6be
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: chi
- "": # 0xf41f
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: psi
- "𝚿": # 0x1d6bf
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: psi
- "": # 0xf420
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: omega
- "𝛀": # 0x1d6c0
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: omega
- "": [T: bold nabla] # 0xf421
- "𝛁": [T: bold nabla] # 0x1d6c1
- "": [T: bold  alpha] # 0xf422
- "𝛂": [T: bold  alpha] # 0x1d6c2
- "": [T: bold  beta] # 0xf423
- "𝛃": [T: bold  beta] # 0x1d6c3
- "": [T: bold  gamma] # 0xf424
- "𝛄": [T: bold  gamma] # 0x1d6c4
- "": [T: bold  delta] # 0xf425
- "𝛅": [T: bold  delta] # 0x1d6c5
- "": [T: bold  epsilon] # 0xf426
- "𝛆": [T: bold  epsilon] # 0x1d6c6
- "": [T: bold  zeta] # 0xf427
- "𝛇": [T: bold  zeta] # 0x1d6c7
- "": [T: bold  eta] # 0xf428
- "𝛈": [T: bold  eta] # 0x1d6c8
- "": [T: bold  theta] # 0xf429
- "𝛉": [T: bold  theta] # 0x1d6c9
- "": [T: bold  iota] # 0xf42a
- "𝛊": [T: bold  iota] # 0x1d6ca
- "": [T: bold  kappa] # 0xf42b
- "𝛋": [T: bold  kappa] # 0x1d6cb
- "": [T: bold  lamda] # 0xf42c
- "𝛌": [T: bold  lamda] # 0x1d6cc
- "": [T: bold  mu] # 0xf42d
- "𝛍": [T: bold  mu] # 0x1d6cd
- "": [T: bold  nu] # 0xf42e
- "𝛎": [T: bold  nu] # 0x1d6ce
- "": [T: bold  xi] # 0xf42f
- "𝛏": [T: bold  xi] # 0x1d6cf
- "": [T: bold  omicron] # 0xf430
- "𝛐": [T: bold  omicron] # 0x1d6d0
- "": [T: bold  pi] # 0xf431
- "𝛑": [T: bold  pi] # 0x1d6d1
- "": [T: bold  rho] # 0xf432
- "𝛒": [T: bold  rho] # 0x1d6d2
- "": [T: bold  final sigma] # 0xf433
- "𝛓": [T: bold  final sigma] # 0x1d6d3
- "": [T: bold  sigma] # 0xf434
- "𝛔": [T: bold  sigma] # 0x1d6d4
- "": [T: bold  tau] # 0xf435
- "𝛕": [T: bold  tau] # 0x1d6d5
- "": [T: bold  upsilon] # 0xf436
- "𝛖": [T: bold  upsilon] # 0x1d6d6
- "": [T: bold  phi] # 0xf437
- "𝛗": [T: bold  phi] # 0x1d6d7
- "": [T: bold  chi] # 0xf438
- "𝛘": [T: bold  chi] # 0x1d6d8
- "": [T: bold  psi] # 0xf439
- "𝛙": [T: bold  psi] # 0x1d6d9
- "": [T: bold  omega] # 0xf43a
- "𝛚": [T: bold  omega] # 0x1d6da
- "": [T: bold partial differential] # 0xf43b
- "𝛛": [T: bold partial differential] # 0x1d6db
- "": [T: bold epsilon] # 0xf43c
- "𝛜": [T: bold epsilon] # 0x1d6dc
- "": [T: bold theta] # 0xf43d
- "𝛝": [T: bold theta] # 0x1d6dd
- "": [T: bold kappa] # 0xf43e
- "𝛞": [T: bold kappa] # 0x1d6de
- "": [T: bold phi] # 0xf43f
- "𝛟": [T: bold phi] # 0x1d6df
- "": [T: bold rho] # 0xf440
- "𝛠": [T: bold rho] # 0x1d6e0
- "": [T: bold pi] # 0xf441
- "𝛡": [T: bold pi] # 0x1d6e1
- "": # 0xf442
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: alpha
- "𝛢": # 0x1d6e2
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: alpha
- "": # 0xf443
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: beta
- "𝛣": # 0x1d6e3
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: beta
- "": # 0xf444
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: gamma
- "𝛤": # 0x1d6e4
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: gamma
- "": # 0xf445
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: delta
- "𝛥": # 0x1d6e5
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: delta
- "": # 0xf446
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: epsilon
- "𝛦": # 0x1d6e6
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: epsilon
- "": # 0xf447
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: zeta
- "𝛧": # 0x1d6e7
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: zeta
- "": # 0xf448
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: eta
- "𝛨": # 0x1d6e8
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: eta
- "": # 0xf449
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: theta
- "𝛩": # 0x1d6e9
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: theta
- "": # 0xf44a
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: iota
- "𝛪": # 0x1d6ea
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: iota
- "": # 0xf44b
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: kappa
- "𝛫": # 0x1d6eb
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: kappa
- "": # 0xf44c
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: lamda
- "𝛬": # 0x1d6ec
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: lamda
- "": # 0xf44d
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: mu
- "𝛭": # 0x1d6ed
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: mu
- "": # 0xf44e
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: nu
- "𝛮": # 0x1d6ee
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: nu
- "": # 0xf44f
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: xi
- "𝛯": # 0x1d6ef
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: xi
- "": # 0xf450
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: omicron
- "𝛰": # 0x1d6f0
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: omicron
- "": # 0xf451
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: pi
- "𝛱": # 0x1d6f1
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: pi
- "": # 0xf452
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: rho
- "𝛲": # 0x1d6f2
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: rho
- "": # 0xf453
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: theta
- "𝛳": # 0x1d6f3
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: theta
- "": # 0xf454
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: sigma
- "𝛴": # 0x1d6f4
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: sigma
- "": # 0xf455
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: tau
- "𝛵": # 0x1d6f5
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: tau
- "": # 0xf456
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: upsilon
- "𝛶": # 0x1d6f6
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: upsilon
- "": # 0xf457
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: phi
- "𝛷": # 0x1d6f7
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: phi
- "": # 0xf458
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: chi
- "𝛸": # 0x1d6f8
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: chi
- "": # 0xf459
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: psi
- "𝛹": # 0x1d6f9
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: psi
- "": # 0xf45a
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: omega
- "𝛺": # 0x1d6fa
    - T: italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: omega
- "": [T: bold nabla] # 0xf45b
- "𝛻": [T: bold nabla] # 0x1d6fb
- "": [T: italic alpha] # 0xf45c
- "𝛼": [T: italic alpha] # 0x1d6fc
- "": [T: italic beta] # 0xf45d
- "𝛽": [T: italic beta] # 0x1d6fd
- "": [T: italic gamma] # 0xf45e
- "𝛾": [T: italic gamma] # 0x1d6fe
- "": [T: italic delta] # 0xf45f
- "𝛿": [T: italic delta] # 0x1d6ff
- "": [T: italic epsilon] # 0xf460
- "𝜀": [T: italic epsilon] # 0x1d700
- "": [T: italic zeta] # 0xf461
- "𝜁": [T: italic zeta] # 0x1d701
- "": [T: italic eta] # 0xf462
- "𝜂": [T: italic eta] # 0x1d702
- "": [T: italic theta] # 0xf463
- "𝜃": [T: italic theta] # 0x1d703
- "": [T: italic iota] # 0xf464
- "𝜄": [T: italic iota] # 0x1d704
- "": [T: italic kappa] # 0xf465
- "𝜅": [T: italic kappa] # 0x1d705
- "": [T: italic lamda] # 0xf466
- "𝜆": [T: italic lamda] # 0x1d706
- "": [T: italic mu] # 0xf467
- "𝜇": [T: italic mu] # 0x1d707
- "": [T: italic nu] # 0xf468
- "𝜈": [T: italic nu] # 0x1d708
- "": [T: italic xi] # 0xf469
- "𝜉": [T: italic xi] # 0x1d709
- "": [T: italic omicron] # 0xf46a
- "𝜊": [T: italic omicron] # 0x1d70a
- "": [T: italic pi] # 0xf46b
- "𝜋": [T: italic pi] # 0x1d70b
- "": [T: italic rho] # 0xf46c
- "𝜌": [T: italic rho] # 0x1d70c
- "": [T: italic final sigma] # 0xf46d
- "𝜍": [T: italic final sigma] # 0x1d70d
- "": [T: italic sigma] # 0xf46e
- "𝜎": [T: italic sigma] # 0x1d70e
- "": [T: italic tau] # 0xf46f
- "𝜏": [T: italic tau] # 0x1d70f
- "": [T: italic upsilon] # 0xf470
- "𝜐": [T: italic upsilon] # 0x1d710
- "": [T: italic phi] # 0xf471
- "𝜑": [T: italic phi] # 0x1d711
- "": [T: italic chi] # 0xf472
- "𝜒": [T: italic chi] # 0x1d712
- "": [T: italic psi] # 0xf473
- "𝜓": [T: italic psi] # 0x1d713
- "": [T: italic omega] # 0xf474
- "𝜔": [T: italic omega] # 0x1d714
- "": [T: bold partial differential] # 0xf475
- "𝜕": [T: bold partial differential] # 0x1d715
- "": [T: italic epsilon] # 0xf476
- "𝜖": [T: italic epsilon] # 0x1d716
- "": [T: italic theta] # 0xf477
- "𝜗": [T: italic theta] # 0x1d717
- "": [T: italic kappa] # 0xf478
- "𝜘": [T: italic kappa] # 0x1d718
- "": [T: italic phi] # 0xf479
- "𝜙": [T: italic phi] # 0x1d719
- "": [T: italic rho] # 0xf47a
- "𝜚": [T: italic rho] # 0x1d71a
- "": [T: italic pi] # 0xf47b
- "𝜛": [T: italic pi] # 0x1d71b
- "": # 0xf47c
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: alpha
- "𝜜": # 0x1d71c
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: alpha
- "": # 0xf47d
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: beta
- "𝜝": # 0x1d71d
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: beta
- "": # 0xf47e
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: gamma
- "𝜞": # 0x1d71e
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: gamma
- "": # 0xf47f
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: delta
- "𝜟": # 0x1d71f
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: delta
- "": # 0xf480
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: epsilon
- "𝜠": # 0x1d720
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: epsilon
- "": # 0xf481
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: zeta
- "𝜡": # 0x1d721
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: zeta
- "": # 0xf482
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: eta
- "𝜢": # 0x1d722
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: eta
- "": # 0xf483
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: theta
- "𝜣": # 0x1d723
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: theta
- "": # 0xf484
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: iota
- "𝜤": # 0x1d724
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: iota
- "": # 0xf485
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: kappa
- "𝜥": # 0x1d725
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: kappa
- "": # 0xf486
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: lamda
- "𝜦": # 0x1d726
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: lamda
- "": # 0xf487
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: mu
- "𝜧": # 0x1d727
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: mu
- "": # 0xf488
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: nu
- "𝜨": # 0x1d728
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: nu
- "": # 0xf489
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: xi
- "𝜩": # 0x1d729
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: xi
- "": # 0xf48a
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: omicron
- "𝜪": # 0x1d72a
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: omicron
- "": # 0xf48b
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: pi
- "𝜫": # 0x1d72b
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: pi
- "": # 0xf48c
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: rho
- "𝜬": # 0x1d72c
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: rho
- "": # 0xf48d
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: theta
- "𝜭": # 0x1d72d
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: theta
- "": # 0xf48e
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: sigma
- "𝜮": # 0x1d72e
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: sigma
- "": # 0xf48f
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: tau
- "𝜯": # 0x1d72f
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: tau
- "": # 0xf490
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: upsilon
- "𝜰": # 0x1d730
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: upsilon
- "": # 0xf491
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: phi
- "𝜱": # 0x1d731
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: phi
- "": # 0xf492
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: chi
- "𝜲": # 0x1d732
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: chi
- "": # 0xf493
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: psi
- "𝜳": # 0x1d733
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: psi
- "": # 0xf494
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: omega
- "𝜴": # 0x1d734
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: omega
- "": [T: bold nabla] # 0xf495
- "𝜵": [T: bold nabla] # 0x1d735
- "": [T: bold italic alpha] # 0xf496
- "𝜶": [T: bold italic alpha] # 0x1d736
- "": [T: bold italic beta] # 0xf497
- "𝜷": [T: bold italic beta] # 0x1d737
- "": [T: bold italic gamma] # 0xf498
- "𝜸": [T: bold italic gamma] # 0x1d738
- "": [T: bold italic delta] # 0xf499
- "𝜹": [T: bold italic delta] # 0x1d739
- "": [T: bold italic epsilon] # 0xf49a
- "𝜺": [T: bold italic epsilon] # 0x1d73a
- "": [T: bold italic zeta] # 0xf49b
- "𝜻": [T: bold italic zeta] # 0x1d73b
- "": [T: bold italic eta] # 0xf49c
- "𝜼": [T: bold italic eta] # 0x1d73c
- "": [T: bold italic theta] # 0xf49d
- "𝜽": [T: bold italic theta] # 0x1d73d
- "": [T: bold italic iota] # 0xf49e
- "𝜾": [T: bold italic iota] # 0x1d73e
- "": [T: bold italic kappa] # 0xf49f
- "𝜿": [T: bold italic kappa] # 0x1d73f
- "": [T: bold italic lamda] # 0xf4a0
- "𝝀": [T: bold italic lamda] # 0x1d740
- "": [T: bold italic mu] # 0xf4a1
- "𝝁": [T: bold italic mu] # 0x1d741
- "": [T: bold italic nu] # 0xf4a2
- "𝝂": [T: bold italic nu] # 0x1d742
- "": [T: bold italic xi] # 0xf4a3
- "𝝃": [T: bold italic xi] # 0x1d743
- "": [T: bold italic omicron] # 0xf4a4
- "𝝄": [T: bold italic omicron] # 0x1d744
- "": [T: bold italic pi] # 0xf4a5
- "𝝅": [T: bold italic pi] # 0x1d745
- "": [T: bold italic rho] # 0xf4a6
- "𝝆": [T: bold italic rho] # 0x1d746
- "": [T: bold italic final sigma] # 0xf4a7
- "𝝇": [T: bold italic final sigma] # 0x1d747
- "": [T: bold italic sigma] # 0xf4a8
- "𝝈": [T: bold italic sigma] # 0x1d748
- "": [T: bold italic tau] # 0xf4a9
- "𝝉": [T: bold italic tau] # 0x1d749
- "": [T: bold italic upsilon] # 0xf4aa
- "𝝊": [T: bold italic upsilon] # 0x1d74a
- "": [T: bold italic phi] # 0xf4ab
- "𝝋": [T: bold italic phi] # 0x1d74b
- "": [T: bold italic chi] # 0xf4ac
- "𝝌": [T: bold italic chi] # 0x1d74c
- "": [T: bold italic psi] # 0xf4ad
- "𝝍": [T: bold italic psi] # 0x1d74d
- "": [T: bold italic omega] # 0xf4ae
- "𝝎": [T: bold italic omega] # 0x1d74e
- "": [T: bold partial differential] # 0xf4af
- "𝝏": [T: bold partial differential] # 0x1d74f
- "": [T: bold italic epsilon] # 0xf4b0
- "𝝐": [T: bold italic epsilon] # 0x1d750
- "": [T: bold italic theta] # 0xf4b1
- "𝝑": [T: bold italic theta] # 0x1d751
- "": [T: bold italic kappa] # 0xf4b2
- "𝝒": [T: bold italic kappa] # 0x1d752
- "": [T: bold italic phi] # 0xf4b3
- "𝝓": [T: bold italic phi] # 0x1d753
- "": [T: bold italic rho] # 0xf4b4
- "𝝔": [T: bold italic rho] # 0x1d754
- "": [T: bold italic pi] # 0xf4b5
- "𝝕": [T: bold italic pi] # 0x1d755
- "": # 0xf4b6
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: alpha
- "𝝖": # 0x1d756
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: alpha
- "": # 0xf4b7
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: beta
- "𝝗": # 0x1d757
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: beta
- "": # 0xf4b8
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: gamma
- "𝝘": # 0x1d758
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: gamma
- "": # 0xf4b9
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: delta
- "𝝙": # 0x1d759
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: delta
- "": # 0xf4ba
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: epsilon
- "𝝚": # 0x1d75a
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: epsilon
- "": # 0xf4bb
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: zeta
- "𝝛": # 0x1d75b
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: zeta
- "": # 0xf4bc
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: eta
- "𝝜": # 0x1d75c
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: eta
- "": # 0xf4bd
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: theta
- "𝝝": # 0x1d75d
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: theta
- "": # 0xf4be
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: iota
- "𝝞": # 0x1d75e
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: iota
- "": # 0xf4bf
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: kappa
- "𝝟": # 0x1d75f
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: kappa
- "": # 0xf4c0
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: lamda
- "𝝠": # 0x1d760
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: lamda
- "": # 0xf4c1
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: mu
- "𝝡": # 0x1d761
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: mu
- "": # 0xf4c2
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: nu
- "𝝢": # 0x1d762
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: nu
- "": # 0xf4c3
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: xi
- "𝝣": # 0x1d763
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: xi
- "": # 0xf4c4
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: omicron
- "𝝤": # 0x1d764
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: omicron
- "": # 0xf4c5
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: pi
- "𝝥": # 0x1d765
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: pi
- "": # 0xf4c6
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: rho
- "𝝦": # 0x1d766
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: rho
- "": # 0xf4c7
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: theta
- "𝝧": # 0x1d767
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: theta
- "": # 0xf4c8
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: sigma
- "𝝨": # 0x1d768
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: sigma
- "": # 0xf4c9
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: tau
- "𝝩": # 0x1d769
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: tau
- "": # 0xf4ca
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: upsilon
- "𝝪": # 0x1d76a
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: upsilon
- "": # 0xf4cb
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: phi
- "𝝫": # 0x1d76b
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: phi
- "": # 0xf4cc
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: chi
- "𝝬": # 0x1d76c
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: chi
- "": # 0xf4cd
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: psi
- "𝝭": # 0x1d76d
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: psi
- "": # 0xf4ce
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: omega
- "𝝮": # 0x1d76e
    - T: bold
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: omega
- "": [T: bold nabla] # 0xf4cf
- "𝝯": [T: bold nabla] # 0x1d76f
- "": [T: bold  alpha] # 0xf4d0
- "𝝰": [T: bold  alpha] # 0x1d770
- "": [T: bold  beta] # 0xf4d1
- "𝝱": [T: bold  beta] # 0x1d771
- "": [T: bold  gamma] # 0xf4d2
- "𝝲": [T: bold  gamma] # 0x1d772
- "": [T: bold  delta] # 0xf4d3
- "𝝳": [T: bold  delta] # 0x1d773
- "": [T: bold  epsilon] # 0xf4d4
- "𝝴": [T: bold  epsilon] # 0x1d774
- "": [T: bold  zeta] # 0xf4d5
- "𝝵": [T: bold  zeta] # 0x1d775
- "": [T: bold  eta] # 0xf4d6
- "𝝶": [T: bold  eta] # 0x1d776
- "": [T: bold  theta] # 0xf4d7
- "𝝷": [T: bold  theta] # 0x1d777
- "": [T: bold  iota] # 0xf4d8
- "𝝸": [T: bold  iota] # 0x1d778
- "": [T: bold  kappa] # 0xf4d9
- "𝝹": [T: bold  kappa] # 0x1d779
- "": [T: bold  lamda] # 0xf4da
- "𝝺": [T: bold  lamda] # 0x1d77a
- "": [T: bold  mu] # 0xf4db
- "𝝻": [T: bold  mu] # 0x1d77b
- "": [T: bold  nu] # 0xf4dc
- "𝝼": [T: bold  nu] # 0x1d77c
- "": [T: bold  xi] # 0xf4dd
- "𝝽": [T: bold  xi] # 0x1d77d
- "": [T: bold  omicron] # 0xf4de
- "𝝾": [T: bold  omicron] # 0x1d77e
- "": [T: bold  pi] # 0xf4df
- "𝝿": [T: bold  pi] # 0x1d77f
- "": [T: bold  rho] # 0xf4e0
- "𝞀": [T: bold  rho] # 0x1d780
- "": [T: bold  final sigma] # 0xf4e1
- "𝞁": [T: bold  final sigma] # 0x1d781
- "": [T: bold  sigma] # 0xf4e2
- "𝞂": [T: bold  sigma] # 0x1d782
- "": [T: bold  tau] # 0xf4e3
- "𝞃": [T: bold  tau] # 0x1d783
- "": [T: bold  upsilon] # 0xf4e4
- "𝞄": [T: bold  upsilon] # 0x1d784
- "": [T: bold  phi] # 0xf4e5
- "𝞅": [T: bold  phi] # 0x1d785
- "": [T: bold  chi] # 0xf4e6
- "𝞆": [T: bold  chi] # 0x1d786
- "": [T: bold  psi] # 0xf4e7
- "𝞇": [T: bold  psi] # 0x1d787
- "": [T: bold  omega] # 0xf4e8
- "𝞈": [T: bold  omega] # 0x1d788
- "": [T: bold partial differential] # 0xf4e9
- "𝞉": [T: bold partial differential] # 0x1d789
- "": [T: bold epsilon] # 0xf4ea
- "𝞊": [T: bold epsilon] # 0x1d78a
- "": [T: bold theta] # 0xf4eb
- "𝞋": [T: bold theta] # 0x1d78b
- "": [T: bold kappa] # 0xf4ec
- "𝞌": [T: bold kappa] # 0x1d78c
- "": [T: bold phi] # 0xf4ed
- "𝞍": [T: bold phi] # 0x1d78d
- "": [T: bold rho] # 0xf4ee
- "𝞎": [T: bold rho] # 0x1d78e
- "": [T: bold pi] # 0xf4ef
- "𝞏": [T: bold pi] # 0x1d78f
- "": # 0xf4f0
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: alpha
- "𝞐": # 0x1d790
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: alpha
- "": # 0xf4f1
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: beta
- "𝞑": # 0x1d791
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: beta
- "": # 0xf4f2
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: gamma
- "𝞒": # 0x1d792
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: gamma
- "": # 0xf4f3
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: delta
- "𝞓": # 0x1d793
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: delta
- "": # 0xf4f4
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: epsilon
- "𝞔": # 0x1d794
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: epsilon
- "": # 0xf4f5
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: zeta
- "𝞕": # 0x1d795
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: zeta
- "": # 0xf4f6
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: eta
- "𝞖": # 0x1d796
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: eta
- "": # 0xf4f7
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: theta
- "𝞗": # 0x1d797
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: theta
- "": # 0xf4f8
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: iota
- "𝞘": # 0x1d798
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: iota
- "": # 0xf4f9
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: kappa
- "𝞙": # 0x1d799
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: kappa
- "": # 0xf4fa
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: lamda
- "𝞚": # 0x1d79a
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: lamda
- "": # 0xf4fb
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: mu
- "𝞛": # 0x1d79b
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: mu
- "": # 0xf4fc
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: nu
- "𝞜": # 0x1d79c
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: nu
- "": # 0xf4fd
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: xi
- "𝞝": # 0x1d79d
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: xi
- "": # 0xf4fe
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: omicron
- "𝞞": # 0x1d79e
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: omicron
- "": # 0xf4ff
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: pi
- "𝞟": # 0x1d79f
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: pi
- "": # 0xf500
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: rho
- "𝞠": # 0x1d7a0
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: rho
- "": # 0xf501
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: theta
- "𝞡": # 0x1d7a1
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: theta
- "": # 0xf502
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: sigma
- "𝞢": # 0x1d7a2
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: sigma
- "": # 0xf503
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: tau
- "𝞣": # 0x1d7a3
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: tau
- "": # 0xf504
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: upsilon
- "𝞤": # 0x1d7a4
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: upsilon
- "": # 0xf505
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: phi
- "𝞥": # 0x1d7a5
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: phi
- "": # 0xf506
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: chi
- "𝞦": # 0x1d7a6
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: chi
- "": # 0xf507
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: psi
- "𝞧": # 0x1d7a7
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: psi
- "": # 0xf508
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: omega
- "𝞨": # 0x1d7a8
    - T: bold italic
    - test:
        if: "($Blind or $Verbosity!='Terse')"
        then: { T: cap }
    - T: omega
- "": [T: bold nabla] # 0xf509
- "𝞩": [T: bold nabla] # 0x1d7a9
- "": [T: bold italic alpha] # 0xf50a
- "𝞪": [T: bold italic alpha] # 0x1d7aa
- "": [T: bold italic beta] # 0xf50b
- "𝞫": [T: bold italic beta] # 0x1d7ab
- "": [T: bold italic gamma] # 0xf50c
- "𝞬": [T: bold italic gamma] # 0x1d7ac
- "": [T: bold italic delta] # 0xf50d
- "𝞭": [T: bold italic delta] # 0x1d7ad
- "": [T: bold italic epsilon] # 0xf50e
- "𝞮": [T: bold italic epsilon] # 0x1d7ae
- "": [T: bold italic zeta] # 0xf50f
- "𝞯": [T: bold italic zeta] # 0x1d7af
- "": [T: bold italic eta] # 0xf510
- "𝞰": [T: bold italic eta] # 0x1d7b0
- "": [T: bold italic theta] # 0xf511
- "𝞱": [T: bold italic theta] # 0x1d7b1
- "": [T: bold italic iota] # 0xf512
- "𝞲": [T: bold italic iota] # 0x1d7b2
- "": [T: bold italic kappa] # 0xf513
- "𝞳": [T: bold italic kappa] # 0x1d7b3
- "": [T: bold italic lamda] # 0xf514
- "𝞴": [T: bold italic lamda] # 0x1d7b4
- "": [T: bold italic mu] # 0xf515
- "𝞵": [T: bold italic mu] # 0x1d7b5
- "": [T: bold italic nu] # 0xf516
- "𝞶": [T: bold italic nu] # 0x1d7b6
- "": [T: bold italic xi] # 0xf517
- "𝞷": [T: bold italic xi] # 0x1d7b7
- "": [T: bold italic omicron] # 0xf518
- "𝞸": [T: bold italic omicron] # 0x1d7b8
- "": [T: bold italic pi] # 0xf519
- "𝞹": [T: bold italic pi] # 0x1d7b9
- "": [T: bold italic rho] # 0xf51a
- "𝞺": [T: bold italic rho] # 0x1d7ba
- "": [T: bold italic final sigma] # 0xf51b
- "𝞻": [T: bold italic final sigma] # 0x1d7bb
- "": [T: bold italic sigma] # 0xf51c
- "𝞼": [T: bold italic sigma] # 0x1d7bc
- "": [T: bold italic tau] # 0xf51d
- "𝞽": [T: bold italic tau] # 0x1d7bd
- "": [T: bold italic upsilon] # 0xf51e
- "𝞾": [T: bold italic upsilon] # 0x1d7be
- "": [T: bold italic phi] # 0xf51f
- "𝞿": [T: bold italic phi] # 0x1d7bf
- "": [T: bold italic chi] # 0xf520
- "𝟀": [T: bold italic chi] # 0x1d7c0
- "": [T: bold italic psi] # 0xf521
- "𝟁": [T: bold italic psi] # 0x1d7c1
- "": [T: bold italic omega] # 0xf522
- "𝟂": [T: bold italic omega] # 0x1d7c2
- "": [T: bold partial differential] # 0xf523
- "𝟃": [T: bold partial differential] # 0x1d7c3
- "": [T: bold italic epsilon] # 0xf524
- "𝟄": [T: bold italic epsilon] # 0x1d7c4
- "": [T: bold italic theta] # 0xf525
- "𝟅": [T: bold italic theta] # 0x1d7c5
- "": [T: bold italic kappa] # 0xf526
- "𝟆": [T: bold italic kappa] # 0x1d7c6
- "": [T: bold italic phi] # 0xf527
- "𝟇": [T: bold italic phi] # 0x1d7c7
- "": [T: bold italic rho] # 0xf528
- "𝟈": [T: bold italic rho] # 0x1d7c8
- "": [T: bold italic pi] # 0xf529
- "𝟉": [T: bold italic pi] # 0x1d7c9
- "": [T: bold zero] # 0xf52e
- "𝟎": [T: bold zero] # 0x1d7ce
- "": [T: bold one] # 0xf52f
- "𝟏": [T: bold one] # 0x1d7cf
- "": [T: bold two] # 0xf530
- "𝟐": [T: bold two] # 0x1d7d0
- "": [T: bold three] # 0xf531
- "𝟑": [T: bold three] # 0x1d7d1
- "": [T: bold four] # 0xf532
- "𝟒": [T: bold four] # 0x1d7d2
- "": [T: bold five] # 0xf533
- "𝟓": [T: bold five] # 0x1d7d3
- "": [T: bold six] # 0xf534
- "𝟔": [T: bold six] # 0x1d7d4
- "": [T: bold seven] # 0xf535
- "𝟕": [T: bold seven] # 0x1d7d5
- "": [T: bold eight] # 0xf536
- "𝟖": [T: bold eight] # 0x1d7d6
- "": [T: bold nine] # 0xf537
- "𝟗": [T: bold nine] # 0x1d7d7
- "": [T: zero] # 0xf542
- "𝟢": [T: zero] # 0x1d7e2
- "": [T: one] # 0xf543
- "𝟣": [T: one] # 0x1d7e3
- "": [T: two] # 0xf544
- "𝟤": [T: two] # 0x1d7e4
- "": [T: three] # 0xf545
- "𝟥": [T: three] # 0x1d7e5
- "": [T: four] # 0xf546
- "𝟦": [T: four] # 0x1d7e6
- "": [T: five] # 0xf547
- "𝟧": [T: five] # 0x1d7e7
- "": [T: six] # 0xf548
- "𝟨": [T: six] # 0x1d7e8
- "": [T: seven] # 0xf549
- "𝟩": [T: seven] # 0x1d7e9
- "": [T: eight] # 0xf54a
- "𝟪": [T: eight] # 0x1d7ea
- "": [T: nine] # 0xf54b
- "𝟫": [T: nine] # 0x1d7eb
- "": [T: bold zero] # 0xf54c
- "𝟬": [T: bold zero] # 0x1d7ec
- "": [T: bold one] # 0xf54d
- "𝟭": [T: bold one] # 0x1d7ed
- "": [T: bold two] # 0xf54e
- "𝟮": [T: bold two] # 0x1d7ee
- "": [T: bold three] # 0xf54f
- "𝟯": [T: bold three] # 0x1d7ef
- "": [T: bold four] # 0xf550
- "𝟰": [T: bold four] # 0x1d7f0
- "": [T: bold five] # 0xf551
- "𝟱": [T: bold five] # 0x1d7f1
- "": [T: bold six] # 0xf552
- "𝟲": [T: bold six] # 0x1d7f2
- "": [T: bold seven] # 0xf553
- "𝟳": [T: bold seven] # 0x1d7f3
- "": [T: bold eight] # 0xf554
- "𝟴": [T: bold eight] # 0x1d7f4
- "": [T: bold nine] # 0xf555
- "𝟵": [T: bold nine] # 0x1d7f5
- "": [T: zero] # 0xf556
- "𝟶": [T: zero] # 0x1d7f6
- "": [T: one] # 0xf557
- "𝟷": [T: one] # 0x1d7f7
- "": [T: two] # 0xf558
- "𝟸": [T: two] # 0x1d7f8
- "": [T: three] # 0xf559
- "𝟹": [T: three] # 0x1d7f9
- "": [T: four] # 0xf55a
- "𝟺": [T: four] # 0x1d7fa
- "": [T: five] # 0xf55b
- "𝟻": [T: five] # 0x1d7fb
- "": [T: six] # 0xf55c
- "𝟼": [T: six] # 0x1d7fc
- "": [T: seven] # 0xf55d
- "𝟽": [T: seven] # 0x1d7fd
- "": [T: eight] # 0xf55e
- "𝟾": [T: eight] # 0x1d7fe
- "": [T: nine] # 0xf55f
- "𝟿": [T: nine] # 0x1d7ff
- "": [T: unknown character] # 0xf700
- "": [T: lower right and lower left triangles] # 0xf726
- "": [T: horizontal ellipsis extender] # 0xf72d
- "": [T: midline horizontal ellipsis extender] # 0xf72e
- "": [T: radical extender] # 0xf8e5
- "": [T: vertical arrow extender] # 0xf8e6
- "": [T: horizontal arrow extender] # 0xf8e7
- "": [T: registered sign sans serif] # 0xf8e8
- "": [T: copyright sign sans serif] # 0xf8e9
- "": [T: trade mark sign sans serif] # 0xf8ea
- "": [T: left paren top] # 0xf8eb
- "": [T: left paren extender] # 0xf8ec
- "": [T: left paren bottom] # 0xf8ed
- "": [T: left bracket top] # 0xf8ee
- "": [T: left bracket extender] # 0xf8ef
- "": [T: left bracket bottom] # 0xf8f0
- "": [T: left brace top] # 0xf8f1
- "": [T: left brace mid] # 0xf8f2
- "": [T: left brace bottom] # 0xf8f3
- "": [T: brace extender] # 0xf8f4
- "": [T: integral extender] # 0xf8f5
- "": [T: right paren top] # 0xf8f6
- "": [T: right paren extender] # 0xf8f7
- "": [T: right paren bottom] # 0xf8f8
- "": [T: right bracket top] # 0xf8f9
- "": [T: right bracket extender] # 0xf8fa
- "": [T: right bracket bottom] # 0xf8fb
- "": [T: right brace top] # 0xf8fc
- "": [T: right brace mid] # 0xf8fd
- "": [T: right brace bottom] # 0xf8fe
- "": [T: apple logo] # 0xf8ff
- "ﬀ": [T: ff] # 0xfb00
- "ﬁ": [T: fi] # 0xfb01
- "ﬂ": [T: fl] # 0xfb02
- "ﬃ": [T: ffi] # 0xfb03
- "ﬄ": [T: ffl] # 0xfb04
- "ﬅ": [T: ft] # 0xfb05
- "ﬆ": [T: st] # 0xfb06
- "︠": [T: ligature left half embellishment] # 0xfe20
- "︡": [T: ligature right half embellishment] # 0xfe21
- "︢": [T: double tilde left half embellishment] # 0xfe22
- "︣": [T: double tilde right half embellishment] # 0xfe23
- "︤": [T: macron left half embellishment] # 0xfe24
- "︥": [T: macron right half embellishment] # 0xfe25
- "︦": [T: conjoining macron embellishment] # 0xfe26
- "︵": [T: over paren] # 0xfe35
- "︶": [T: under paren] # 0xfe36
- "︷": [T: over brace] # 0xfe37
- "︸": [T: under brace] # 0xfe38
- "︿": [T: over angle bracket] # 0xfe3f
- "﹀": [T: under angle bracket] # 0xfe40
- "﹨": [T: pembagian bilangan bulat] # 0xfe68
- "￼": [T: objek tidak diketahui atau hilang] # 0xfffc
- "�": [T: karakter tidak diketahui atau hilang] # 0xfffd
